// Code generated by protoc-gen-go. DO NOT EDIT.
// source: server.proto

package chain

import (
	context "context"
	fmt "fmt"
	dex2 "git.bibox.com/dextop/common.git/proto/dex2"
	dex2fe "git.bibox.com/dextop/common.git/proto/dex2fe"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetMarketRequest struct {
	ChainToken           string   `protobuf:"bytes,1,opt,name=chain_token,json=chainToken,proto3" json:"chain_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMarketRequest) Reset()         { *m = GetMarketRequest{} }
func (m *GetMarketRequest) String() string { return proto.CompactTextString(m) }
func (*GetMarketRequest) ProtoMessage()    {}
func (*GetMarketRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{0}
}

func (m *GetMarketRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMarketRequest.Unmarshal(m, b)
}
func (m *GetMarketRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMarketRequest.Marshal(b, m, deterministic)
}
func (m *GetMarketRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMarketRequest.Merge(m, src)
}
func (m *GetMarketRequest) XXX_Size() int {
	return xxx_messageInfo_GetMarketRequest.Size(m)
}
func (m *GetMarketRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMarketRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMarketRequest proto.InternalMessageInfo

func (m *GetMarketRequest) GetChainToken() string {
	if m != nil {
		return m.ChainToken
	}
	return ""
}

type GetMarketResponse struct {
	MarketData           map[string]*MarketData `protobuf:"bytes,1,rep,name=marketData,proto3" json:"marketData,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *GetMarketResponse) Reset()         { *m = GetMarketResponse{} }
func (m *GetMarketResponse) String() string { return proto.CompactTextString(m) }
func (*GetMarketResponse) ProtoMessage()    {}
func (*GetMarketResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{1}
}

func (m *GetMarketResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMarketResponse.Unmarshal(m, b)
}
func (m *GetMarketResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMarketResponse.Marshal(b, m, deterministic)
}
func (m *GetMarketResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMarketResponse.Merge(m, src)
}
func (m *GetMarketResponse) XXX_Size() int {
	return xxx_messageInfo_GetMarketResponse.Size(m)
}
func (m *GetMarketResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMarketResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMarketResponse proto.InternalMessageInfo

func (m *GetMarketResponse) GetMarketData() map[string]*MarketData {
	if m != nil {
		return m.MarketData
	}
	return nil
}

type MarketData struct {
	MarketAddr           string               `protobuf:"bytes,1,opt,name=market_addr,json=marketAddr,proto3" json:"market_addr,omitempty"`
	Label                dex2.MarketLabel     `protobuf:"varint,2,opt,name=label,proto3,enum=dex.MarketLabel" json:"label,omitempty"`
	Config               *dex2fe.MarketConfig `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *MarketData) Reset()         { *m = MarketData{} }
func (m *MarketData) String() string { return proto.CompactTextString(m) }
func (*MarketData) ProtoMessage()    {}
func (*MarketData) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{2}
}

func (m *MarketData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketData.Unmarshal(m, b)
}
func (m *MarketData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketData.Marshal(b, m, deterministic)
}
func (m *MarketData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketData.Merge(m, src)
}
func (m *MarketData) XXX_Size() int {
	return xxx_messageInfo_MarketData.Size(m)
}
func (m *MarketData) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketData.DiscardUnknown(m)
}

var xxx_messageInfo_MarketData proto.InternalMessageInfo

func (m *MarketData) GetMarketAddr() string {
	if m != nil {
		return m.MarketAddr
	}
	return ""
}

func (m *MarketData) GetLabel() dex2.MarketLabel {
	if m != nil {
		return m.Label
	}
	return dex2.MarketLabel_NoneLabel
}

func (m *MarketData) GetConfig() *dex2fe.MarketConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

type GetBalancesRequest struct {
	Trader               string   `protobuf:"bytes,1,opt,name=trader,proto3" json:"trader,omitempty"`
	ChainToken           string   `protobuf:"bytes,2,opt,name=chain_token,json=chainToken,proto3" json:"chain_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBalancesRequest) Reset()         { *m = GetBalancesRequest{} }
func (m *GetBalancesRequest) String() string { return proto.CompactTextString(m) }
func (*GetBalancesRequest) ProtoMessage()    {}
func (*GetBalancesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{3}
}

func (m *GetBalancesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBalancesRequest.Unmarshal(m, b)
}
func (m *GetBalancesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBalancesRequest.Marshal(b, m, deterministic)
}
func (m *GetBalancesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBalancesRequest.Merge(m, src)
}
func (m *GetBalancesRequest) XXX_Size() int {
	return xxx_messageInfo_GetBalancesRequest.Size(m)
}
func (m *GetBalancesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBalancesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBalancesRequest proto.InternalMessageInfo

func (m *GetBalancesRequest) GetTrader() string {
	if m != nil {
		return m.Trader
	}
	return ""
}

func (m *GetBalancesRequest) GetChainToken() string {
	if m != nil {
		return m.ChainToken
	}
	return ""
}

type GetBalancesResponse struct {
	Trader               string          `protobuf:"bytes,1,opt,name=trader,proto3" json:"trader,omitempty"`
	Balances             []*TokenBalance `protobuf:"bytes,2,rep,name=balances,proto3" json:"balances,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetBalancesResponse) Reset()         { *m = GetBalancesResponse{} }
func (m *GetBalancesResponse) String() string { return proto.CompactTextString(m) }
func (*GetBalancesResponse) ProtoMessage()    {}
func (*GetBalancesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{4}
}

func (m *GetBalancesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBalancesResponse.Unmarshal(m, b)
}
func (m *GetBalancesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBalancesResponse.Marshal(b, m, deterministic)
}
func (m *GetBalancesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBalancesResponse.Merge(m, src)
}
func (m *GetBalancesResponse) XXX_Size() int {
	return xxx_messageInfo_GetBalancesResponse.Size(m)
}
func (m *GetBalancesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBalancesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBalancesResponse proto.InternalMessageInfo

func (m *GetBalancesResponse) GetTrader() string {
	if m != nil {
		return m.Trader
	}
	return ""
}

func (m *GetBalancesResponse) GetBalances() []*TokenBalance {
	if m != nil {
		return m.Balances
	}
	return nil
}

type TokenBalance struct {
	// This id of this token.
	TokenSymbol string `protobuf:"bytes,1,opt,name=token_symbol,json=tokenSymbol,proto3" json:"token_symbol,omitempty"`
	// The total amount (multiplied by 1e8), including the locked part, NOT including the pending withdraw.
	TotalE8  uint64 `protobuf:"varint,2,opt,name=total_e8,json=totalE8,proto3" json:"total_e8,omitempty"`
	ActiveE8 uint64 `protobuf:"varint,3,opt,name=active_e8,json=activeE8,proto3" json:"active_e8,omitempty"`
	// The amount (multiplied by 1e8) locked due to, for example, having active orders. This part
	// will be subtracted from the quota of withdrawing and placing new orders.
	LockedE8 uint64 `protobuf:"varint,4,opt,name=locked_e8,json=lockedE8,proto3" json:"locked_e8,omitempty"`
	// 提现中的金额。
	Withdrawing          uint64   `protobuf:"varint,5,opt,name=withdrawing,proto3" json:"withdrawing,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokenBalance) Reset()         { *m = TokenBalance{} }
func (m *TokenBalance) String() string { return proto.CompactTextString(m) }
func (*TokenBalance) ProtoMessage()    {}
func (*TokenBalance) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{5}
}

func (m *TokenBalance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenBalance.Unmarshal(m, b)
}
func (m *TokenBalance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenBalance.Marshal(b, m, deterministic)
}
func (m *TokenBalance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenBalance.Merge(m, src)
}
func (m *TokenBalance) XXX_Size() int {
	return xxx_messageInfo_TokenBalance.Size(m)
}
func (m *TokenBalance) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenBalance.DiscardUnknown(m)
}

var xxx_messageInfo_TokenBalance proto.InternalMessageInfo

func (m *TokenBalance) GetTokenSymbol() string {
	if m != nil {
		return m.TokenSymbol
	}
	return ""
}

func (m *TokenBalance) GetTotalE8() uint64 {
	if m != nil {
		return m.TotalE8
	}
	return 0
}

func (m *TokenBalance) GetActiveE8() uint64 {
	if m != nil {
		return m.ActiveE8
	}
	return 0
}

func (m *TokenBalance) GetLockedE8() uint64 {
	if m != nil {
		return m.LockedE8
	}
	return 0
}

func (m *TokenBalance) GetWithdrawing() uint64 {
	if m != nil {
		return m.Withdrawing
	}
	return 0
}

type GetTradingConfigRequest struct {
	// 要查看的网络配置，默认为ETH。
	ChainToken string `protobuf:"bytes,1,opt,name=chain_token,json=chainToken,proto3" json:"chain_token,omitempty"`
	// 要查看的计价货币，默认为ETH。
	CashTokenSymbol      string   `protobuf:"bytes,2,opt,name=cash_token_symbol,json=cashTokenSymbol,proto3" json:"cash_token_symbol,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTradingConfigRequest) Reset()         { *m = GetTradingConfigRequest{} }
func (m *GetTradingConfigRequest) String() string { return proto.CompactTextString(m) }
func (*GetTradingConfigRequest) ProtoMessage()    {}
func (*GetTradingConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{6}
}

func (m *GetTradingConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTradingConfigRequest.Unmarshal(m, b)
}
func (m *GetTradingConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTradingConfigRequest.Marshal(b, m, deterministic)
}
func (m *GetTradingConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTradingConfigRequest.Merge(m, src)
}
func (m *GetTradingConfigRequest) XXX_Size() int {
	return xxx_messageInfo_GetTradingConfigRequest.Size(m)
}
func (m *GetTradingConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTradingConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTradingConfigRequest proto.InternalMessageInfo

func (m *GetTradingConfigRequest) GetChainToken() string {
	if m != nil {
		return m.ChainToken
	}
	return ""
}

func (m *GetTradingConfigRequest) GetCashTokenSymbol() string {
	if m != nil {
		return m.CashTokenSymbol
	}
	return ""
}

type GetTradingConfigResponse struct {
	TradingConfig        *dex2fe.TradingConfig `protobuf:"bytes,1,opt,name=trading_config,json=tradingConfig,proto3" json:"trading_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *GetTradingConfigResponse) Reset()         { *m = GetTradingConfigResponse{} }
func (m *GetTradingConfigResponse) String() string { return proto.CompactTextString(m) }
func (*GetTradingConfigResponse) ProtoMessage()    {}
func (*GetTradingConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{7}
}

func (m *GetTradingConfigResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTradingConfigResponse.Unmarshal(m, b)
}
func (m *GetTradingConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTradingConfigResponse.Marshal(b, m, deterministic)
}
func (m *GetTradingConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTradingConfigResponse.Merge(m, src)
}
func (m *GetTradingConfigResponse) XXX_Size() int {
	return xxx_messageInfo_GetTradingConfigResponse.Size(m)
}
func (m *GetTradingConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTradingConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTradingConfigResponse proto.InternalMessageInfo

func (m *GetTradingConfigResponse) GetTradingConfig() *dex2fe.TradingConfig {
	if m != nil {
		return m.TradingConfig
	}
	return nil
}

type GetCoinPairListRequest struct {
	// 要查看的网络配置。
	ChainToken string `protobuf:"bytes,1,opt,name=chain_token,json=chainToken,proto3" json:"chain_token,omitempty"`
	// 要查看的计价货币。可空
	CashTokenSymbol      string   `protobuf:"bytes,2,opt,name=cash_token_symbol,json=cashTokenSymbol,proto3" json:"cash_token_symbol,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCoinPairListRequest) Reset()         { *m = GetCoinPairListRequest{} }
func (m *GetCoinPairListRequest) String() string { return proto.CompactTextString(m) }
func (*GetCoinPairListRequest) ProtoMessage()    {}
func (*GetCoinPairListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{8}
}

func (m *GetCoinPairListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCoinPairListRequest.Unmarshal(m, b)
}
func (m *GetCoinPairListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCoinPairListRequest.Marshal(b, m, deterministic)
}
func (m *GetCoinPairListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCoinPairListRequest.Merge(m, src)
}
func (m *GetCoinPairListRequest) XXX_Size() int {
	return xxx_messageInfo_GetCoinPairListRequest.Size(m)
}
func (m *GetCoinPairListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCoinPairListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCoinPairListRequest proto.InternalMessageInfo

func (m *GetCoinPairListRequest) GetChainToken() string {
	if m != nil {
		return m.ChainToken
	}
	return ""
}

func (m *GetCoinPairListRequest) GetCashTokenSymbol() string {
	if m != nil {
		return m.CashTokenSymbol
	}
	return ""
}

type GetCoinPairListResponse struct {
	PairList             []*CoinPair `protobuf:"bytes,1,rep,name=pairList,proto3" json:"pairList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetCoinPairListResponse) Reset()         { *m = GetCoinPairListResponse{} }
func (m *GetCoinPairListResponse) String() string { return proto.CompactTextString(m) }
func (*GetCoinPairListResponse) ProtoMessage()    {}
func (*GetCoinPairListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{9}
}

func (m *GetCoinPairListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCoinPairListResponse.Unmarshal(m, b)
}
func (m *GetCoinPairListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCoinPairListResponse.Marshal(b, m, deterministic)
}
func (m *GetCoinPairListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCoinPairListResponse.Merge(m, src)
}
func (m *GetCoinPairListResponse) XXX_Size() int {
	return xxx_messageInfo_GetCoinPairListResponse.Size(m)
}
func (m *GetCoinPairListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCoinPairListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCoinPairListResponse proto.InternalMessageInfo

func (m *GetCoinPairListResponse) GetPairList() []*CoinPair {
	if m != nil {
		return m.PairList
	}
	return nil
}

type GetOrdersOfTraderRequest struct {
	Trader               string   `protobuf:"bytes,1,opt,name=trader,proto3" json:"trader,omitempty"`
	ChainToken           string   `protobuf:"bytes,2,opt,name=chain_token,json=chainToken,proto3" json:"chain_token,omitempty"`
	CashTokenSymbol      string   `protobuf:"bytes,3,opt,name=cash_token_symbol,json=cashTokenSymbol,proto3" json:"cash_token_symbol,omitempty"`
	StockTokenSymbol     string   `protobuf:"bytes,4,opt,name=stock_token_symbol,json=stockTokenSymbol,proto3" json:"stock_token_symbol,omitempty"`
	OrderType            int32    `protobuf:"varint,5,opt,name=order_type,json=orderType,proto3" json:"order_type,omitempty"`
	Page                 int32    `protobuf:"varint,6,opt,name=page,proto3" json:"page,omitempty"`
	PageSize             int32    `protobuf:"varint,7,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	FromTimeSec          int64    `protobuf:"varint,8,opt,name=from_time_sec,json=fromTimeSec,proto3" json:"from_time_sec,omitempty"`
	ToTimeSec            int64    `protobuf:"varint,9,opt,name=to_time_sec,json=toTimeSec,proto3" json:"to_time_sec,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetOrdersOfTraderRequest) Reset()         { *m = GetOrdersOfTraderRequest{} }
func (m *GetOrdersOfTraderRequest) String() string { return proto.CompactTextString(m) }
func (*GetOrdersOfTraderRequest) ProtoMessage()    {}
func (*GetOrdersOfTraderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{10}
}

func (m *GetOrdersOfTraderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOrdersOfTraderRequest.Unmarshal(m, b)
}
func (m *GetOrdersOfTraderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOrdersOfTraderRequest.Marshal(b, m, deterministic)
}
func (m *GetOrdersOfTraderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOrdersOfTraderRequest.Merge(m, src)
}
func (m *GetOrdersOfTraderRequest) XXX_Size() int {
	return xxx_messageInfo_GetOrdersOfTraderRequest.Size(m)
}
func (m *GetOrdersOfTraderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOrdersOfTraderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetOrdersOfTraderRequest proto.InternalMessageInfo

func (m *GetOrdersOfTraderRequest) GetTrader() string {
	if m != nil {
		return m.Trader
	}
	return ""
}

func (m *GetOrdersOfTraderRequest) GetChainToken() string {
	if m != nil {
		return m.ChainToken
	}
	return ""
}

func (m *GetOrdersOfTraderRequest) GetCashTokenSymbol() string {
	if m != nil {
		return m.CashTokenSymbol
	}
	return ""
}

func (m *GetOrdersOfTraderRequest) GetStockTokenSymbol() string {
	if m != nil {
		return m.StockTokenSymbol
	}
	return ""
}

func (m *GetOrdersOfTraderRequest) GetOrderType() int32 {
	if m != nil {
		return m.OrderType
	}
	return 0
}

func (m *GetOrdersOfTraderRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetOrdersOfTraderRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *GetOrdersOfTraderRequest) GetFromTimeSec() int64 {
	if m != nil {
		return m.FromTimeSec
	}
	return 0
}

func (m *GetOrdersOfTraderRequest) GetToTimeSec() int64 {
	if m != nil {
		return m.ToTimeSec
	}
	return 0
}

type GetOrdersOfTraderResponse struct {
	Orders               []*Order `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
	Page                 int32    `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Total                int32    `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetOrdersOfTraderResponse) Reset()         { *m = GetOrdersOfTraderResponse{} }
func (m *GetOrdersOfTraderResponse) String() string { return proto.CompactTextString(m) }
func (*GetOrdersOfTraderResponse) ProtoMessage()    {}
func (*GetOrdersOfTraderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{11}
}

func (m *GetOrdersOfTraderResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOrdersOfTraderResponse.Unmarshal(m, b)
}
func (m *GetOrdersOfTraderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOrdersOfTraderResponse.Marshal(b, m, deterministic)
}
func (m *GetOrdersOfTraderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOrdersOfTraderResponse.Merge(m, src)
}
func (m *GetOrdersOfTraderResponse) XXX_Size() int {
	return xxx_messageInfo_GetOrdersOfTraderResponse.Size(m)
}
func (m *GetOrdersOfTraderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOrdersOfTraderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetOrdersOfTraderResponse proto.InternalMessageInfo

func (m *GetOrdersOfTraderResponse) GetOrders() []*Order {
	if m != nil {
		return m.Orders
	}
	return nil
}

func (m *GetOrdersOfTraderResponse) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetOrdersOfTraderResponse) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type GetOrderByIdRequest struct {
	Trader               string   `protobuf:"bytes,1,opt,name=trader,proto3" json:"trader,omitempty"`
	ChainToken           string   `protobuf:"bytes,2,opt,name=chain_token,json=chainToken,proto3" json:"chain_token,omitempty"`
	OrderId              int64    `protobuf:"varint,3,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetOrderByIdRequest) Reset()         { *m = GetOrderByIdRequest{} }
func (m *GetOrderByIdRequest) String() string { return proto.CompactTextString(m) }
func (*GetOrderByIdRequest) ProtoMessage()    {}
func (*GetOrderByIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{12}
}

func (m *GetOrderByIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOrderByIdRequest.Unmarshal(m, b)
}
func (m *GetOrderByIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOrderByIdRequest.Marshal(b, m, deterministic)
}
func (m *GetOrderByIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOrderByIdRequest.Merge(m, src)
}
func (m *GetOrderByIdRequest) XXX_Size() int {
	return xxx_messageInfo_GetOrderByIdRequest.Size(m)
}
func (m *GetOrderByIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOrderByIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetOrderByIdRequest proto.InternalMessageInfo

func (m *GetOrderByIdRequest) GetTrader() string {
	if m != nil {
		return m.Trader
	}
	return ""
}

func (m *GetOrderByIdRequest) GetChainToken() string {
	if m != nil {
		return m.ChainToken
	}
	return ""
}

func (m *GetOrderByIdRequest) GetOrderId() int64 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

type GetOrderByIdResponse struct {
	Order                *Order   `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetOrderByIdResponse) Reset()         { *m = GetOrderByIdResponse{} }
func (m *GetOrderByIdResponse) String() string { return proto.CompactTextString(m) }
func (*GetOrderByIdResponse) ProtoMessage()    {}
func (*GetOrderByIdResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{13}
}

func (m *GetOrderByIdResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOrderByIdResponse.Unmarshal(m, b)
}
func (m *GetOrderByIdResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOrderByIdResponse.Marshal(b, m, deterministic)
}
func (m *GetOrderByIdResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOrderByIdResponse.Merge(m, src)
}
func (m *GetOrderByIdResponse) XXX_Size() int {
	return xxx_messageInfo_GetOrderByIdResponse.Size(m)
}
func (m *GetOrderByIdResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOrderByIdResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetOrderByIdResponse proto.InternalMessageInfo

func (m *GetOrderByIdResponse) GetOrder() *Order {
	if m != nil {
		return m.Order
	}
	return nil
}

type PlaceOrderRequest struct {
	Trader string `protobuf:"bytes,1,opt,name=trader,proto3" json:"trader,omitempty"`
	// 用户来源： 登陆签名工具名称。
	UserFrom         string `protobuf:"bytes,2,opt,name=user_from,json=userFrom,proto3" json:"user_from,omitempty"`
	Action           int32  `protobuf:"varint,3,opt,name=action,proto3" json:"action,omitempty"`
	Type             int32  `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	StockTokenSymbol string `protobuf:"bytes,5,opt,name=stock_token_symbol,json=stockTokenSymbol,proto3" json:"stock_token_symbol,omitempty"`
	CashTokenSymbol  string `protobuf:"bytes,6,opt,name=cash_token_symbol,json=cashTokenSymbol,proto3" json:"cash_token_symbol,omitempty"`
	PriceE8          uint64 `protobuf:"varint,7,opt,name=price_e8,json=priceE8,proto3" json:"price_e8,omitempty"`
	AmountE8         uint64 `protobuf:"varint,8,opt,name=amount_e8,json=amountE8,proto3" json:"amount_e8,omitempty"`
	ExpireTime       int64  `protobuf:"varint,9,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`
	OrderSign        string `protobuf:"bytes,10,opt,name=order_sign,json=orderSign,proto3" json:"order_sign,omitempty"`
	// User-Agent
	Ua                   string   `protobuf:"bytes,11,opt,name=ua,proto3" json:"ua,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlaceOrderRequest) Reset()         { *m = PlaceOrderRequest{} }
func (m *PlaceOrderRequest) String() string { return proto.CompactTextString(m) }
func (*PlaceOrderRequest) ProtoMessage()    {}
func (*PlaceOrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{14}
}

func (m *PlaceOrderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlaceOrderRequest.Unmarshal(m, b)
}
func (m *PlaceOrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlaceOrderRequest.Marshal(b, m, deterministic)
}
func (m *PlaceOrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlaceOrderRequest.Merge(m, src)
}
func (m *PlaceOrderRequest) XXX_Size() int {
	return xxx_messageInfo_PlaceOrderRequest.Size(m)
}
func (m *PlaceOrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PlaceOrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PlaceOrderRequest proto.InternalMessageInfo

func (m *PlaceOrderRequest) GetTrader() string {
	if m != nil {
		return m.Trader
	}
	return ""
}

func (m *PlaceOrderRequest) GetUserFrom() string {
	if m != nil {
		return m.UserFrom
	}
	return ""
}

func (m *PlaceOrderRequest) GetAction() int32 {
	if m != nil {
		return m.Action
	}
	return 0
}

func (m *PlaceOrderRequest) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *PlaceOrderRequest) GetStockTokenSymbol() string {
	if m != nil {
		return m.StockTokenSymbol
	}
	return ""
}

func (m *PlaceOrderRequest) GetCashTokenSymbol() string {
	if m != nil {
		return m.CashTokenSymbol
	}
	return ""
}

func (m *PlaceOrderRequest) GetPriceE8() uint64 {
	if m != nil {
		return m.PriceE8
	}
	return 0
}

func (m *PlaceOrderRequest) GetAmountE8() uint64 {
	if m != nil {
		return m.AmountE8
	}
	return 0
}

func (m *PlaceOrderRequest) GetExpireTime() int64 {
	if m != nil {
		return m.ExpireTime
	}
	return 0
}

func (m *PlaceOrderRequest) GetOrderSign() string {
	if m != nil {
		return m.OrderSign
	}
	return ""
}

func (m *PlaceOrderRequest) GetUa() string {
	if m != nil {
		return m.Ua
	}
	return ""
}

// Error information, if any, will be returned as status.
type PlaceOrderResponse struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlaceOrderResponse) Reset()         { *m = PlaceOrderResponse{} }
func (m *PlaceOrderResponse) String() string { return proto.CompactTextString(m) }
func (*PlaceOrderResponse) ProtoMessage()    {}
func (*PlaceOrderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{15}
}

func (m *PlaceOrderResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlaceOrderResponse.Unmarshal(m, b)
}
func (m *PlaceOrderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlaceOrderResponse.Marshal(b, m, deterministic)
}
func (m *PlaceOrderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlaceOrderResponse.Merge(m, src)
}
func (m *PlaceOrderResponse) XXX_Size() int {
	return xxx_messageInfo_PlaceOrderResponse.Size(m)
}
func (m *PlaceOrderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PlaceOrderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PlaceOrderResponse proto.InternalMessageInfo

func (m *PlaceOrderResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type CancelOrderRequest struct {
	Trader               string   `protobuf:"bytes,1,opt,name=trader,proto3" json:"trader,omitempty"`
	StockTokenSymbol     string   `protobuf:"bytes,2,opt,name=stock_token_symbol,json=stockTokenSymbol,proto3" json:"stock_token_symbol,omitempty"`
	CashTokenSymbol      string   `protobuf:"bytes,3,opt,name=cash_token_symbol,json=cashTokenSymbol,proto3" json:"cash_token_symbol,omitempty"`
	OrderId              int64    `protobuf:"varint,4,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelOrderRequest) Reset()         { *m = CancelOrderRequest{} }
func (m *CancelOrderRequest) String() string { return proto.CompactTextString(m) }
func (*CancelOrderRequest) ProtoMessage()    {}
func (*CancelOrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{16}
}

func (m *CancelOrderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelOrderRequest.Unmarshal(m, b)
}
func (m *CancelOrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelOrderRequest.Marshal(b, m, deterministic)
}
func (m *CancelOrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelOrderRequest.Merge(m, src)
}
func (m *CancelOrderRequest) XXX_Size() int {
	return xxx_messageInfo_CancelOrderRequest.Size(m)
}
func (m *CancelOrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelOrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CancelOrderRequest proto.InternalMessageInfo

func (m *CancelOrderRequest) GetTrader() string {
	if m != nil {
		return m.Trader
	}
	return ""
}

func (m *CancelOrderRequest) GetStockTokenSymbol() string {
	if m != nil {
		return m.StockTokenSymbol
	}
	return ""
}

func (m *CancelOrderRequest) GetCashTokenSymbol() string {
	if m != nil {
		return m.CashTokenSymbol
	}
	return ""
}

func (m *CancelOrderRequest) GetOrderId() int64 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

// Error information, if any, will be returned as status.
type CancelOrderResponse struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelOrderResponse) Reset()         { *m = CancelOrderResponse{} }
func (m *CancelOrderResponse) String() string { return proto.CompactTextString(m) }
func (*CancelOrderResponse) ProtoMessage()    {}
func (*CancelOrderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{17}
}

func (m *CancelOrderResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelOrderResponse.Unmarshal(m, b)
}
func (m *CancelOrderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelOrderResponse.Marshal(b, m, deterministic)
}
func (m *CancelOrderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelOrderResponse.Merge(m, src)
}
func (m *CancelOrderResponse) XXX_Size() int {
	return xxx_messageInfo_CancelOrderResponse.Size(m)
}
func (m *CancelOrderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelOrderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CancelOrderResponse proto.InternalMessageInfo

func (m *CancelOrderResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type CancelOrdersByTraderRequest struct {
	Trader               string   `protobuf:"bytes,1,opt,name=trader,proto3" json:"trader,omitempty"`
	StockTokenSymbol     string   `protobuf:"bytes,2,opt,name=stock_token_symbol,json=stockTokenSymbol,proto3" json:"stock_token_symbol,omitempty"`
	CashTokenSymbol      string   `protobuf:"bytes,3,opt,name=cash_token_symbol,json=cashTokenSymbol,proto3" json:"cash_token_symbol,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelOrdersByTraderRequest) Reset()         { *m = CancelOrdersByTraderRequest{} }
func (m *CancelOrdersByTraderRequest) String() string { return proto.CompactTextString(m) }
func (*CancelOrdersByTraderRequest) ProtoMessage()    {}
func (*CancelOrdersByTraderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{18}
}

func (m *CancelOrdersByTraderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelOrdersByTraderRequest.Unmarshal(m, b)
}
func (m *CancelOrdersByTraderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelOrdersByTraderRequest.Marshal(b, m, deterministic)
}
func (m *CancelOrdersByTraderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelOrdersByTraderRequest.Merge(m, src)
}
func (m *CancelOrdersByTraderRequest) XXX_Size() int {
	return xxx_messageInfo_CancelOrdersByTraderRequest.Size(m)
}
func (m *CancelOrdersByTraderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelOrdersByTraderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CancelOrdersByTraderRequest proto.InternalMessageInfo

func (m *CancelOrdersByTraderRequest) GetTrader() string {
	if m != nil {
		return m.Trader
	}
	return ""
}

func (m *CancelOrdersByTraderRequest) GetStockTokenSymbol() string {
	if m != nil {
		return m.StockTokenSymbol
	}
	return ""
}

func (m *CancelOrdersByTraderRequest) GetCashTokenSymbol() string {
	if m != nil {
		return m.CashTokenSymbol
	}
	return ""
}

// Notes:
// - No order is cancelled if an error is returned.
// - An order will be skipped if it is not found, or has already been cancelled, or does not belong
//   to the trader. Such cases are not regarded as errors.
type CancelOrdersByTraderResponse struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelOrdersByTraderResponse) Reset()         { *m = CancelOrdersByTraderResponse{} }
func (m *CancelOrdersByTraderResponse) String() string { return proto.CompactTextString(m) }
func (*CancelOrdersByTraderResponse) ProtoMessage()    {}
func (*CancelOrdersByTraderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{19}
}

func (m *CancelOrdersByTraderResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelOrdersByTraderResponse.Unmarshal(m, b)
}
func (m *CancelOrdersByTraderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelOrdersByTraderResponse.Marshal(b, m, deterministic)
}
func (m *CancelOrdersByTraderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelOrdersByTraderResponse.Merge(m, src)
}
func (m *CancelOrdersByTraderResponse) XXX_Size() int {
	return xxx_messageInfo_CancelOrdersByTraderResponse.Size(m)
}
func (m *CancelOrdersByTraderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelOrdersByTraderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CancelOrdersByTraderResponse proto.InternalMessageInfo

func (m *CancelOrdersByTraderResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type GetTransferRecordRequest struct {
	Trader               string   `protobuf:"bytes,1,opt,name=trader,proto3" json:"trader,omitempty"`
	ChainToken           string   `protobuf:"bytes,2,opt,name=chain_token,json=chainToken,proto3" json:"chain_token,omitempty"`
	Action               int32    `protobuf:"varint,3,opt,name=action,proto3" json:"action,omitempty"`
	Page                 int32    `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Size                 int32    `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTransferRecordRequest) Reset()         { *m = GetTransferRecordRequest{} }
func (m *GetTransferRecordRequest) String() string { return proto.CompactTextString(m) }
func (*GetTransferRecordRequest) ProtoMessage()    {}
func (*GetTransferRecordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{20}
}

func (m *GetTransferRecordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTransferRecordRequest.Unmarshal(m, b)
}
func (m *GetTransferRecordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTransferRecordRequest.Marshal(b, m, deterministic)
}
func (m *GetTransferRecordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTransferRecordRequest.Merge(m, src)
}
func (m *GetTransferRecordRequest) XXX_Size() int {
	return xxx_messageInfo_GetTransferRecordRequest.Size(m)
}
func (m *GetTransferRecordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTransferRecordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTransferRecordRequest proto.InternalMessageInfo

func (m *GetTransferRecordRequest) GetTrader() string {
	if m != nil {
		return m.Trader
	}
	return ""
}

func (m *GetTransferRecordRequest) GetChainToken() string {
	if m != nil {
		return m.ChainToken
	}
	return ""
}

func (m *GetTransferRecordRequest) GetAction() int32 {
	if m != nil {
		return m.Action
	}
	return 0
}

func (m *GetTransferRecordRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetTransferRecordRequest) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

type GetTransferRecordResponse struct {
	Transfers            []*Transfer `protobuf:"bytes,1,rep,name=transfers,proto3" json:"transfers,omitempty"`
	Page                 int32       `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Total                int32       `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetTransferRecordResponse) Reset()         { *m = GetTransferRecordResponse{} }
func (m *GetTransferRecordResponse) String() string { return proto.CompactTextString(m) }
func (*GetTransferRecordResponse) ProtoMessage()    {}
func (*GetTransferRecordResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{21}
}

func (m *GetTransferRecordResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTransferRecordResponse.Unmarshal(m, b)
}
func (m *GetTransferRecordResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTransferRecordResponse.Marshal(b, m, deterministic)
}
func (m *GetTransferRecordResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTransferRecordResponse.Merge(m, src)
}
func (m *GetTransferRecordResponse) XXX_Size() int {
	return xxx_messageInfo_GetTransferRecordResponse.Size(m)
}
func (m *GetTransferRecordResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTransferRecordResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTransferRecordResponse proto.InternalMessageInfo

func (m *GetTransferRecordResponse) GetTransfers() []*Transfer {
	if m != nil {
		return m.Transfers
	}
	return nil
}

func (m *GetTransferRecordResponse) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetTransferRecordResponse) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

// 充值或提现记录。
type Transfer struct {
	//  int64 time_ms = 1;
	Action       int32 `protobuf:"varint,1,opt,name=action,proto3" json:"action,omitempty"`
	Id           int64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	OperateIndex int64 `protobuf:"varint,3,opt,name=operate_index,json=operateIndex,proto3" json:"operate_index,omitempty"`
	// The block number of a deposit
	BlockNumber int64 `protobuf:"varint,4,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	// The transaction hash of a deposit.
	TxHash string `protobuf:"bytes,5,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	Trader string `protobuf:"bytes,6,opt,name=trader,proto3" json:"trader,omitempty"`
	// The id of the transferred token.
	TokenSymbol string `protobuf:"bytes,7,opt,name=token_symbol,json=tokenSymbol,proto3" json:"token_symbol,omitempty"`
	// The amount transferred.
	AmountE8 uint64 `protobuf:"varint,8,opt,name=amount_e8,json=amountE8,proto3" json:"amount_e8,omitempty"`
	FeeE8    uint64 `protobuf:"varint,9,opt,name=fee_e8,json=feeE8,proto3" json:"fee_e8,omitempty"`
	// The balance (including locked part) after the transfer.
	BalanceE8 uint64 `protobuf:"varint,10,opt,name=balance_e8,json=balanceE8,proto3" json:"balance_e8,omitempty"`
	// Deposit - "Confirming" | "Done"
	// Withdraw - "Waiting" | "Send" | "Done"
	Status               string   `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	CreateTime           int64    `protobuf:"varint,12,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Transfer) Reset()         { *m = Transfer{} }
func (m *Transfer) String() string { return proto.CompactTextString(m) }
func (*Transfer) ProtoMessage()    {}
func (*Transfer) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{22}
}

func (m *Transfer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transfer.Unmarshal(m, b)
}
func (m *Transfer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transfer.Marshal(b, m, deterministic)
}
func (m *Transfer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transfer.Merge(m, src)
}
func (m *Transfer) XXX_Size() int {
	return xxx_messageInfo_Transfer.Size(m)
}
func (m *Transfer) XXX_DiscardUnknown() {
	xxx_messageInfo_Transfer.DiscardUnknown(m)
}

var xxx_messageInfo_Transfer proto.InternalMessageInfo

func (m *Transfer) GetAction() int32 {
	if m != nil {
		return m.Action
	}
	return 0
}

func (m *Transfer) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Transfer) GetOperateIndex() int64 {
	if m != nil {
		return m.OperateIndex
	}
	return 0
}

func (m *Transfer) GetBlockNumber() int64 {
	if m != nil {
		return m.BlockNumber
	}
	return 0
}

func (m *Transfer) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *Transfer) GetTrader() string {
	if m != nil {
		return m.Trader
	}
	return ""
}

func (m *Transfer) GetTokenSymbol() string {
	if m != nil {
		return m.TokenSymbol
	}
	return ""
}

func (m *Transfer) GetAmountE8() uint64 {
	if m != nil {
		return m.AmountE8
	}
	return 0
}

func (m *Transfer) GetFeeE8() uint64 {
	if m != nil {
		return m.FeeE8
	}
	return 0
}

func (m *Transfer) GetBalanceE8() uint64 {
	if m != nil {
		return m.BalanceE8
	}
	return 0
}

func (m *Transfer) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Transfer) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

type WithdrawRequest struct {
	Trader               string   `protobuf:"bytes,1,opt,name=trader,proto3" json:"trader,omitempty"`
	ChainToken           string   `protobuf:"bytes,2,opt,name=chain_token,json=chainToken,proto3" json:"chain_token,omitempty"`
	TokenSymbol          string   `protobuf:"bytes,3,opt,name=token_symbol,json=tokenSymbol,proto3" json:"token_symbol,omitempty"`
	AmountE8             uint64   `protobuf:"varint,4,opt,name=amount_e8,json=amountE8,proto3" json:"amount_e8,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WithdrawRequest) Reset()         { *m = WithdrawRequest{} }
func (m *WithdrawRequest) String() string { return proto.CompactTextString(m) }
func (*WithdrawRequest) ProtoMessage()    {}
func (*WithdrawRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{23}
}

func (m *WithdrawRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WithdrawRequest.Unmarshal(m, b)
}
func (m *WithdrawRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WithdrawRequest.Marshal(b, m, deterministic)
}
func (m *WithdrawRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WithdrawRequest.Merge(m, src)
}
func (m *WithdrawRequest) XXX_Size() int {
	return xxx_messageInfo_WithdrawRequest.Size(m)
}
func (m *WithdrawRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WithdrawRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WithdrawRequest proto.InternalMessageInfo

func (m *WithdrawRequest) GetTrader() string {
	if m != nil {
		return m.Trader
	}
	return ""
}

func (m *WithdrawRequest) GetChainToken() string {
	if m != nil {
		return m.ChainToken
	}
	return ""
}

func (m *WithdrawRequest) GetTokenSymbol() string {
	if m != nil {
		return m.TokenSymbol
	}
	return ""
}

func (m *WithdrawRequest) GetAmountE8() uint64 {
	if m != nil {
		return m.AmountE8
	}
	return 0
}

type WithdrawResponse struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WithdrawResponse) Reset()         { *m = WithdrawResponse{} }
func (m *WithdrawResponse) String() string { return proto.CompactTextString(m) }
func (*WithdrawResponse) ProtoMessage()    {}
func (*WithdrawResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{24}
}

func (m *WithdrawResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WithdrawResponse.Unmarshal(m, b)
}
func (m *WithdrawResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WithdrawResponse.Marshal(b, m, deterministic)
}
func (m *WithdrawResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WithdrawResponse.Merge(m, src)
}
func (m *WithdrawResponse) XXX_Size() int {
	return xxx_messageInfo_WithdrawResponse.Size(m)
}
func (m *WithdrawResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WithdrawResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WithdrawResponse proto.InternalMessageInfo

func (m *WithdrawResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func init() {
	proto.RegisterType((*GetMarketRequest)(nil), "chain.GetMarketRequest")
	proto.RegisterType((*GetMarketResponse)(nil), "chain.GetMarketResponse")
	proto.RegisterMapType((map[string]*MarketData)(nil), "chain.GetMarketResponse.MarketDataEntry")
	proto.RegisterType((*MarketData)(nil), "chain.MarketData")
	proto.RegisterType((*GetBalancesRequest)(nil), "chain.GetBalancesRequest")
	proto.RegisterType((*GetBalancesResponse)(nil), "chain.GetBalancesResponse")
	proto.RegisterType((*TokenBalance)(nil), "chain.TokenBalance")
	proto.RegisterType((*GetTradingConfigRequest)(nil), "chain.GetTradingConfigRequest")
	proto.RegisterType((*GetTradingConfigResponse)(nil), "chain.GetTradingConfigResponse")
	proto.RegisterType((*GetCoinPairListRequest)(nil), "chain.GetCoinPairListRequest")
	proto.RegisterType((*GetCoinPairListResponse)(nil), "chain.GetCoinPairListResponse")
	proto.RegisterType((*GetOrdersOfTraderRequest)(nil), "chain.GetOrdersOfTraderRequest")
	proto.RegisterType((*GetOrdersOfTraderResponse)(nil), "chain.GetOrdersOfTraderResponse")
	proto.RegisterType((*GetOrderByIdRequest)(nil), "chain.GetOrderByIdRequest")
	proto.RegisterType((*GetOrderByIdResponse)(nil), "chain.GetOrderByIdResponse")
	proto.RegisterType((*PlaceOrderRequest)(nil), "chain.PlaceOrderRequest")
	proto.RegisterType((*PlaceOrderResponse)(nil), "chain.PlaceOrderResponse")
	proto.RegisterType((*CancelOrderRequest)(nil), "chain.CancelOrderRequest")
	proto.RegisterType((*CancelOrderResponse)(nil), "chain.CancelOrderResponse")
	proto.RegisterType((*CancelOrdersByTraderRequest)(nil), "chain.CancelOrdersByTraderRequest")
	proto.RegisterType((*CancelOrdersByTraderResponse)(nil), "chain.CancelOrdersByTraderResponse")
	proto.RegisterType((*GetTransferRecordRequest)(nil), "chain.GetTransferRecordRequest")
	proto.RegisterType((*GetTransferRecordResponse)(nil), "chain.GetTransferRecordResponse")
	proto.RegisterType((*Transfer)(nil), "chain.Transfer")
	proto.RegisterType((*WithdrawRequest)(nil), "chain.WithdrawRequest")
	proto.RegisterType((*WithdrawResponse)(nil), "chain.WithdrawResponse")
}

func init() { proto.RegisterFile("server.proto", fileDescriptor_ad098daeda4239f7) }

var fileDescriptor_ad098daeda4239f7 = []byte{
	// 1436 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x58, 0xcb, 0x6e, 0xdb, 0x46,
	0x17, 0xfe, 0xa9, 0x9b, 0xa5, 0x23, 0xc5, 0x97, 0x49, 0xfe, 0x98, 0xa6, 0x73, 0xf1, 0xcf, 0xfc,
	0x68, 0xdd, 0x5c, 0x24, 0xc0, 0x01, 0x0a, 0x37, 0x2d, 0x0a, 0xc4, 0x89, 0xe3, 0x04, 0x48, 0x1a,
	0x83, 0x76, 0x5b, 0xa0, 0x8b, 0x12, 0x23, 0x72, 0x24, 0x0f, 0x2c, 0x71, 0x54, 0x72, 0xe4, 0x48,
	0x5d, 0x75, 0xdd, 0x4d, 0x17, 0x7d, 0x82, 0xee, 0xba, 0xeb, 0x2b, 0xf4, 0x29, 0xba, 0x28, 0xd0,
	0x77, 0x29, 0xe6, 0x70, 0x24, 0x92, 0x12, 0x65, 0x3b, 0x30, 0xb2, 0xd3, 0x7c, 0xdf, 0x39, 0x33,
	0xe7, 0xc6, 0x33, 0x67, 0x04, 0x8d, 0x88, 0x85, 0x67, 0x2c, 0x6c, 0x0e, 0x42, 0x21, 0x05, 0x29,
	0x7b, 0x27, 0x94, 0x07, 0xd6, 0xad, 0xae, 0x10, 0xdd, 0x1e, 0x6b, 0xd1, 0x01, 0x6f, 0xd1, 0x20,
	0x10, 0x92, 0x4a, 0x2e, 0x82, 0x28, 0x16, 0xb2, 0x56, 0x63, 0x15, 0x9f, 0x4a, 0xaa, 0x91, 0x2f,
	0xba, 0x5c, 0x36, 0xdb, 0xbc, 0x2d, 0x46, 0x4d, 0x4f, 0xf4, 0x5b, 0x3e, 0x1b, 0x49, 0x31, 0x68,
	0x79, 0xa2, 0xdf, 0x17, 0x41, 0xb3, 0xcb, 0x65, 0x0b, 0xc5, 0x14, 0xbe, 0xd3, 0xea, 0x31, 0xbf,
	0xcb, 0xc2, 0x48, 0x52, 0xc9, 0xb4, 0xf6, 0x93, 0xcb, 0x6b, 0x77, 0x58, 0xcb, 0xef, 0xb0, 0xe4,
	0x64, 0xfb, 0x31, 0xac, 0x1e, 0x30, 0xf9, 0x86, 0x86, 0xa7, 0x4c, 0x3a, 0xec, 0x87, 0x21, 0x8b,
	0x24, 0xb9, 0x0b, 0x75, 0x74, 0xc3, 0x95, 0xe2, 0x94, 0x05, 0xa6, 0xb1, 0x65, 0x6c, 0xd7, 0x1c,
	0x40, 0xe8, 0x58, 0x21, 0xf6, 0x1f, 0x06, 0xac, 0xa5, 0xb4, 0xa2, 0x81, 0x08, 0x22, 0x46, 0x5e,
	0x02, 0xf4, 0x11, 0x79, 0x4e, 0x25, 0x35, 0x8d, 0xad, 0xe2, 0x76, 0x7d, 0x67, 0xbb, 0x89, 0x6a,
	0xcd, 0x39, 0xe9, 0xe6, 0x9b, 0xa9, 0xe8, 0x7e, 0x20, 0xc3, 0xb1, 0x93, 0xd2, 0xb5, 0x0e, 0x61,
	0x65, 0x86, 0x26, 0xab, 0x50, 0x3c, 0x65, 0x63, 0x6d, 0x8b, 0xfa, 0x49, 0x3e, 0x86, 0xf2, 0x19,
	0xed, 0x0d, 0x99, 0x59, 0xd8, 0x32, 0xb6, 0xeb, 0x3b, 0x6b, 0xfa, 0xa4, 0x44, 0xd1, 0x89, 0xf9,
	0x27, 0x85, 0x5d, 0xc3, 0xfe, 0xc9, 0x00, 0x48, 0x18, 0xe5, 0x61, 0x7c, 0x9c, 0x4b, 0x7d, 0x3f,
	0x9c, 0x78, 0x18, 0x43, 0x4f, 0x7d, 0x3f, 0x24, 0x1f, 0x41, 0xb9, 0x47, 0xdb, 0xac, 0x87, 0x9b,
	0x2f, 0xef, 0xac, 0x36, 0x7d, 0x36, 0xd2, 0x5b, 0xbf, 0x56, 0xb8, 0x13, 0xd3, 0xe4, 0x13, 0xa8,
	0x78, 0x22, 0xe8, 0xf0, 0xae, 0x59, 0xd4, 0x56, 0xf8, 0x9d, 0x89, 0x6f, 0xcf, 0x90, 0x70, 0xb4,
	0x80, 0xfd, 0x06, 0xc8, 0x01, 0x93, 0x7b, 0xb4, 0x47, 0x03, 0x8f, 0x45, 0x93, 0x58, 0xdf, 0x84,
	0x8a, 0x0c, 0xa9, 0xcf, 0x26, 0x46, 0xe8, 0xd5, 0x6c, 0x0e, 0x0a, 0x73, 0x39, 0xf8, 0x1e, 0xae,
	0x67, 0xb6, 0xd3, 0x49, 0x58, 0xb4, 0x5f, 0x0b, 0xaa, 0x6d, 0x2d, 0x6b, 0x16, 0x30, 0x35, 0xd7,
	0x75, 0xc0, 0x70, 0x3b, 0xbd, 0x8f, 0x33, 0x15, 0xb2, 0x7f, 0x37, 0xa0, 0x91, 0xa6, 0xc8, 0xff,
	0xa0, 0x81, 0xb6, 0xb8, 0xd1, 0xb8, 0xdf, 0x16, 0x3d, 0xbd, 0x7f, 0x1d, 0xb1, 0x23, 0x84, 0xc8,
	0x06, 0x54, 0xa5, 0x90, 0xb4, 0xe7, 0xb2, 0x5d, 0xb4, 0xb8, 0xe4, 0x2c, 0xe1, 0x7a, 0x7f, 0x97,
	0x6c, 0x42, 0x8d, 0x7a, 0x92, 0x9f, 0x31, 0xc5, 0x15, 0x91, 0xab, 0xc6, 0x40, 0x4c, 0xf6, 0x84,
	0x77, 0xca, 0x7c, 0x45, 0x96, 0x62, 0x32, 0x06, 0xf6, 0x77, 0xc9, 0x16, 0xd4, 0xdf, 0x71, 0x79,
	0xe2, 0x87, 0xf4, 0x1d, 0x0f, 0xba, 0x66, 0x19, 0xe9, 0x34, 0x64, 0x77, 0x60, 0xfd, 0x80, 0xc9,
	0xe3, 0x90, 0xfa, 0x3c, 0xe8, 0xea, 0xa8, 0x5f, 0xb2, 0x94, 0xc9, 0x7d, 0x58, 0xf3, 0x68, 0x74,
	0xe2, 0x66, 0x5c, 0x8b, 0xa3, 0xbd, 0xa2, 0x88, 0xe3, 0xc4, 0x3d, 0xfb, 0x6b, 0x30, 0xe7, 0xcf,
	0xd1, 0x71, 0xff, 0x0c, 0x96, 0x65, 0x4c, 0xb8, 0xba, 0x20, 0x0c, 0x2c, 0x08, 0x82, 0x05, 0x91,
	0xd5, 0xb9, 0x26, 0xd3, 0x4b, 0x9b, 0xc1, 0xcd, 0x03, 0x55, 0x2d, 0x3c, 0x38, 0xa4, 0x3c, 0x7c,
	0xcd, 0x23, 0xf9, 0x41, 0xac, 0x7f, 0x81, 0x51, 0xca, 0x1e, 0xa3, 0x8d, 0x7f, 0x00, 0xd5, 0x81,
	0xc6, 0xf4, 0x77, 0xbb, 0xa2, 0x8b, 0x63, 0x22, 0xee, 0x4c, 0x05, 0xec, 0x3f, 0x0b, 0x18, 0x86,
	0xb7, 0xa1, 0xcf, 0xc2, 0xe8, 0x6d, 0xe7, 0x18, 0xeb, 0xeb, 0xaa, 0xe5, 0x9c, 0xef, 0x49, 0x31,
	0xd7, 0x13, 0xf2, 0x10, 0x48, 0x24, 0x85, 0x77, 0x9a, 0x15, 0x2e, 0xa1, 0xf0, 0x2a, 0x32, 0x69,
	0xe9, 0xdb, 0x00, 0x42, 0xd9, 0xea, 0xca, 0xf1, 0x80, 0x61, 0xf9, 0x94, 0x9d, 0x1a, 0x22, 0xc7,
	0xe3, 0x01, 0x23, 0x04, 0x4a, 0x03, 0xda, 0x65, 0x66, 0x05, 0x09, 0xfc, 0x4d, 0x2c, 0x15, 0x8f,
	0x2e, 0x3b, 0xe2, 0x3f, 0x32, 0x73, 0x09, 0xf1, 0xe9, 0x9a, 0xd8, 0x70, 0xad, 0x13, 0x8a, 0xbe,
	0x2b, 0x79, 0x9f, 0xb9, 0x11, 0xf3, 0xcc, 0xea, 0x96, 0xb1, 0x5d, 0x74, 0xea, 0x0a, 0x3c, 0xe6,
	0x7d, 0x76, 0xc4, 0x3c, 0x72, 0x07, 0xea, 0x52, 0x24, 0x12, 0x35, 0x94, 0xa8, 0x49, 0xa1, 0x79,
	0xfb, 0x14, 0x36, 0x72, 0x22, 0xa8, 0x93, 0xf1, 0x7f, 0xa8, 0xa0, 0x75, 0x91, 0x4e, 0x45, 0x43,
	0xa7, 0x02, 0xc5, 0x1d, 0xcd, 0x4d, 0xcd, 0x2e, 0xa4, 0xcc, 0xbe, 0x01, 0x65, 0xfc, 0xdc, 0x30,
	0x6e, 0x65, 0x27, 0x5e, 0xd8, 0x1c, 0x1b, 0x05, 0x6a, 0xef, 0x8d, 0x5f, 0xf9, 0x57, 0xce, 0xd4,
	0x06, 0x54, 0xe3, 0x78, 0x72, 0x1f, 0x0f, 0x2a, 0x3a, 0x4b, 0xb8, 0x7e, 0xe5, 0xdb, 0x4f, 0xe0,
	0x46, 0xf6, 0x28, 0xed, 0x92, 0x0d, 0x65, 0x14, 0xd1, 0xdf, 0x44, 0xd6, 0xa3, 0x98, 0xb2, 0xff,
	0x2a, 0xc0, 0xda, 0x61, 0x8f, 0x7a, 0x2c, 0x46, 0x2f, 0xb0, 0x72, 0x13, 0x6a, 0xc3, 0x88, 0x85,
	0xae, 0x8a, 0xba, 0xb6, 0xb1, 0xaa, 0x80, 0x17, 0xa1, 0xe8, 0x2b, 0x25, 0xd5, 0x5a, 0x44, 0xa0,
	0x03, 0xa1, 0x57, 0x2a, 0x66, 0x58, 0x03, 0xa5, 0x38, 0x66, 0xea, 0xf7, 0x82, 0x5a, 0x2a, 0x2f,
	0xa8, 0xa5, 0xdc, 0x2a, 0xad, 0xe4, 0x57, 0xe9, 0x06, 0x54, 0x07, 0x21, 0xf7, 0xb0, 0xe1, 0x2d,
	0xc5, 0xcd, 0x10, 0xd7, 0xba, 0x19, 0xf6, 0xc5, 0x30, 0x90, 0x8a, 0xab, 0xea, 0x66, 0x88, 0xc0,
	0xfe, 0xae, 0x4a, 0x00, 0x1b, 0x0d, 0x78, 0xc8, 0xb0, 0x80, 0x74, 0xf1, 0x40, 0x0c, 0xa9, 0x02,
	0x4a, 0x0a, 0x3a, 0xe2, 0xdd, 0xc0, 0x04, 0x3c, 0x3d, 0x2e, 0xe8, 0x23, 0xde, 0x0d, 0xc8, 0x32,
	0x14, 0x86, 0xd4, 0xac, 0x23, 0x5c, 0x18, 0x52, 0xfb, 0x21, 0x90, 0x74, 0x5c, 0x93, 0x7b, 0x22,
	0x64, 0xd1, 0xb0, 0x27, 0x31, 0xb0, 0x55, 0x47, 0xaf, 0xec, 0xdf, 0x0c, 0x20, 0xcf, 0x54, 0xbf,
	0xef, 0x5d, 0x2a, 0x0f, 0xf9, 0xe1, 0x2b, 0xbc, 0x4f, 0xf8, 0x8a, 0x0b, 0xc3, 0x37, 0x2d, 0xb3,
	0x52, 0xb6, 0xcc, 0x1e, 0xc1, 0xf5, 0x8c, 0x89, 0x17, 0xb8, 0xf4, 0x8b, 0x01, 0x9b, 0x29, 0xf9,
	0x68, 0x6f, 0x7c, 0xb9, 0x9e, 0xf5, 0xc1, 0x7c, 0xb3, 0x3f, 0x85, 0x5b, 0xf9, 0x06, 0x5d, 0xe0,
	0xc9, 0xaf, 0xc6, 0xe4, 0x06, 0x0a, 0xa2, 0x8e, 0x92, 0xf7, 0x44, 0x78, 0xf5, 0x0f, 0xfa, 0x9c,
	0xcf, 0x05, 0x5b, 0x4c, 0x29, 0xd5, 0x62, 0x08, 0x94, 0x22, 0xd5, 0x15, 0xe3, 0x36, 0x8a, 0xbf,
	0x6d, 0x89, 0xdd, 0x6c, 0xd6, 0x28, 0xed, 0xca, 0x23, 0xa8, 0x49, 0xcd, 0x44, 0x33, 0x77, 0xcb,
	0x54, 0x23, 0x91, 0x78, 0x8f, 0xb6, 0xf6, 0x77, 0x01, 0xaa, 0x93, 0x1d, 0x52, 0x2e, 0x18, 0x19,
	0x17, 0x96, 0xa1, 0xc0, 0x7d, 0xdc, 0xac, 0xe8, 0x14, 0xb8, 0x4f, 0xee, 0xc1, 0x35, 0x31, 0x60,
	0x21, 0x95, 0xcc, 0xe5, 0x81, 0xcf, 0x46, 0xba, 0x81, 0x35, 0x34, 0xf8, 0x4a, 0x61, 0x6a, 0xd0,
	0x69, 0xab, 0xe9, 0xc3, 0x0d, 0x86, 0xfd, 0x36, 0x0b, 0x75, 0xf5, 0xd5, 0x11, 0xfb, 0x0a, 0x21,
	0xb2, 0x0e, 0x4b, 0x72, 0xe4, 0x9e, 0xd0, 0xe8, 0x44, 0xb7, 0x8a, 0x8a, 0x1c, 0xbd, 0xa4, 0xd1,
	0x49, 0x2a, 0x09, 0x95, 0x4c, 0x12, 0x66, 0x87, 0xa7, 0xa5, 0xf9, 0xe1, 0xe9, 0xdc, 0xa6, 0xf0,
	0x5f, 0xa8, 0x74, 0x18, 0xb6, 0x92, 0x1a, 0x32, 0xe5, 0x0e, 0x53, 0x8d, 0xe4, 0x36, 0x80, 0x1e,
	0xd8, 0x14, 0x05, 0x48, 0xd5, 0x34, 0xb2, 0xbf, 0xab, 0xac, 0x51, 0xef, 0x84, 0x61, 0xa4, 0xdb,
	0x81, 0x5e, 0x61, 0x49, 0x84, 0x4c, 0x45, 0x01, 0x5b, 0x4c, 0x23, 0x6e, 0x31, 0x31, 0xa4, 0x5a,
	0x8c, 0xfd, 0xb3, 0x01, 0x2b, 0xdf, 0xea, 0x09, 0xeb, 0xca, 0xf5, 0x35, 0xeb, 0x7b, 0xf1, 0x02,
	0xdf, 0x4b, 0x59, 0xdf, 0xed, 0xfb, 0xb0, 0x9a, 0xd8, 0x72, 0xfe, 0x17, 0xb2, 0xf3, 0x4f, 0x05,
	0x1a, 0xcf, 0xd4, 0xd1, 0x47, 0x2c, 0x3c, 0xe3, 0x1e, 0x23, 0x5f, 0x42, 0x6d, 0xfa, 0xf6, 0x20,
	0xeb, 0xf3, 0xaf, 0x11, 0xf4, 0xcd, 0x32, 0x17, 0x3d, 0x53, 0xc8, 0x11, 0xbe, 0x8f, 0x32, 0xf3,
	0x1b, 0xb9, 0x93, 0x48, 0xe7, 0x0d, 0x9d, 0xd6, 0xdd, 0x85, 0xbc, 0xde, 0xf4, 0x10, 0x56, 0x66,
	0x46, 0x31, 0x72, 0x3b, 0xd1, 0xc9, 0x99, 0x04, 0xad, 0x3b, 0x8b, 0x68, 0xbd, 0xe3, 0x73, 0xa8,
	0xa7, 0x5e, 0x03, 0x64, 0x23, 0x11, 0x9f, 0x79, 0x70, 0x58, 0x56, 0x1e, 0xa5, 0x77, 0xf9, 0x06,
	0x9f, 0x75, 0xd9, 0xb9, 0x84, 0xa4, 0xbc, 0xc9, 0x9d, 0xf9, 0xac, 0xad, 0xc5, 0x02, 0x7a, 0xdf,
	0x03, 0x68, 0xa4, 0xe7, 0x02, 0x62, 0xcd, 0x68, 0xa4, 0xe6, 0x12, 0x6b, 0x33, 0x97, 0xd3, 0x1b,
	0x3d, 0x05, 0x48, 0xee, 0x32, 0x32, 0xc9, 0xda, 0xdc, 0xd8, 0x60, 0x6d, 0xe4, 0x30, 0x49, 0xa4,
	0x52, 0xbd, 0x77, 0x1a, 0xa9, 0xf9, 0x3b, 0x6f, 0x1a, 0xa9, 0xbc, 0xbb, 0x86, 0xc2, 0x8d, 0xbc,
	0x0e, 0x4e, 0xec, 0x79, 0x9d, 0xd9, 0xfb, 0xc6, 0xba, 0x77, 0xae, 0x4c, 0x7c, 0x80, 0xfd, 0x1f,
	0x9d, 0x8c, 0x6c, 0x5b, 0x25, 0xd9, 0xd2, 0x9a, 0xbf, 0x05, 0xd2, 0xc9, 0x58, 0xd0, 0x91, 0x3f,
	0x87, 0xea, 0xe4, 0x73, 0x22, 0x37, 0xb5, 0xf4, 0xcc, 0xb7, 0x6e, 0xad, 0xcf, 0xe1, 0xb1, 0xf2,
	0xde, 0xa3, 0xef, 0x1e, 0x5c, 0xee, 0xcf, 0x06, 0xd4, 0x6f, 0x57, 0x70, 0xf1, 0xf8, 0xdf, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x9f, 0x09, 0x35, 0x48, 0x25, 0x11, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ChainServiceClient is the client API for ChainService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChainServiceClient interface {
	// 获取市场信息。
	GetMarket(ctx context.Context, in *GetMarketRequest, opts ...grpc.CallOption) (*GetMarketResponse, error)
	// 获取市场配置数据。
	GetTradingConfig(ctx context.Context, in *GetTradingConfigRequest, opts ...grpc.CallOption) (*GetTradingConfigResponse, error)
	// 获取指定链(chainToken)或链中计价币(cashTokenSymbol)下各币种的行情信息。
	GetCoinPairList(ctx context.Context, in *GetCoinPairListRequest, opts ...grpc.CallOption) (*GetCoinPairListResponse, error)
	// 获取指定地址NEO各种资产的余额。
	GetBalances(ctx context.Context, in *GetBalancesRequest, opts ...grpc.CallOption) (*GetBalancesResponse, error)
	// 分页获取用户的当前挂单，已过期或完成挂单数据。
	GetOrdersOfTrader(ctx context.Context, in *GetOrdersOfTraderRequest, opts ...grpc.CallOption) (*GetOrdersOfTraderResponse, error)
	// 根据用户地址和订单id获取订单信息。
	GetOrderById(ctx context.Context, in *GetOrderByIdRequest, opts ...grpc.CallOption) (*GetOrderByIdResponse, error)
	// 新增下单。
	PlaceOrder(ctx context.Context, in *PlaceOrderRequest, opts ...grpc.CallOption) (*PlaceOrderResponse, error)
	// 取消订单。
	CancelOrder(ctx context.Context, in *CancelOrderRequest, opts ...grpc.CallOption) (*CancelOrderResponse, error)
	// 取消一个用户在某个交易区订所有订单。
	CancelOrdersByTrader(ctx context.Context, in *CancelOrdersByTraderRequest, opts ...grpc.CallOption) (*CancelOrdersByTraderResponse, error)
	// 获取充值/提现记录。
	GetTransferRecord(ctx context.Context, in *GetTransferRecordRequest, opts ...grpc.CallOption) (*GetTransferRecordResponse, error)
	// 用户发起提现，添加提现记录。
	Withdraw(ctx context.Context, in *WithdrawRequest, opts ...grpc.CallOption) (*WithdrawResponse, error)
}

type chainServiceClient struct {
	cc *grpc.ClientConn
}

func NewChainServiceClient(cc *grpc.ClientConn) ChainServiceClient {
	return &chainServiceClient{cc}
}

func (c *chainServiceClient) GetMarket(ctx context.Context, in *GetMarketRequest, opts ...grpc.CallOption) (*GetMarketResponse, error) {
	out := new(GetMarketResponse)
	err := c.cc.Invoke(ctx, "/chain.ChainService/GetMarket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chainServiceClient) GetTradingConfig(ctx context.Context, in *GetTradingConfigRequest, opts ...grpc.CallOption) (*GetTradingConfigResponse, error) {
	out := new(GetTradingConfigResponse)
	err := c.cc.Invoke(ctx, "/chain.ChainService/GetTradingConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chainServiceClient) GetCoinPairList(ctx context.Context, in *GetCoinPairListRequest, opts ...grpc.CallOption) (*GetCoinPairListResponse, error) {
	out := new(GetCoinPairListResponse)
	err := c.cc.Invoke(ctx, "/chain.ChainService/GetCoinPairList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chainServiceClient) GetBalances(ctx context.Context, in *GetBalancesRequest, opts ...grpc.CallOption) (*GetBalancesResponse, error) {
	out := new(GetBalancesResponse)
	err := c.cc.Invoke(ctx, "/chain.ChainService/GetBalances", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chainServiceClient) GetOrdersOfTrader(ctx context.Context, in *GetOrdersOfTraderRequest, opts ...grpc.CallOption) (*GetOrdersOfTraderResponse, error) {
	out := new(GetOrdersOfTraderResponse)
	err := c.cc.Invoke(ctx, "/chain.ChainService/GetOrdersOfTrader", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chainServiceClient) GetOrderById(ctx context.Context, in *GetOrderByIdRequest, opts ...grpc.CallOption) (*GetOrderByIdResponse, error) {
	out := new(GetOrderByIdResponse)
	err := c.cc.Invoke(ctx, "/chain.ChainService/GetOrderById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chainServiceClient) PlaceOrder(ctx context.Context, in *PlaceOrderRequest, opts ...grpc.CallOption) (*PlaceOrderResponse, error) {
	out := new(PlaceOrderResponse)
	err := c.cc.Invoke(ctx, "/chain.ChainService/PlaceOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chainServiceClient) CancelOrder(ctx context.Context, in *CancelOrderRequest, opts ...grpc.CallOption) (*CancelOrderResponse, error) {
	out := new(CancelOrderResponse)
	err := c.cc.Invoke(ctx, "/chain.ChainService/CancelOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chainServiceClient) CancelOrdersByTrader(ctx context.Context, in *CancelOrdersByTraderRequest, opts ...grpc.CallOption) (*CancelOrdersByTraderResponse, error) {
	out := new(CancelOrdersByTraderResponse)
	err := c.cc.Invoke(ctx, "/chain.ChainService/CancelOrdersByTrader", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chainServiceClient) GetTransferRecord(ctx context.Context, in *GetTransferRecordRequest, opts ...grpc.CallOption) (*GetTransferRecordResponse, error) {
	out := new(GetTransferRecordResponse)
	err := c.cc.Invoke(ctx, "/chain.ChainService/GetTransferRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chainServiceClient) Withdraw(ctx context.Context, in *WithdrawRequest, opts ...grpc.CallOption) (*WithdrawResponse, error) {
	out := new(WithdrawResponse)
	err := c.cc.Invoke(ctx, "/chain.ChainService/Withdraw", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChainServiceServer is the server API for ChainService service.
type ChainServiceServer interface {
	// 获取市场信息。
	GetMarket(context.Context, *GetMarketRequest) (*GetMarketResponse, error)
	// 获取市场配置数据。
	GetTradingConfig(context.Context, *GetTradingConfigRequest) (*GetTradingConfigResponse, error)
	// 获取指定链(chainToken)或链中计价币(cashTokenSymbol)下各币种的行情信息。
	GetCoinPairList(context.Context, *GetCoinPairListRequest) (*GetCoinPairListResponse, error)
	// 获取指定地址NEO各种资产的余额。
	GetBalances(context.Context, *GetBalancesRequest) (*GetBalancesResponse, error)
	// 分页获取用户的当前挂单，已过期或完成挂单数据。
	GetOrdersOfTrader(context.Context, *GetOrdersOfTraderRequest) (*GetOrdersOfTraderResponse, error)
	// 根据用户地址和订单id获取订单信息。
	GetOrderById(context.Context, *GetOrderByIdRequest) (*GetOrderByIdResponse, error)
	// 新增下单。
	PlaceOrder(context.Context, *PlaceOrderRequest) (*PlaceOrderResponse, error)
	// 取消订单。
	CancelOrder(context.Context, *CancelOrderRequest) (*CancelOrderResponse, error)
	// 取消一个用户在某个交易区订所有订单。
	CancelOrdersByTrader(context.Context, *CancelOrdersByTraderRequest) (*CancelOrdersByTraderResponse, error)
	// 获取充值/提现记录。
	GetTransferRecord(context.Context, *GetTransferRecordRequest) (*GetTransferRecordResponse, error)
	// 用户发起提现，添加提现记录。
	Withdraw(context.Context, *WithdrawRequest) (*WithdrawResponse, error)
}

func RegisterChainServiceServer(s *grpc.Server, srv ChainServiceServer) {
	s.RegisterService(&_ChainService_serviceDesc, srv)
}

func _ChainService_GetMarket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMarketRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChainServiceServer).GetMarket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chain.ChainService/GetMarket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChainServiceServer).GetMarket(ctx, req.(*GetMarketRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChainService_GetTradingConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTradingConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChainServiceServer).GetTradingConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chain.ChainService/GetTradingConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChainServiceServer).GetTradingConfig(ctx, req.(*GetTradingConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChainService_GetCoinPairList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCoinPairListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChainServiceServer).GetCoinPairList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chain.ChainService/GetCoinPairList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChainServiceServer).GetCoinPairList(ctx, req.(*GetCoinPairListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChainService_GetBalances_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBalancesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChainServiceServer).GetBalances(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chain.ChainService/GetBalances",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChainServiceServer).GetBalances(ctx, req.(*GetBalancesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChainService_GetOrdersOfTrader_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOrdersOfTraderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChainServiceServer).GetOrdersOfTrader(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chain.ChainService/GetOrdersOfTrader",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChainServiceServer).GetOrdersOfTrader(ctx, req.(*GetOrdersOfTraderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChainService_GetOrderById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOrderByIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChainServiceServer).GetOrderById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chain.ChainService/GetOrderById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChainServiceServer).GetOrderById(ctx, req.(*GetOrderByIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChainService_PlaceOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PlaceOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChainServiceServer).PlaceOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chain.ChainService/PlaceOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChainServiceServer).PlaceOrder(ctx, req.(*PlaceOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChainService_CancelOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChainServiceServer).CancelOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chain.ChainService/CancelOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChainServiceServer).CancelOrder(ctx, req.(*CancelOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChainService_CancelOrdersByTrader_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelOrdersByTraderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChainServiceServer).CancelOrdersByTrader(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chain.ChainService/CancelOrdersByTrader",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChainServiceServer).CancelOrdersByTrader(ctx, req.(*CancelOrdersByTraderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChainService_GetTransferRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTransferRecordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChainServiceServer).GetTransferRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chain.ChainService/GetTransferRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChainServiceServer).GetTransferRecord(ctx, req.(*GetTransferRecordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChainService_Withdraw_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WithdrawRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChainServiceServer).Withdraw(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chain.ChainService/Withdraw",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChainServiceServer).Withdraw(ctx, req.(*WithdrawRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ChainService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chain.ChainService",
	HandlerType: (*ChainServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetMarket",
			Handler:    _ChainService_GetMarket_Handler,
		},
		{
			MethodName: "GetTradingConfig",
			Handler:    _ChainService_GetTradingConfig_Handler,
		},
		{
			MethodName: "GetCoinPairList",
			Handler:    _ChainService_GetCoinPairList_Handler,
		},
		{
			MethodName: "GetBalances",
			Handler:    _ChainService_GetBalances_Handler,
		},
		{
			MethodName: "GetOrdersOfTrader",
			Handler:    _ChainService_GetOrdersOfTrader_Handler,
		},
		{
			MethodName: "GetOrderById",
			Handler:    _ChainService_GetOrderById_Handler,
		},
		{
			MethodName: "PlaceOrder",
			Handler:    _ChainService_PlaceOrder_Handler,
		},
		{
			MethodName: "CancelOrder",
			Handler:    _ChainService_CancelOrder_Handler,
		},
		{
			MethodName: "CancelOrdersByTrader",
			Handler:    _ChainService_CancelOrdersByTrader_Handler,
		},
		{
			MethodName: "GetTransferRecord",
			Handler:    _ChainService_GetTransferRecord_Handler,
		},
		{
			MethodName: "Withdraw",
			Handler:    _ChainService_Withdraw_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "server.proto",
}
