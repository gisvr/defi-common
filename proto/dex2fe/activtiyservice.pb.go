// Code generated by protoc-gen-go. DO NOT EDIT.
// source: activtiyservice.proto

package dex2fe

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ActivityServiceEnum_Rpc int32

const (
	ActivityServiceEnum_GetUserInfo          ActivityServiceEnum_Rpc = 0
	ActivityServiceEnum_GetActivityInfo      ActivityServiceEnum_Rpc = 1
	ActivityServiceEnum_GetActivityAward     ActivityServiceEnum_Rpc = 2
	ActivityServiceEnum_ReceiveAward         ActivityServiceEnum_Rpc = 3
	ActivityServiceEnum_GetActivitySubscribe ActivityServiceEnum_Rpc = 4
	ActivityServiceEnum_TokenSubscribe       ActivityServiceEnum_Rpc = 5
	ActivityServiceEnum_GetSubscribe         ActivityServiceEnum_Rpc = 6
)

var ActivityServiceEnum_Rpc_name = map[int32]string{
	0: "GetUserInfo",
	1: "GetActivityInfo",
	2: "GetActivityAward",
	3: "ReceiveAward",
	4: "GetActivitySubscribe",
	5: "TokenSubscribe",
	6: "GetSubscribe",
}

var ActivityServiceEnum_Rpc_value = map[string]int32{
	"GetUserInfo":          0,
	"GetActivityInfo":      1,
	"GetActivityAward":     2,
	"ReceiveAward":         3,
	"GetActivitySubscribe": 4,
	"TokenSubscribe":       5,
	"GetSubscribe":         6,
}

func (x ActivityServiceEnum_Rpc) String() string {
	return proto.EnumName(ActivityServiceEnum_Rpc_name, int32(x))
}

func (ActivityServiceEnum_Rpc) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_85083b25a673681b, []int{0, 0}
}

type ActivityServiceEnum struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActivityServiceEnum) Reset()         { *m = ActivityServiceEnum{} }
func (m *ActivityServiceEnum) String() string { return proto.CompactTextString(m) }
func (*ActivityServiceEnum) ProtoMessage()    {}
func (*ActivityServiceEnum) Descriptor() ([]byte, []int) {
	return fileDescriptor_85083b25a673681b, []int{0}
}

func (m *ActivityServiceEnum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivityServiceEnum.Unmarshal(m, b)
}
func (m *ActivityServiceEnum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivityServiceEnum.Marshal(b, m, deterministic)
}
func (m *ActivityServiceEnum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityServiceEnum.Merge(m, src)
}
func (m *ActivityServiceEnum) XXX_Size() int {
	return xxx_messageInfo_ActivityServiceEnum.Size(m)
}
func (m *ActivityServiceEnum) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityServiceEnum.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityServiceEnum proto.InternalMessageInfo

type GetActivitySubscribeRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetActivitySubscribeRequest) Reset()         { *m = GetActivitySubscribeRequest{} }
func (m *GetActivitySubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*GetActivitySubscribeRequest) ProtoMessage()    {}
func (*GetActivitySubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_85083b25a673681b, []int{1}
}

func (m *GetActivitySubscribeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetActivitySubscribeRequest.Unmarshal(m, b)
}
func (m *GetActivitySubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetActivitySubscribeRequest.Marshal(b, m, deterministic)
}
func (m *GetActivitySubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetActivitySubscribeRequest.Merge(m, src)
}
func (m *GetActivitySubscribeRequest) XXX_Size() int {
	return xxx_messageInfo_GetActivitySubscribeRequest.Size(m)
}
func (m *GetActivitySubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetActivitySubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetActivitySubscribeRequest proto.InternalMessageInfo

type GetActivitySubscribeResponse struct {
	TokenSymbol          string   `protobuf:"bytes,1,opt,name=token_symbol,proto3" json:"token_symbol,omitempty"`
	TokenDesc            string   `protobuf:"bytes,2,opt,name=token_desc,proto3" json:"token_desc,omitempty"`
	Website              string   `protobuf:"bytes,3,opt,name=website,proto3" json:"website,omitempty"`
	Whitepaper           string   `protobuf:"bytes,4,opt,name=whitepaper,proto3" json:"whitepaper,omitempty"`
	Phase                string   `protobuf:"bytes,5,opt,name=phase,proto3" json:"phase,omitempty"`
	ChainToken           string   `protobuf:"bytes,6,opt,name=chain_token,proto3" json:"chain_token,omitempty"`
	TokenTotal           string   `protobuf:"bytes,7,opt,name=token_total,proto3" json:"token_total,omitempty"`
	MinLimit             string   `protobuf:"bytes,8,opt,name=min_limit,proto3" json:"min_limit,omitempty"`
	MaxLimit             string   `protobuf:"bytes,9,opt,name=max_limit,proto3" json:"max_limit,omitempty"`
	StartTime            string   `protobuf:"bytes,10,opt,name=start_time,proto3" json:"start_time,omitempty"`
	MarketValuation      string   `protobuf:"bytes,11,opt,name=market_valuation,proto3" json:"market_valuation,omitempty"`
	MarketCap            string   `protobuf:"bytes,12,opt,name=market_cap,proto3" json:"market_cap,omitempty"`
	TotalSupply          string   `protobuf:"bytes,13,opt,name=total_supply,proto3" json:"total_supply,omitempty"`
	OpensourceType       string   `protobuf:"bytes,14,opt,name=opensource_type,proto3" json:"opensource_type,omitempty"`
	TokenType            string   `protobuf:"bytes,15,opt,name=token_type,json=total_supply,proto3" json:"token_type,omitempty"`
	RegistryCountries    string   `protobuf:"bytes,16,opt,name=registry_countries,proto3" json:"registry_countries,omitempty"`
	IcoPrice             string   `protobuf:"bytes,17,opt,name=ico_price,proto3" json:"ico_price,omitempty"`
	SubscribeRate        string   `protobuf:"bytes,18,opt,name=subscribe_rate,proto3" json:"subscribe_rate,omitempty"`
	ActivityId           string   `protobuf:"bytes,19,opt,name=activity_id,proto3" json:"activity_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetActivitySubscribeResponse) Reset()         { *m = GetActivitySubscribeResponse{} }
func (m *GetActivitySubscribeResponse) String() string { return proto.CompactTextString(m) }
func (*GetActivitySubscribeResponse) ProtoMessage()    {}
func (*GetActivitySubscribeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_85083b25a673681b, []int{2}
}

func (m *GetActivitySubscribeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetActivitySubscribeResponse.Unmarshal(m, b)
}
func (m *GetActivitySubscribeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetActivitySubscribeResponse.Marshal(b, m, deterministic)
}
func (m *GetActivitySubscribeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetActivitySubscribeResponse.Merge(m, src)
}
func (m *GetActivitySubscribeResponse) XXX_Size() int {
	return xxx_messageInfo_GetActivitySubscribeResponse.Size(m)
}
func (m *GetActivitySubscribeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetActivitySubscribeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetActivitySubscribeResponse proto.InternalMessageInfo

func (m *GetActivitySubscribeResponse) GetTokenSymbol() string {
	if m != nil {
		return m.TokenSymbol
	}
	return ""
}

func (m *GetActivitySubscribeResponse) GetTokenDesc() string {
	if m != nil {
		return m.TokenDesc
	}
	return ""
}

func (m *GetActivitySubscribeResponse) GetWebsite() string {
	if m != nil {
		return m.Website
	}
	return ""
}

func (m *GetActivitySubscribeResponse) GetWhitepaper() string {
	if m != nil {
		return m.Whitepaper
	}
	return ""
}

func (m *GetActivitySubscribeResponse) GetPhase() string {
	if m != nil {
		return m.Phase
	}
	return ""
}

func (m *GetActivitySubscribeResponse) GetChainToken() string {
	if m != nil {
		return m.ChainToken
	}
	return ""
}

func (m *GetActivitySubscribeResponse) GetTokenTotal() string {
	if m != nil {
		return m.TokenTotal
	}
	return ""
}

func (m *GetActivitySubscribeResponse) GetMinLimit() string {
	if m != nil {
		return m.MinLimit
	}
	return ""
}

func (m *GetActivitySubscribeResponse) GetMaxLimit() string {
	if m != nil {
		return m.MaxLimit
	}
	return ""
}

func (m *GetActivitySubscribeResponse) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *GetActivitySubscribeResponse) GetMarketValuation() string {
	if m != nil {
		return m.MarketValuation
	}
	return ""
}

func (m *GetActivitySubscribeResponse) GetMarketCap() string {
	if m != nil {
		return m.MarketCap
	}
	return ""
}

func (m *GetActivitySubscribeResponse) GetTotalSupply() string {
	if m != nil {
		return m.TotalSupply
	}
	return ""
}

func (m *GetActivitySubscribeResponse) GetOpensourceType() string {
	if m != nil {
		return m.OpensourceType
	}
	return ""
}

func (m *GetActivitySubscribeResponse) GetTokenType() string {
	if m != nil {
		return m.TokenType
	}
	return ""
}

func (m *GetActivitySubscribeResponse) GetRegistryCountries() string {
	if m != nil {
		return m.RegistryCountries
	}
	return ""
}

func (m *GetActivitySubscribeResponse) GetIcoPrice() string {
	if m != nil {
		return m.IcoPrice
	}
	return ""
}

func (m *GetActivitySubscribeResponse) GetSubscribeRate() string {
	if m != nil {
		return m.SubscribeRate
	}
	return ""
}

func (m *GetActivitySubscribeResponse) GetActivityId() string {
	if m != nil {
		return m.ActivityId
	}
	return ""
}

type TokenSubscribeRequest struct {
	BiboxUid             string   `protobuf:"bytes,1,opt,name=bibox_uid,proto3" json:"bibox_uid,omitempty"`
	Trader               string   `protobuf:"bytes,2,opt,name=trader,proto3" json:"trader,omitempty"`
	UserFrom             string   `protobuf:"bytes,3,opt,name=user_from,proto3" json:"user_from,omitempty"`
	TokenSymbol          string   `protobuf:"bytes,4,opt,name=token_symbol,proto3" json:"token_symbol,omitempty"`
	SubscribeCnt         string   `protobuf:"bytes,5,opt,name=subscribe_cnt,proto3" json:"subscribe_cnt,omitempty"`
	ActivityId           string   `protobuf:"bytes,6,opt,name=activity_id,proto3" json:"activity_id,omitempty"`
	Chain                string   `protobuf:"bytes,7,opt,name=chain,proto3" json:"chain,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokenSubscribeRequest) Reset()         { *m = TokenSubscribeRequest{} }
func (m *TokenSubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*TokenSubscribeRequest) ProtoMessage()    {}
func (*TokenSubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_85083b25a673681b, []int{3}
}

func (m *TokenSubscribeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenSubscribeRequest.Unmarshal(m, b)
}
func (m *TokenSubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenSubscribeRequest.Marshal(b, m, deterministic)
}
func (m *TokenSubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenSubscribeRequest.Merge(m, src)
}
func (m *TokenSubscribeRequest) XXX_Size() int {
	return xxx_messageInfo_TokenSubscribeRequest.Size(m)
}
func (m *TokenSubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenSubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TokenSubscribeRequest proto.InternalMessageInfo

func (m *TokenSubscribeRequest) GetBiboxUid() string {
	if m != nil {
		return m.BiboxUid
	}
	return ""
}

func (m *TokenSubscribeRequest) GetTrader() string {
	if m != nil {
		return m.Trader
	}
	return ""
}

func (m *TokenSubscribeRequest) GetUserFrom() string {
	if m != nil {
		return m.UserFrom
	}
	return ""
}

func (m *TokenSubscribeRequest) GetTokenSymbol() string {
	if m != nil {
		return m.TokenSymbol
	}
	return ""
}

func (m *TokenSubscribeRequest) GetSubscribeCnt() string {
	if m != nil {
		return m.SubscribeCnt
	}
	return ""
}

func (m *TokenSubscribeRequest) GetActivityId() string {
	if m != nil {
		return m.ActivityId
	}
	return ""
}

func (m *TokenSubscribeRequest) GetChain() string {
	if m != nil {
		return m.Chain
	}
	return ""
}

type GetSubscribeRequest struct {
	TraderAddr           string   `protobuf:"bytes,1,opt,name=trader_addr,json=traderAddr,proto3" json:"trader_addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSubscribeRequest) Reset()         { *m = GetSubscribeRequest{} }
func (m *GetSubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*GetSubscribeRequest) ProtoMessage()    {}
func (*GetSubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_85083b25a673681b, []int{4}
}

func (m *GetSubscribeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSubscribeRequest.Unmarshal(m, b)
}
func (m *GetSubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSubscribeRequest.Marshal(b, m, deterministic)
}
func (m *GetSubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSubscribeRequest.Merge(m, src)
}
func (m *GetSubscribeRequest) XXX_Size() int {
	return xxx_messageInfo_GetSubscribeRequest.Size(m)
}
func (m *GetSubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSubscribeRequest proto.InternalMessageInfo

func (m *GetSubscribeRequest) GetTraderAddr() string {
	if m != nil {
		return m.TraderAddr
	}
	return ""
}

type GetSubscribeResponse struct {
	BiboxUid             string   `protobuf:"bytes,1,opt,name=bibox_uid,proto3" json:"bibox_uid,omitempty"`
	Trader               string   `protobuf:"bytes,2,opt,name=trader,proto3" json:"trader,omitempty"`
	UserFrom             string   `protobuf:"bytes,3,opt,name=user_from,proto3" json:"user_from,omitempty"`
	TokenSymbol          string   `protobuf:"bytes,4,opt,name=token_symbol,proto3" json:"token_symbol,omitempty"`
	DiscountRate         string   `protobuf:"bytes,5,opt,name=discount_rate,proto3" json:"discount_rate,omitempty"`
	HoldAmount           string   `protobuf:"bytes,6,opt,name=hold_amount,proto3" json:"hold_amount,omitempty"`
	SubscribeTokenCnt    string   `protobuf:"bytes,7,opt,name=subscribe_token_cnt,proto3" json:"subscribe_token_cnt,omitempty"`
	SubscribeCnt         string   `protobuf:"bytes,8,opt,name=subscribe_cnt,proto3" json:"subscribe_cnt,omitempty"`
	AssignedCnt          string   `protobuf:"bytes,10,opt,name=assigned_cnt,proto3" json:"assigned_cnt,omitempty"`
	AssignedTokenCnt     string   `protobuf:"bytes,11,opt,name=assigned_token_cnt,proto3" json:"assigned_token_cnt,omitempty"`
	CreateTime           string   `protobuf:"bytes,12,opt,name=create_time,proto3" json:"create_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSubscribeResponse) Reset()         { *m = GetSubscribeResponse{} }
func (m *GetSubscribeResponse) String() string { return proto.CompactTextString(m) }
func (*GetSubscribeResponse) ProtoMessage()    {}
func (*GetSubscribeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_85083b25a673681b, []int{5}
}

func (m *GetSubscribeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSubscribeResponse.Unmarshal(m, b)
}
func (m *GetSubscribeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSubscribeResponse.Marshal(b, m, deterministic)
}
func (m *GetSubscribeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSubscribeResponse.Merge(m, src)
}
func (m *GetSubscribeResponse) XXX_Size() int {
	return xxx_messageInfo_GetSubscribeResponse.Size(m)
}
func (m *GetSubscribeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSubscribeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetSubscribeResponse proto.InternalMessageInfo

func (m *GetSubscribeResponse) GetBiboxUid() string {
	if m != nil {
		return m.BiboxUid
	}
	return ""
}

func (m *GetSubscribeResponse) GetTrader() string {
	if m != nil {
		return m.Trader
	}
	return ""
}

func (m *GetSubscribeResponse) GetUserFrom() string {
	if m != nil {
		return m.UserFrom
	}
	return ""
}

func (m *GetSubscribeResponse) GetTokenSymbol() string {
	if m != nil {
		return m.TokenSymbol
	}
	return ""
}

func (m *GetSubscribeResponse) GetDiscountRate() string {
	if m != nil {
		return m.DiscountRate
	}
	return ""
}

func (m *GetSubscribeResponse) GetHoldAmount() string {
	if m != nil {
		return m.HoldAmount
	}
	return ""
}

func (m *GetSubscribeResponse) GetSubscribeTokenCnt() string {
	if m != nil {
		return m.SubscribeTokenCnt
	}
	return ""
}

func (m *GetSubscribeResponse) GetSubscribeCnt() string {
	if m != nil {
		return m.SubscribeCnt
	}
	return ""
}

func (m *GetSubscribeResponse) GetAssignedCnt() string {
	if m != nil {
		return m.AssignedCnt
	}
	return ""
}

func (m *GetSubscribeResponse) GetAssignedTokenCnt() string {
	if m != nil {
		return m.AssignedTokenCnt
	}
	return ""
}

func (m *GetSubscribeResponse) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

type GetUserInfoRequest struct {
	TraderAddr           string   `protobuf:"bytes,1,opt,name=trader_addr,json=traderAddr,proto3" json:"trader_addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserInfoRequest) Reset()         { *m = GetUserInfoRequest{} }
func (m *GetUserInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetUserInfoRequest) ProtoMessage()    {}
func (*GetUserInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_85083b25a673681b, []int{6}
}

func (m *GetUserInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserInfoRequest.Unmarshal(m, b)
}
func (m *GetUserInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetUserInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserInfoRequest.Merge(m, src)
}
func (m *GetUserInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetUserInfoRequest.Size(m)
}
func (m *GetUserInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserInfoRequest proto.InternalMessageInfo

func (m *GetUserInfoRequest) GetTraderAddr() string {
	if m != nil {
		return m.TraderAddr
	}
	return ""
}

type GetUserInfoResponse struct {
	Isnew                int64    `protobuf:"varint,1,opt,name=isnew,proto3" json:"isnew,omitempty"`
	EosLoginReward       string   `protobuf:"bytes,2,opt,name=eos_login_reward,json=eosLoginReward,proto3" json:"eos_login_reward,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserInfoResponse) Reset()         { *m = GetUserInfoResponse{} }
func (m *GetUserInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetUserInfoResponse) ProtoMessage()    {}
func (*GetUserInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_85083b25a673681b, []int{7}
}

func (m *GetUserInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserInfoResponse.Unmarshal(m, b)
}
func (m *GetUserInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserInfoResponse.Marshal(b, m, deterministic)
}
func (m *GetUserInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserInfoResponse.Merge(m, src)
}
func (m *GetUserInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetUserInfoResponse.Size(m)
}
func (m *GetUserInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserInfoResponse proto.InternalMessageInfo

func (m *GetUserInfoResponse) GetIsnew() int64 {
	if m != nil {
		return m.Isnew
	}
	return 0
}

func (m *GetUserInfoResponse) GetEosLoginReward() string {
	if m != nil {
		return m.EosLoginReward
	}
	return ""
}

type GetActivityRequest struct {
	TraderAddr           string   `protobuf:"bytes,1,opt,name=trader_addr,json=traderAddr,proto3" json:"trader_addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetActivityRequest) Reset()         { *m = GetActivityRequest{} }
func (m *GetActivityRequest) String() string { return proto.CompactTextString(m) }
func (*GetActivityRequest) ProtoMessage()    {}
func (*GetActivityRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_85083b25a673681b, []int{8}
}

func (m *GetActivityRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetActivityRequest.Unmarshal(m, b)
}
func (m *GetActivityRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetActivityRequest.Marshal(b, m, deterministic)
}
func (m *GetActivityRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetActivityRequest.Merge(m, src)
}
func (m *GetActivityRequest) XXX_Size() int {
	return xxx_messageInfo_GetActivityRequest.Size(m)
}
func (m *GetActivityRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetActivityRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetActivityRequest proto.InternalMessageInfo

func (m *GetActivityRequest) GetTraderAddr() string {
	if m != nil {
		return m.TraderAddr
	}
	return ""
}

type GetActivityResponse struct {
	Activity             *Activity `protobuf:"bytes,1,opt,name=activity,proto3" json:"activity,omitempty"`
	ActivityReward       int64     `protobuf:"varint,2,opt,name=activity_reward,json=activityReward,proto3" json:"activity_reward,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetActivityResponse) Reset()         { *m = GetActivityResponse{} }
func (m *GetActivityResponse) String() string { return proto.CompactTextString(m) }
func (*GetActivityResponse) ProtoMessage()    {}
func (*GetActivityResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_85083b25a673681b, []int{9}
}

func (m *GetActivityResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetActivityResponse.Unmarshal(m, b)
}
func (m *GetActivityResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetActivityResponse.Marshal(b, m, deterministic)
}
func (m *GetActivityResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetActivityResponse.Merge(m, src)
}
func (m *GetActivityResponse) XXX_Size() int {
	return xxx_messageInfo_GetActivityResponse.Size(m)
}
func (m *GetActivityResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetActivityResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetActivityResponse proto.InternalMessageInfo

func (m *GetActivityResponse) GetActivity() *Activity {
	if m != nil {
		return m.Activity
	}
	return nil
}

func (m *GetActivityResponse) GetActivityReward() int64 {
	if m != nil {
		return m.ActivityReward
	}
	return 0
}

type GetActivityAwardRequest struct {
	TraderAddr           string   `protobuf:"bytes,1,opt,name=trader_addr,json=traderAddr,proto3" json:"trader_addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetActivityAwardRequest) Reset()         { *m = GetActivityAwardRequest{} }
func (m *GetActivityAwardRequest) String() string { return proto.CompactTextString(m) }
func (*GetActivityAwardRequest) ProtoMessage()    {}
func (*GetActivityAwardRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_85083b25a673681b, []int{10}
}

func (m *GetActivityAwardRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetActivityAwardRequest.Unmarshal(m, b)
}
func (m *GetActivityAwardRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetActivityAwardRequest.Marshal(b, m, deterministic)
}
func (m *GetActivityAwardRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetActivityAwardRequest.Merge(m, src)
}
func (m *GetActivityAwardRequest) XXX_Size() int {
	return xxx_messageInfo_GetActivityAwardRequest.Size(m)
}
func (m *GetActivityAwardRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetActivityAwardRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetActivityAwardRequest proto.InternalMessageInfo

func (m *GetActivityAwardRequest) GetTraderAddr() string {
	if m != nil {
		return m.TraderAddr
	}
	return ""
}

type GetActivityAwardResponse struct {
	Awards               []*ActivityAward `protobuf:"bytes,1,rep,name=awards,proto3" json:"awards,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetActivityAwardResponse) Reset()         { *m = GetActivityAwardResponse{} }
func (m *GetActivityAwardResponse) String() string { return proto.CompactTextString(m) }
func (*GetActivityAwardResponse) ProtoMessage()    {}
func (*GetActivityAwardResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_85083b25a673681b, []int{11}
}

func (m *GetActivityAwardResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetActivityAwardResponse.Unmarshal(m, b)
}
func (m *GetActivityAwardResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetActivityAwardResponse.Marshal(b, m, deterministic)
}
func (m *GetActivityAwardResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetActivityAwardResponse.Merge(m, src)
}
func (m *GetActivityAwardResponse) XXX_Size() int {
	return xxx_messageInfo_GetActivityAwardResponse.Size(m)
}
func (m *GetActivityAwardResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetActivityAwardResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetActivityAwardResponse proto.InternalMessageInfo

func (m *GetActivityAwardResponse) GetAwards() []*ActivityAward {
	if m != nil {
		return m.Awards
	}
	return nil
}

type ReceiveAwardRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserAddress          string   `protobuf:"bytes,2,opt,name=user_address,json=userAddress,proto3" json:"user_address,omitempty"`
	Status               int64    `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReceiveAwardRequest) Reset()         { *m = ReceiveAwardRequest{} }
func (m *ReceiveAwardRequest) String() string { return proto.CompactTextString(m) }
func (*ReceiveAwardRequest) ProtoMessage()    {}
func (*ReceiveAwardRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_85083b25a673681b, []int{12}
}

func (m *ReceiveAwardRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceiveAwardRequest.Unmarshal(m, b)
}
func (m *ReceiveAwardRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceiveAwardRequest.Marshal(b, m, deterministic)
}
func (m *ReceiveAwardRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiveAwardRequest.Merge(m, src)
}
func (m *ReceiveAwardRequest) XXX_Size() int {
	return xxx_messageInfo_ReceiveAwardRequest.Size(m)
}
func (m *ReceiveAwardRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiveAwardRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiveAwardRequest proto.InternalMessageInfo

func (m *ReceiveAwardRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ReceiveAwardRequest) GetUserAddress() string {
	if m != nil {
		return m.UserAddress
	}
	return ""
}

func (m *ReceiveAwardRequest) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

type ReceiveAwardResponse struct {
	Award                *ActivityAward `protobuf:"bytes,1,opt,name=award,proto3" json:"award,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ReceiveAwardResponse) Reset()         { *m = ReceiveAwardResponse{} }
func (m *ReceiveAwardResponse) String() string { return proto.CompactTextString(m) }
func (*ReceiveAwardResponse) ProtoMessage()    {}
func (*ReceiveAwardResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_85083b25a673681b, []int{13}
}

func (m *ReceiveAwardResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceiveAwardResponse.Unmarshal(m, b)
}
func (m *ReceiveAwardResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceiveAwardResponse.Marshal(b, m, deterministic)
}
func (m *ReceiveAwardResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiveAwardResponse.Merge(m, src)
}
func (m *ReceiveAwardResponse) XXX_Size() int {
	return xxx_messageInfo_ReceiveAwardResponse.Size(m)
}
func (m *ReceiveAwardResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiveAwardResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiveAwardResponse proto.InternalMessageInfo

func (m *ReceiveAwardResponse) GetAward() *ActivityAward {
	if m != nil {
		return m.Award
	}
	return nil
}

type Activity struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PairId               string   `protobuf:"bytes,2,opt,name=pair_id,json=pairId,proto3" json:"pair_id,omitempty"`
	StartTimeSec         int64    `protobuf:"varint,3,opt,name=start_time_sec,json=startTimeSec,proto3" json:"start_time_sec,omitempty"`
	EndTimeSec           int64    `protobuf:"varint,4,opt,name=end_time_sec,json=endTimeSec,proto3" json:"end_time_sec,omitempty"`
	Increment            int64    `protobuf:"varint,5,opt,name=increment,proto3" json:"increment,omitempty"`
	Reward               int64    `protobuf:"varint,6,opt,name=reward,proto3" json:"reward,omitempty"`
	MaxReward            int64    `protobuf:"varint,7,opt,name=max_reward,json=maxReward,proto3" json:"max_reward,omitempty"`
	Desc                 string   `protobuf:"bytes,8,opt,name=desc,proto3" json:"desc,omitempty"`
	CreateTime           int64    `protobuf:"varint,9,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	InitReward           int64    `protobuf:"varint,10,opt,name=init_reward,json=initReward,proto3" json:"init_reward,omitempty"`
	TakerAddr            string   `protobuf:"bytes,11,opt,name=taker_addr,json=takerAddr,proto3" json:"taker_addr,omitempty"`
	MakerAddr            string   `protobuf:"bytes,12,opt,name=maker_addr,json=makerAddr,proto3" json:"maker_addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Activity) Reset()         { *m = Activity{} }
func (m *Activity) String() string { return proto.CompactTextString(m) }
func (*Activity) ProtoMessage()    {}
func (*Activity) Descriptor() ([]byte, []int) {
	return fileDescriptor_85083b25a673681b, []int{14}
}

func (m *Activity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Activity.Unmarshal(m, b)
}
func (m *Activity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Activity.Marshal(b, m, deterministic)
}
func (m *Activity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity.Merge(m, src)
}
func (m *Activity) XXX_Size() int {
	return xxx_messageInfo_Activity.Size(m)
}
func (m *Activity) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity.DiscardUnknown(m)
}

var xxx_messageInfo_Activity proto.InternalMessageInfo

func (m *Activity) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Activity) GetPairId() string {
	if m != nil {
		return m.PairId
	}
	return ""
}

func (m *Activity) GetStartTimeSec() int64 {
	if m != nil {
		return m.StartTimeSec
	}
	return 0
}

func (m *Activity) GetEndTimeSec() int64 {
	if m != nil {
		return m.EndTimeSec
	}
	return 0
}

func (m *Activity) GetIncrement() int64 {
	if m != nil {
		return m.Increment
	}
	return 0
}

func (m *Activity) GetReward() int64 {
	if m != nil {
		return m.Reward
	}
	return 0
}

func (m *Activity) GetMaxReward() int64 {
	if m != nil {
		return m.MaxReward
	}
	return 0
}

func (m *Activity) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *Activity) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *Activity) GetInitReward() int64 {
	if m != nil {
		return m.InitReward
	}
	return 0
}

func (m *Activity) GetTakerAddr() string {
	if m != nil {
		return m.TakerAddr
	}
	return ""
}

func (m *Activity) GetMakerAddr() string {
	if m != nil {
		return m.MakerAddr
	}
	return ""
}

type ActivityLog struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ActivityId           int64    `protobuf:"varint,2,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	TradeId              int64    `protobuf:"varint,3,opt,name=trade_id,json=tradeId,proto3" json:"trade_id,omitempty"`
	CountDownSec         int64    `protobuf:"varint,4,opt,name=count_down_sec,json=countDownSec,proto3" json:"count_down_sec,omitempty"`
	VolumeE8             int64    `protobuf:"varint,5,opt,name=volume_e8,json=volumeE8,proto3" json:"volume_e8,omitempty"`
	Reward               int64    `protobuf:"varint,6,opt,name=reward,proto3" json:"reward,omitempty"`
	CreateTime           int64    `protobuf:"varint,7,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	TakerAdrr            string   `protobuf:"bytes,8,opt,name=taker_adrr,json=takerAdrr,proto3" json:"taker_adrr,omitempty"`
	MakerAdrr            string   `protobuf:"bytes,9,opt,name=maker_adrr,json=makerAdrr,proto3" json:"maker_adrr,omitempty"`
	MakerIsBuyer         string   `protobuf:"bytes,10,opt,name=maker_is_buyer,json=makerIsBuyer,proto3" json:"maker_is_buyer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActivityLog) Reset()         { *m = ActivityLog{} }
func (m *ActivityLog) String() string { return proto.CompactTextString(m) }
func (*ActivityLog) ProtoMessage()    {}
func (*ActivityLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_85083b25a673681b, []int{15}
}

func (m *ActivityLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivityLog.Unmarshal(m, b)
}
func (m *ActivityLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivityLog.Marshal(b, m, deterministic)
}
func (m *ActivityLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityLog.Merge(m, src)
}
func (m *ActivityLog) XXX_Size() int {
	return xxx_messageInfo_ActivityLog.Size(m)
}
func (m *ActivityLog) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityLog.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityLog proto.InternalMessageInfo

func (m *ActivityLog) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ActivityLog) GetActivityId() int64 {
	if m != nil {
		return m.ActivityId
	}
	return 0
}

func (m *ActivityLog) GetTradeId() int64 {
	if m != nil {
		return m.TradeId
	}
	return 0
}

func (m *ActivityLog) GetCountDownSec() int64 {
	if m != nil {
		return m.CountDownSec
	}
	return 0
}

func (m *ActivityLog) GetVolumeE8() int64 {
	if m != nil {
		return m.VolumeE8
	}
	return 0
}

func (m *ActivityLog) GetReward() int64 {
	if m != nil {
		return m.Reward
	}
	return 0
}

func (m *ActivityLog) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *ActivityLog) GetTakerAdrr() string {
	if m != nil {
		return m.TakerAdrr
	}
	return ""
}

func (m *ActivityLog) GetMakerAdrr() string {
	if m != nil {
		return m.MakerAdrr
	}
	return ""
}

func (m *ActivityLog) GetMakerIsBuyer() string {
	if m != nil {
		return m.MakerIsBuyer
	}
	return ""
}

type LuckyTower struct {
	TowerHight           int64            `protobuf:"varint,1,opt,name=tower_hight,json=towerHight,proto3" json:"tower_hight,omitempty"`
	TowerFloor           int64            `protobuf:"varint,2,opt,name=tower_floor,json=towerFloor,proto3" json:"tower_floor,omitempty"`
	EosLuckybagTotle     int64            `protobuf:"varint,3,opt,name=eos_luckybag_totle,json=eosLuckybagTotle,proto3" json:"eos_luckybag_totle,omitempty"`
	EosRewardTotle       int64            `protobuf:"varint,4,opt,name=eos_reward_totle,json=eosRewardTotle,proto3" json:"eos_reward_totle,omitempty"`
	EthLuckybagTotle     int64            `protobuf:"varint,5,opt,name=eth_luckybag_totle,json=ethLuckybagTotle,proto3" json:"eth_luckybag_totle,omitempty"`
	EthRewardTotle       int64            `protobuf:"varint,6,opt,name=eth_reward_totle,json=ethRewardTotle,proto3" json:"eth_reward_totle,omitempty"`
	RankingList          map[string]int64 `protobuf:"bytes,7,rep,name=ranking_list,json=rankingList,proto3" json:"ranking_list,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *LuckyTower) Reset()         { *m = LuckyTower{} }
func (m *LuckyTower) String() string { return proto.CompactTextString(m) }
func (*LuckyTower) ProtoMessage()    {}
func (*LuckyTower) Descriptor() ([]byte, []int) {
	return fileDescriptor_85083b25a673681b, []int{16}
}

func (m *LuckyTower) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LuckyTower.Unmarshal(m, b)
}
func (m *LuckyTower) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LuckyTower.Marshal(b, m, deterministic)
}
func (m *LuckyTower) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LuckyTower.Merge(m, src)
}
func (m *LuckyTower) XXX_Size() int {
	return xxx_messageInfo_LuckyTower.Size(m)
}
func (m *LuckyTower) XXX_DiscardUnknown() {
	xxx_messageInfo_LuckyTower.DiscardUnknown(m)
}

var xxx_messageInfo_LuckyTower proto.InternalMessageInfo

func (m *LuckyTower) GetTowerHight() int64 {
	if m != nil {
		return m.TowerHight
	}
	return 0
}

func (m *LuckyTower) GetTowerFloor() int64 {
	if m != nil {
		return m.TowerFloor
	}
	return 0
}

func (m *LuckyTower) GetEosLuckybagTotle() int64 {
	if m != nil {
		return m.EosLuckybagTotle
	}
	return 0
}

func (m *LuckyTower) GetEosRewardTotle() int64 {
	if m != nil {
		return m.EosRewardTotle
	}
	return 0
}

func (m *LuckyTower) GetEthLuckybagTotle() int64 {
	if m != nil {
		return m.EthLuckybagTotle
	}
	return 0
}

func (m *LuckyTower) GetEthRewardTotle() int64 {
	if m != nil {
		return m.EthRewardTotle
	}
	return 0
}

func (m *LuckyTower) GetRankingList() map[string]int64 {
	if m != nil {
		return m.RankingList
	}
	return nil
}

type ActivityAward struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Activity             string   `protobuf:"bytes,2,opt,name=activity,proto3" json:"activity,omitempty"`
	UserAddress          string   `protobuf:"bytes,3,opt,name=user_address,json=userAddress,proto3" json:"user_address,omitempty"`
	TokenSymbol          string   `protobuf:"bytes,4,opt,name=token_symbol,json=tokenSymbol,proto3" json:"token_symbol,omitempty"`
	AmountE8             float32  `protobuf:"fixed32,5,opt,name=amount_e8,json=amountE8,proto3" json:"amount_e8,omitempty"`
	Status               int64    `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	Type                 int64    `protobuf:"varint,7,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActivityAward) Reset()         { *m = ActivityAward{} }
func (m *ActivityAward) String() string { return proto.CompactTextString(m) }
func (*ActivityAward) ProtoMessage()    {}
func (*ActivityAward) Descriptor() ([]byte, []int) {
	return fileDescriptor_85083b25a673681b, []int{17}
}

func (m *ActivityAward) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivityAward.Unmarshal(m, b)
}
func (m *ActivityAward) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivityAward.Marshal(b, m, deterministic)
}
func (m *ActivityAward) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityAward.Merge(m, src)
}
func (m *ActivityAward) XXX_Size() int {
	return xxx_messageInfo_ActivityAward.Size(m)
}
func (m *ActivityAward) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityAward.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityAward proto.InternalMessageInfo

func (m *ActivityAward) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ActivityAward) GetActivity() string {
	if m != nil {
		return m.Activity
	}
	return ""
}

func (m *ActivityAward) GetUserAddress() string {
	if m != nil {
		return m.UserAddress
	}
	return ""
}

func (m *ActivityAward) GetTokenSymbol() string {
	if m != nil {
		return m.TokenSymbol
	}
	return ""
}

func (m *ActivityAward) GetAmountE8() float32 {
	if m != nil {
		return m.AmountE8
	}
	return 0
}

func (m *ActivityAward) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ActivityAward) GetType() int64 {
	if m != nil {
		return m.Type
	}
	return 0
}

func init() {
	proto.RegisterEnum("dfe.ActivityServiceEnum_Rpc", ActivityServiceEnum_Rpc_name, ActivityServiceEnum_Rpc_value)
	proto.RegisterType((*ActivityServiceEnum)(nil), "dfe.ActivityServiceEnum")
	proto.RegisterType((*GetActivitySubscribeRequest)(nil), "dfe.GetActivitySubscribeRequest")
	proto.RegisterType((*GetActivitySubscribeResponse)(nil), "dfe.GetActivitySubscribeResponse")
	proto.RegisterType((*TokenSubscribeRequest)(nil), "dfe.TokenSubscribeRequest")
	proto.RegisterType((*GetSubscribeRequest)(nil), "dfe.GetSubscribeRequest")
	proto.RegisterType((*GetSubscribeResponse)(nil), "dfe.GetSubscribeResponse")
	proto.RegisterType((*GetUserInfoRequest)(nil), "dfe.GetUserInfoRequest")
	proto.RegisterType((*GetUserInfoResponse)(nil), "dfe.GetUserInfoResponse")
	proto.RegisterType((*GetActivityRequest)(nil), "dfe.GetActivityRequest")
	proto.RegisterType((*GetActivityResponse)(nil), "dfe.GetActivityResponse")
	proto.RegisterType((*GetActivityAwardRequest)(nil), "dfe.GetActivityAwardRequest")
	proto.RegisterType((*GetActivityAwardResponse)(nil), "dfe.GetActivityAwardResponse")
	proto.RegisterType((*ReceiveAwardRequest)(nil), "dfe.ReceiveAwardRequest")
	proto.RegisterType((*ReceiveAwardResponse)(nil), "dfe.ReceiveAwardResponse")
	proto.RegisterType((*Activity)(nil), "dfe.Activity")
	proto.RegisterType((*ActivityLog)(nil), "dfe.ActivityLog")
	proto.RegisterType((*LuckyTower)(nil), "dfe.LuckyTower")
	proto.RegisterMapType((map[string]int64)(nil), "dfe.LuckyTower.RankingListEntry")
	proto.RegisterType((*ActivityAward)(nil), "dfe.ActivityAward")
}

func init() { proto.RegisterFile("activtiyservice.proto", fileDescriptor_85083b25a673681b) }

var fileDescriptor_85083b25a673681b = []byte{
	// 1651 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x58, 0xcd, 0x6e, 0x1b, 0x47,
	0x12, 0x36, 0x49, 0x89, 0xa2, 0x8a, 0x14, 0x45, 0xb7, 0x64, 0x7b, 0x4c, 0xc9, 0xb6, 0x34, 0x10,
	0x6c, 0xad, 0x61, 0x90, 0xbb, 0xda, 0x5d, 0x43, 0xf0, 0xc1, 0x58, 0x79, 0xd7, 0xf6, 0x0a, 0xd0,
	0x89, 0x92, 0x2f, 0xbe, 0xcc, 0x36, 0x67, 0x9a, 0x64, 0x43, 0xe4, 0xf4, 0x6c, 0x77, 0x53, 0x14,
	0x77, 0x11, 0x04, 0x48, 0xf2, 0x06, 0x7e, 0x85, 0x20, 0x07, 0xe7, 0x09, 0xf2, 0x0a, 0xb9, 0xe6,
	0xec, 0x9b, 0xaf, 0x79, 0x85, 0x20, 0xe8, 0x9f, 0xe1, 0x0c, 0x67, 0xc6, 0x89, 0x6f, 0xb9, 0xb1,
	0xbf, 0xaa, 0xae, 0xaa, 0xfe, 0xba, 0x7e, 0x7a, 0x08, 0xb7, 0xb0, 0x2f, 0xe9, 0x95, 0xa4, 0x73,
	0x41, 0xf8, 0x15, 0xf5, 0x49, 0x27, 0xe2, 0x4c, 0x32, 0x54, 0x09, 0x06, 0xa4, 0xbd, 0x3b, 0x64,
	0x6c, 0x38, 0x26, 0x5d, 0x1c, 0xd1, 0x2e, 0x0e, 0x43, 0x26, 0xb1, 0xa4, 0x2c, 0x14, 0x46, 0xa5,
	0xdd, 0xe2, 0x91, 0xcf, 0xa2, 0x14, 0xe2, 0x7e, 0x5f, 0x82, 0xad, 0x13, 0x65, 0x8e, 0xca, 0xf9,
	0xb9, 0x31, 0xf7, 0x32, 0x9c, 0x4e, 0xdc, 0x77, 0x25, 0xa8, 0xf4, 0x22, 0x1f, 0x6d, 0x42, 0xfd,
	0x35, 0x91, 0x6f, 0x04, 0xe1, 0xa7, 0xe1, 0x80, 0xb5, 0x6e, 0xa0, 0x2d, 0xd8, 0x7c, 0x4d, 0x64,
	0xbc, 0x45, 0x83, 0x25, 0xb4, 0x0d, 0xad, 0x14, 0x78, 0x32, 0xc3, 0x3c, 0x68, 0x95, 0x51, 0x0b,
	0x1a, 0x3d, 0xe2, 0x13, 0x7a, 0x45, 0x0c, 0x52, 0x41, 0x0e, 0x6c, 0xa7, 0xf4, 0xce, 0xa7, 0x7d,
	0xe1, 0x73, 0xda, 0x27, 0xad, 0x15, 0x84, 0xa0, 0x79, 0xc1, 0x2e, 0x49, 0x98, 0x60, 0xab, 0x6a,
	0xff, 0x6b, 0x22, 0x13, 0xa4, 0xea, 0xde, 0x83, 0x9d, 0xa2, 0xfd, 0x3d, 0xf2, 0xdf, 0x29, 0x11,
	0xd2, 0xfd, 0x6e, 0x15, 0x76, 0x8b, 0xe5, 0x22, 0x62, 0xa1, 0x20, 0xc8, 0x85, 0x86, 0x54, 0x5e,
	0x3c, 0x31, 0x9f, 0xf4, 0xd9, 0xd8, 0x29, 0xed, 0x95, 0x0e, 0xd7, 0x7b, 0x4b, 0x18, 0xba, 0x0f,
	0x60, 0xd6, 0x01, 0x11, 0xbe, 0x53, 0xd6, 0x1a, 0x29, 0x04, 0x39, 0xb0, 0x36, 0x23, 0x7d, 0x41,
	0x25, 0x71, 0x2a, 0x5a, 0x18, 0x2f, 0xd5, 0xce, 0xd9, 0x88, 0x4a, 0x12, 0xe1, 0x88, 0x70, 0x67,
	0xc5, 0xec, 0x4c, 0x10, 0xb4, 0x0d, 0xab, 0xd1, 0x08, 0x0b, 0xe2, 0xac, 0x6a, 0x91, 0x59, 0xa0,
	0x3d, 0xa8, 0xfb, 0x23, 0x4c, 0x43, 0x4f, 0xfb, 0x70, 0xaa, 0x5a, 0x96, 0x86, 0x94, 0x86, 0xf1,
	0x2f, 0x99, 0xc4, 0x63, 0x67, 0xcd, 0x68, 0xa4, 0x20, 0xb4, 0x0b, 0xeb, 0x13, 0x1a, 0x7a, 0x63,
	0x3a, 0xa1, 0xd2, 0xa9, 0x69, 0x79, 0x02, 0x68, 0x29, 0xbe, 0xb6, 0xd2, 0x75, 0x2b, 0x8d, 0x01,
	0x15, 0xb5, 0x90, 0x98, 0x4b, 0x4f, 0xd2, 0x09, 0x71, 0xc0, 0x44, 0x9d, 0x20, 0xe8, 0x31, 0xb4,
	0x26, 0x98, 0x5f, 0x12, 0xe9, 0x5d, 0xe1, 0xf1, 0x54, 0xa7, 0x93, 0x53, 0xd7, 0x5a, 0x39, 0x5c,
	0xd9, 0xb2, 0x98, 0x8f, 0x23, 0xa7, 0x61, 0x6c, 0x25, 0x88, 0xe1, 0x5f, 0xe2, 0xb1, 0x27, 0xa6,
	0x51, 0x34, 0x9e, 0x3b, 0x1b, 0x31, 0xff, 0x09, 0x86, 0x0e, 0x61, 0x93, 0x45, 0x24, 0x14, 0x6c,
	0xca, 0x7d, 0xe2, 0xc9, 0x79, 0x44, 0x9c, 0xa6, 0x56, 0xcb, 0xc2, 0x68, 0x2f, 0xbe, 0x29, 0xad,
	0xb4, 0x59, 0x60, 0xab, 0x03, 0x88, 0x93, 0x21, 0x15, 0x92, 0xcf, 0x3d, 0x9f, 0x4d, 0x43, 0xc9,
	0x29, 0x11, 0x4e, 0x4b, 0x6b, 0x16, 0x48, 0x14, 0x53, 0xd4, 0x67, 0x5e, 0xc4, 0xa9, 0x4f, 0x9c,
	0x9b, 0x86, 0xa9, 0x05, 0x80, 0x1e, 0x42, 0x53, 0xc4, 0x29, 0xe5, 0x71, 0x2c, 0x89, 0x83, 0xb4,
	0x4a, 0x06, 0x55, 0xf7, 0x85, 0x6d, 0x0a, 0x7a, 0x34, 0x70, 0xb6, 0xcc, 0x7d, 0xa5, 0x20, 0xf7,
	0xe7, 0x12, 0xdc, 0x5a, 0x4e, 0x77, 0x9b, 0xc2, 0x2a, 0x82, 0x3e, 0xed, 0xb3, 0x6b, 0x6f, 0x4a,
	0x03, 0x9b, 0x9e, 0x09, 0x80, 0x6e, 0x43, 0x55, 0x72, 0x1c, 0x10, 0x6e, 0xf3, 0xd2, 0xae, 0xd4,
	0xae, 0xa9, 0x20, 0xdc, 0x1b, 0x70, 0x36, 0xb1, 0x59, 0x99, 0x00, 0xb9, 0xac, 0x5f, 0x29, 0xc8,
	0xfa, 0x03, 0xd8, 0x48, 0x4e, 0xe1, 0x87, 0xd2, 0xe6, 0xe8, 0x32, 0x98, 0x3d, 0x59, 0x35, 0x77,
	0x32, 0x95, 0xe3, 0x3a, 0x75, 0x6d, 0x96, 0x9a, 0x85, 0xfb, 0x14, 0xb6, 0xd2, 0x95, 0x1c, 0x1f,
	0xf6, 0x01, 0xd4, 0xcd, 0x01, 0x3c, 0x1c, 0x04, 0xdc, 0x1e, 0x17, 0x0c, 0x74, 0x12, 0x04, 0xdc,
	0xfd, 0xb6, 0xa2, 0x1b, 0x46, 0xbe, 0x90, 0xff, 0x40, 0x9a, 0x02, 0x2a, 0x74, 0xc2, 0x98, 0x0c,
	0xb0, 0x34, 0x2d, 0x81, 0x8a, 0xa6, 0x11, 0x1b, 0x07, 0x1e, 0x9e, 0x28, 0x2c, 0xa6, 0x29, 0x05,
	0xa1, 0x3f, 0xc3, 0x56, 0xc2, 0xac, 0xf1, 0xa0, 0x48, 0x37, 0xa4, 0x15, 0x89, 0xf2, 0x17, 0x54,
	0x2b, 0xba, 0x20, 0x17, 0x1a, 0x58, 0x08, 0x3a, 0x0c, 0x49, 0xa0, 0x95, 0x4c, 0x39, 0x2f, 0x61,
	0xaa, 0x28, 0x16, 0xeb, 0xc4, 0xb5, 0x29, 0xe9, 0x02, 0x89, 0x6e, 0x50, 0x9c, 0x60, 0x49, 0x4c,
	0x87, 0x68, 0xd8, 0x06, 0x95, 0x40, 0xee, 0xdf, 0x01, 0xa5, 0x86, 0xc4, 0x67, 0xdf, 0xee, 0x1b,
	0x9d, 0x15, 0xc9, 0x36, 0x7b, 0xb7, 0xdb, 0xb0, 0x4a, 0x45, 0x48, 0x66, 0x7a, 0x47, 0xa5, 0x67,
	0x16, 0xe8, 0x10, 0x5a, 0x84, 0x09, 0x6f, 0xcc, 0x86, 0x34, 0xf4, 0x38, 0x51, 0x03, 0xc5, 0xde,
	0x6e, 0x93, 0x30, 0x71, 0xa6, 0xe0, 0x9e, 0x46, 0x6d, 0x34, 0xf1, 0x10, 0xf8, 0xec, 0x68, 0xa8,
	0x8e, 0x26, 0xd9, 0x66, 0xa3, 0xf9, 0x13, 0xd4, 0xe2, 0xfc, 0xd6, 0x9b, 0xea, 0x47, 0x1b, 0x9d,
	0x60, 0x40, 0x3a, 0x0b, 0xc5, 0x85, 0x18, 0x3d, 0x82, 0xcd, 0x45, 0x29, 0xa4, 0x22, 0xac, 0xf4,
	0x9a, 0x78, 0x61, 0x55, 0x47, 0xf8, 0x0c, 0xee, 0x64, 0xc7, 0xe5, 0x67, 0x87, 0xf9, 0x0a, 0x9c,
	0xfc, 0x5e, 0x1b, 0xeb, 0x63, 0xa8, 0x62, 0x05, 0x08, 0xa7, 0xb4, 0x57, 0x39, 0xac, 0x1f, 0xa1,
	0xa5, 0x48, 0x8d, 0xae, 0xd5, 0x70, 0xff, 0x03, 0x5b, 0xe9, 0xe1, 0x1c, 0xfb, 0x6f, 0x42, 0xd9,
	0x56, 0x54, 0xa5, 0x57, 0xa6, 0x01, 0xda, 0x87, 0x86, 0xae, 0x10, 0x15, 0x0d, 0x11, 0xc2, 0x52,
	0x5e, 0x57, 0xd8, 0x89, 0x81, 0x54, 0xb5, 0x09, 0x89, 0xe5, 0x54, 0xe8, 0x92, 0xaa, 0xf4, 0xec,
	0xca, 0xfd, 0x07, 0x6c, 0x2f, 0x7b, 0xb0, 0x51, 0x1e, 0xc2, 0xaa, 0x8e, 0xc1, 0xd2, 0x59, 0x14,
	0xa4, 0x51, 0x70, 0x3f, 0x96, 0xa1, 0x16, 0x0b, 0x72, 0x91, 0xdd, 0x81, 0xb5, 0x08, 0x53, 0xae,
	0xfa, 0x90, 0xad, 0x72, 0xb5, 0x3c, 0x0d, 0xd0, 0x01, 0x34, 0x93, 0xf1, 0xe5, 0x09, 0xe2, 0xdb,
	0xb8, 0x1a, 0x1a, 0xbd, 0xa0, 0x13, 0x72, 0x4e, 0x7c, 0xb4, 0x07, 0x0d, 0x12, 0x06, 0x89, 0xce,
	0x8a, 0xd6, 0x01, 0x12, 0x06, 0xb1, 0x86, 0x1a, 0x06, 0xa1, 0xcf, 0xc9, 0x84, 0xd8, 0x76, 0x58,
	0xe9, 0x25, 0x80, 0x3a, 0xb5, 0xbd, 0xe3, 0xaa, 0x39, 0xb5, 0x59, 0xa1, 0x7b, 0x6a, 0x04, 0x5e,
	0xc7, 0xf7, 0xbf, 0x66, 0xb6, 0x4d, 0xf0, 0xb5, 0xb9, 0x7a, 0x84, 0x60, 0x45, 0xbf, 0x2b, 0x4c,
	0xf5, 0xea, 0xdf, 0xea, 0xce, 0xd3, 0x05, 0xb6, 0x6e, 0x22, 0x31, 0x90, 0x0a, 0x46, 0x29, 0xd0,
	0x90, 0xca, 0xd8, 0x28, 0x18, 0x05, 0x05, 0xf5, 0x16, 0x4e, 0x25, 0xbe, 0x8c, 0x93, 0xc6, 0x94,
	0xf2, 0xba, 0x46, 0xd4, 0x25, 0x99, 0x98, 0x16, 0xe2, 0x46, 0xfc, 0x02, 0xb0, 0x62, 0xf7, 0x87,
	0x32, 0xd4, 0x63, 0x9a, 0xcf, 0xd8, 0x30, 0xc7, 0xf4, 0x83, 0xe5, 0xae, 0x6f, 0x72, 0x1a, 0x62,
	0xe8, 0x34, 0x40, 0x77, 0xa1, 0xa6, 0x33, 0x54, 0x49, 0x0d, 0xd7, 0x6b, 0x7a, 0x6d, 0x2e, 0xc3,
	0x34, 0xc6, 0x80, 0xcd, 0xc2, 0x14, 0xd1, 0x0d, 0x8d, 0xfe, 0x8b, 0xcd, 0x42, 0x45, 0xf5, 0x0e,
	0xac, 0x5f, 0xb1, 0xf1, 0x74, 0x42, 0x3c, 0x72, 0x6c, 0xa9, 0xae, 0x19, 0xe0, 0xe5, 0xf1, 0x27,
	0x99, 0xce, 0xd0, 0xb6, 0x96, 0xa3, 0x2d, 0xc5, 0x0a, 0xe7, 0xf1, 0xb3, 0xc8, 0xb2, 0xc2, 0x97,
	0x58, 0xe1, 0x3c, 0x79, 0x17, 0xc5, 0xe2, 0x03, 0x68, 0x1a, 0x31, 0x15, 0x5e, 0x7f, 0x3a, 0x27,
	0x3c, 0x6e, 0xa6, 0x1a, 0x3d, 0x15, 0x2f, 0x14, 0xe6, 0x7e, 0x5d, 0x01, 0x38, 0x9b, 0xfa, 0x97,
	0xf3, 0x0b, 0x36, 0x23, 0x5c, 0x97, 0xaf, 0xfa, 0xe1, 0x8d, 0xe8, 0x70, 0x24, 0x2d, 0x87, 0xa0,
	0xa1, 0x7f, 0x2b, 0x24, 0x51, 0x18, 0x8c, 0x19, 0xe3, 0x31, 0x97, 0x1a, 0x7a, 0xa5, 0x10, 0xf4,
	0x04, 0x90, 0xee, 0x73, 0xca, 0x66, 0x1f, 0x0f, 0xd5, 0x03, 0x6f, 0x4c, 0x2c, 0xab, 0xaa, 0x03,
	0x9e, 0x59, 0xc1, 0x85, 0xc2, 0xe3, 0xae, 0x68, 0x18, 0xb1, 0xba, 0x86, 0x60, 0xd5, 0x15, 0x4d,
	0x76, 0x18, 0x4d, 0x65, 0x57, 0x8e, 0xb2, 0x76, 0x57, 0xad, 0x5d, 0x39, 0xca, 0xdb, 0x95, 0xa3,
	0x65, 0xbb, 0x55, 0x6b, 0x57, 0x8e, 0xd2, 0x76, 0xff, 0x09, 0x0d, 0x8e, 0xc3, 0x4b, 0x1a, 0x0e,
	0xbd, 0x31, 0x15, 0x6a, 0x84, 0xa9, 0xce, 0xb3, 0xa7, 0x8b, 0x3a, 0x21, 0xa6, 0xd3, 0x33, 0x3a,
	0x67, 0x54, 0xc8, 0x97, 0xa1, 0xe4, 0xf3, 0x5e, 0x9d, 0x27, 0x48, 0xfb, 0x39, 0xb4, 0xb2, 0x0a,
	0xa8, 0x05, 0x95, 0x4b, 0x32, 0xb7, 0x1d, 0x50, 0xfd, 0x54, 0x83, 0x41, 0x3d, 0x35, 0x89, 0x65,
	0xcd, 0x2c, 0x9e, 0x95, 0x8f, 0x4b, 0xee, 0x8f, 0x25, 0xd8, 0x58, 0xea, 0x20, 0xb9, 0x1c, 0x6e,
	0xa7, 0xda, 0xb8, 0x69, 0x17, 0x49, 0xdf, 0xce, 0xf6, 0xb8, 0x4a, 0xbe, 0xc7, 0xed, 0x17, 0xbe,
	0x0d, 0xcc, 0x1b, 0xfc, 0xdc, 0x3c, 0x0d, 0x76, 0x60, 0xdd, 0x0c, 0xf7, 0x38, 0x87, 0xcb, 0xbd,
	0x9a, 0x01, 0x4c, 0x0e, 0xdb, 0x1e, 0x59, 0x4d, 0xf7, 0x48, 0xd5, 0x0e, 0xf4, 0xe3, 0xd5, 0x24,
	0xaf, 0xfe, 0x7d, 0xf4, 0x4b, 0x15, 0x36, 0x33, 0x9f, 0x64, 0xe8, 0x7f, 0x4b, 0x9f, 0x61, 0xe8,
	0x8e, 0xa6, 0x37, 0x3f, 0x73, 0xdb, 0x4e, 0x5e, 0x60, 0xba, 0xae, 0x7b, 0xfc, 0xfe, 0xc3, 0x4e,
	0xb9, 0x56, 0xfa, 0xea, 0xa7, 0x8f, 0xef, 0xca, 0x4f, 0x50, 0xbb, 0x7b, 0xf5, 0x97, 0xae, 0x3a,
	0x20, 0x0d, 0x07, 0xac, 0xfb, 0xff, 0xd4, 0xc8, 0xf9, 0xe2, 0x6d, 0x13, 0x35, 0xd2, 0x52, 0xf4,
	0x4d, 0x29, 0xf7, 0xc9, 0x97, 0x04, 0x90, 0x19, 0xb3, 0x49, 0x00, 0xd9, 0x41, 0xea, 0x3e, 0x7f,
	0xff, 0x61, 0xe7, 0x86, 0x76, 0xff, 0x37, 0x74, 0x5f, 0x39, 0x88, 0xf9, 0x2f, 0x08, 0x01, 0xa1,
	0x56, 0x56, 0x03, 0xbd, 0x2b, 0xe5, 0x3f, 0x32, 0xd1, 0x6e, 0xd6, 0x5d, 0x7a, 0x98, 0xb5, 0xef,
	0x7d, 0x42, 0x6a, 0x23, 0x7a, 0x91, 0xa2, 0xe4, 0x29, 0x7a, 0x90, 0xf6, 0xa8, 0xe7, 0x4f, 0x26,
	0xa8, 0x2d, 0x74, 0x33, 0xa7, 0x82, 0x06, 0xcb, 0xdf, 0xb8, 0xc8, 0x9c, 0xbf, 0x60, 0xb2, 0xb6,
	0xef, 0x16, 0x48, 0x6c, 0x20, 0xfb, 0xa9, 0x40, 0x6e, 0xb9, 0xfa, 0xe8, 0xdc, 0xe8, 0x69, 0x27,
	0xcf, 0x4a, 0x8f, 0xd1, 0x97, 0xc5, 0x5f, 0xce, 0x68, 0x2f, 0x7b, 0xc4, 0xec, 0x23, 0xbb, 0xbd,
	0xff, 0x1b, 0x1a, 0xd6, 0xbf, 0xbb, 0xb8, 0x1a, 0x07, 0xdd, 0x4e, 0x9f, 0xb1, 0xbb, 0x78, 0x5d,
	0xa2, 0x28, 0xfb, 0x81, 0x8e, 0xda, 0xda, 0x70, 0xe1, 0x67, 0x8c, 0x3d, 0x6c, 0xd1, 0xd3, 0xdd,
	0x7d, 0x94, 0x3a, 0xec, 0x8e, 0xfb, 0x09, 0x77, 0xea, 0xc8, 0xb3, 0xe5, 0xcf, 0x7f, 0xe4, 0x14,
	0xd8, 0xfc, 0x5d, 0x6f, 0x47, 0x29, 0x6f, 0x0f, 0xd1, 0x41, 0xb1, 0xb7, 0xe5, 0x8b, 0x7e, 0xd1,
	0x79, 0xfb, 0x64, 0x48, 0x65, 0x47, 0x7f, 0x4f, 0x74, 0x7c, 0x36, 0xe9, 0x06, 0xe4, 0x5a, 0xb2,
	0xa8, 0xeb, 0xb3, 0xc9, 0x84, 0x85, 0x9d, 0x21, 0x95, 0x5d, 0xfd, 0xe7, 0x89, 0xc2, 0x8f, 0x06,
	0xa4, 0x5f, 0xd5, 0xab, 0xbf, 0xfe, 0x1a, 0x00, 0x00, 0xff, 0xff, 0xfb, 0xcc, 0x16, 0x54, 0x98,
	0x11, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ActivityServiceClient is the client API for ActivityService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ActivityServiceClient interface {
	GetUserInfo(ctx context.Context, in *GetUserInfoRequest, opts ...grpc.CallOption) (*GetUserInfoResponse, error)
	GetActivityInfo(ctx context.Context, in *GetActivityRequest, opts ...grpc.CallOption) (*GetActivityResponse, error)
	// Get the activity award
	GetActivityAward(ctx context.Context, in *GetActivityAwardRequest, opts ...grpc.CallOption) (*GetActivityAwardResponse, error)
	// Receive the activity award
	ReceiveAward(ctx context.Context, in *ReceiveAwardRequest, opts ...grpc.CallOption) (*ReceiveAwardResponse, error)
	// 查询活动申购的token信息
	GetActivitySubscribe(ctx context.Context, in *GetActivitySubscribeRequest, opts ...grpc.CallOption) (*GetActivitySubscribeResponse, error)
	// 条件活动申购的token信息
	TokenSubscribe(ctx context.Context, in *TokenSubscribeRequest, opts ...grpc.CallOption) (*GetSubscribeResponse, error)
	GetSubscribe(ctx context.Context, in *GetSubscribeRequest, opts ...grpc.CallOption) (*GetSubscribeResponse, error)
}

type activityServiceClient struct {
	cc *grpc.ClientConn
}

func NewActivityServiceClient(cc *grpc.ClientConn) ActivityServiceClient {
	return &activityServiceClient{cc}
}

func (c *activityServiceClient) GetUserInfo(ctx context.Context, in *GetUserInfoRequest, opts ...grpc.CallOption) (*GetUserInfoResponse, error) {
	out := new(GetUserInfoResponse)
	err := c.cc.Invoke(ctx, "/dfe.ActivityService/GetUserInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *activityServiceClient) GetActivityInfo(ctx context.Context, in *GetActivityRequest, opts ...grpc.CallOption) (*GetActivityResponse, error) {
	out := new(GetActivityResponse)
	err := c.cc.Invoke(ctx, "/dfe.ActivityService/GetActivityInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *activityServiceClient) GetActivityAward(ctx context.Context, in *GetActivityAwardRequest, opts ...grpc.CallOption) (*GetActivityAwardResponse, error) {
	out := new(GetActivityAwardResponse)
	err := c.cc.Invoke(ctx, "/dfe.ActivityService/GetActivityAward", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *activityServiceClient) ReceiveAward(ctx context.Context, in *ReceiveAwardRequest, opts ...grpc.CallOption) (*ReceiveAwardResponse, error) {
	out := new(ReceiveAwardResponse)
	err := c.cc.Invoke(ctx, "/dfe.ActivityService/ReceiveAward", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *activityServiceClient) GetActivitySubscribe(ctx context.Context, in *GetActivitySubscribeRequest, opts ...grpc.CallOption) (*GetActivitySubscribeResponse, error) {
	out := new(GetActivitySubscribeResponse)
	err := c.cc.Invoke(ctx, "/dfe.ActivityService/GetActivitySubscribe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *activityServiceClient) TokenSubscribe(ctx context.Context, in *TokenSubscribeRequest, opts ...grpc.CallOption) (*GetSubscribeResponse, error) {
	out := new(GetSubscribeResponse)
	err := c.cc.Invoke(ctx, "/dfe.ActivityService/TokenSubscribe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *activityServiceClient) GetSubscribe(ctx context.Context, in *GetSubscribeRequest, opts ...grpc.CallOption) (*GetSubscribeResponse, error) {
	out := new(GetSubscribeResponse)
	err := c.cc.Invoke(ctx, "/dfe.ActivityService/GetSubscribe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ActivityServiceServer is the server API for ActivityService service.
type ActivityServiceServer interface {
	GetUserInfo(context.Context, *GetUserInfoRequest) (*GetUserInfoResponse, error)
	GetActivityInfo(context.Context, *GetActivityRequest) (*GetActivityResponse, error)
	// Get the activity award
	GetActivityAward(context.Context, *GetActivityAwardRequest) (*GetActivityAwardResponse, error)
	// Receive the activity award
	ReceiveAward(context.Context, *ReceiveAwardRequest) (*ReceiveAwardResponse, error)
	// 查询活动申购的token信息
	GetActivitySubscribe(context.Context, *GetActivitySubscribeRequest) (*GetActivitySubscribeResponse, error)
	// 条件活动申购的token信息
	TokenSubscribe(context.Context, *TokenSubscribeRequest) (*GetSubscribeResponse, error)
	GetSubscribe(context.Context, *GetSubscribeRequest) (*GetSubscribeResponse, error)
}

func RegisterActivityServiceServer(s *grpc.Server, srv ActivityServiceServer) {
	s.RegisterService(&_ActivityService_serviceDesc, srv)
}

func _ActivityService_GetUserInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActivityServiceServer).GetUserInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dfe.ActivityService/GetUserInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActivityServiceServer).GetUserInfo(ctx, req.(*GetUserInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ActivityService_GetActivityInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetActivityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActivityServiceServer).GetActivityInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dfe.ActivityService/GetActivityInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActivityServiceServer).GetActivityInfo(ctx, req.(*GetActivityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ActivityService_GetActivityAward_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetActivityAwardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActivityServiceServer).GetActivityAward(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dfe.ActivityService/GetActivityAward",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActivityServiceServer).GetActivityAward(ctx, req.(*GetActivityAwardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ActivityService_ReceiveAward_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReceiveAwardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActivityServiceServer).ReceiveAward(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dfe.ActivityService/ReceiveAward",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActivityServiceServer).ReceiveAward(ctx, req.(*ReceiveAwardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ActivityService_GetActivitySubscribe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetActivitySubscribeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActivityServiceServer).GetActivitySubscribe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dfe.ActivityService/GetActivitySubscribe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActivityServiceServer).GetActivitySubscribe(ctx, req.(*GetActivitySubscribeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ActivityService_TokenSubscribe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TokenSubscribeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActivityServiceServer).TokenSubscribe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dfe.ActivityService/TokenSubscribe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActivityServiceServer).TokenSubscribe(ctx, req.(*TokenSubscribeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ActivityService_GetSubscribe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSubscribeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActivityServiceServer).GetSubscribe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dfe.ActivityService/GetSubscribe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActivityServiceServer).GetSubscribe(ctx, req.(*GetSubscribeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ActivityService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dfe.ActivityService",
	HandlerType: (*ActivityServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUserInfo",
			Handler:    _ActivityService_GetUserInfo_Handler,
		},
		{
			MethodName: "GetActivityInfo",
			Handler:    _ActivityService_GetActivityInfo_Handler,
		},
		{
			MethodName: "GetActivityAward",
			Handler:    _ActivityService_GetActivityAward_Handler,
		},
		{
			MethodName: "ReceiveAward",
			Handler:    _ActivityService_ReceiveAward_Handler,
		},
		{
			MethodName: "GetActivitySubscribe",
			Handler:    _ActivityService_GetActivitySubscribe_Handler,
		},
		{
			MethodName: "TokenSubscribe",
			Handler:    _ActivityService_TokenSubscribe_Handler,
		},
		{
			MethodName: "GetSubscribe",
			Handler:    _ActivityService_GetSubscribe_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "activtiyservice.proto",
}
