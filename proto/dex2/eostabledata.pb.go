// Code generated by protoc-gen-go. DO NOT EDIT.
// source: eostabledata.proto

package dex2

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// zone_config表。
type ZoneConfigRow struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CashTokenId          uint64   `protobuf:"varint,2,opt,name=cash_token_id,json=cashTokenId,proto3" json:"cash_token_id,omitempty"`
	CashTokenSymbol      string   `protobuf:"bytes,3,opt,name=cash_token_symbol,json=cashTokenSymbol,proto3" json:"cash_token_symbol,omitempty"`
	ChainToken           string   `protobuf:"bytes,4,opt,name=chain_token,json=chainToken,proto3" json:"chain_token,omitempty"`
	MarketAddr           string   `protobuf:"bytes,5,opt,name=market_addr,json=marketAddr,proto3" json:"market_addr,omitempty"`
	MakerFeeRateE4       uint64   `protobuf:"varint,6,opt,name=maker_fee_rate_e4,json=makerFeeRateE4,proto3" json:"maker_fee_rate_e4,omitempty"`
	TakerFeeRateE4       uint64   `protobuf:"varint,7,opt,name=taker_fee_rate_e4,json=takerFeeRateE4,proto3" json:"taker_fee_rate_e4,omitempty"`
	WithdrawFeeE4        uint64   `protobuf:"varint,8,opt,name=withdraw_fee_e4,json=withdrawFeeE4,proto3" json:"withdraw_fee_e4,omitempty"`
	UpdateTime           uint64   `protobuf:"varint,9,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ZoneConfigRow) Reset()         { *m = ZoneConfigRow{} }
func (m *ZoneConfigRow) String() string { return proto.CompactTextString(m) }
func (*ZoneConfigRow) ProtoMessage()    {}
func (*ZoneConfigRow) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c455e836ab78d85, []int{0}
}

func (m *ZoneConfigRow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZoneConfigRow.Unmarshal(m, b)
}
func (m *ZoneConfigRow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZoneConfigRow.Marshal(b, m, deterministic)
}
func (m *ZoneConfigRow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZoneConfigRow.Merge(m, src)
}
func (m *ZoneConfigRow) XXX_Size() int {
	return xxx_messageInfo_ZoneConfigRow.Size(m)
}
func (m *ZoneConfigRow) XXX_DiscardUnknown() {
	xxx_messageInfo_ZoneConfigRow.DiscardUnknown(m)
}

var xxx_messageInfo_ZoneConfigRow proto.InternalMessageInfo

func (m *ZoneConfigRow) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ZoneConfigRow) GetCashTokenId() uint64 {
	if m != nil {
		return m.CashTokenId
	}
	return 0
}

func (m *ZoneConfigRow) GetCashTokenSymbol() string {
	if m != nil {
		return m.CashTokenSymbol
	}
	return ""
}

func (m *ZoneConfigRow) GetChainToken() string {
	if m != nil {
		return m.ChainToken
	}
	return ""
}

func (m *ZoneConfigRow) GetMarketAddr() string {
	if m != nil {
		return m.MarketAddr
	}
	return ""
}

func (m *ZoneConfigRow) GetMakerFeeRateE4() uint64 {
	if m != nil {
		return m.MakerFeeRateE4
	}
	return 0
}

func (m *ZoneConfigRow) GetTakerFeeRateE4() uint64 {
	if m != nil {
		return m.TakerFeeRateE4
	}
	return 0
}

func (m *ZoneConfigRow) GetWithdrawFeeE4() uint64 {
	if m != nil {
		return m.WithdrawFeeE4
	}
	return 0
}

func (m *ZoneConfigRow) GetUpdateTime() uint64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

// coin_type表，币种信息
type CoinType struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TokenSymbol          string   `protobuf:"bytes,2,opt,name=token_symbol,json=tokenSymbol,proto3" json:"token_symbol,omitempty"`
	TokenName            string   `protobuf:"bytes,3,opt,name=token_name,json=tokenName,proto3" json:"token_name,omitempty"`
	ChainToken           string   `protobuf:"bytes,4,opt,name=chain_token,json=chainToken,proto3" json:"chain_token,omitempty"`
	ChainDecimals        int32    `protobuf:"varint,5,opt,name=chain_decimals,json=chainDecimals,proto3" json:"chain_decimals,omitempty"`
	Website              string   `protobuf:"bytes,6,opt,name=website,proto3" json:"website,omitempty"`
	TokenAddr            string   `protobuf:"bytes,7,opt,name=token_addr,json=tokenAddr,proto3" json:"token_addr,omitempty"`
	TokenUrl             string   `protobuf:"bytes,8,opt,name=token_url,json=tokenUrl,proto3" json:"token_url,omitempty"`
	TokenLogo            string   `protobuf:"bytes,9,opt,name=token_logo,json=tokenLogo,proto3" json:"token_logo,omitempty"`
	InitPrice            string   `protobuf:"bytes,10,opt,name=init_price,json=initPrice,proto3" json:"init_price,omitempty"`
	TotalAmount          string   `protobuf:"bytes,11,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`
	Circulation          string   `protobuf:"bytes,12,opt,name=circulation,proto3" json:"circulation,omitempty"`
	DescEn               string   `protobuf:"bytes,13,opt,name=desc_en,json=descEn,proto3" json:"desc_en,omitempty"`
	DescZh               string   `protobuf:"bytes,14,opt,name=desc_zh,json=descZh,proto3" json:"desc_zh,omitempty"`
	DepositMinAmountE8   int64    `protobuf:"varint,15,opt,name=deposit_min_amount_e8,json=depositMinAmountE8,proto3" json:"deposit_min_amount_e8,omitempty"`
	WithdrawMinAmountE8  int64    `protobuf:"varint,16,opt,name=withdraw_min_amount_e8,json=withdrawMinAmountE8,proto3" json:"withdraw_min_amount_e8,omitempty"`
	Weight               int32    `protobuf:"varint,17,opt,name=weight,proto3" json:"weight,omitempty"`
	TradingStartTimeSec  int64    `protobuf:"varint,18,opt,name=trading_start_time_sec,json=tradingStartTimeSec,proto3" json:"trading_start_time_sec,omitempty"`
	DelistTimeSec        int64    `protobuf:"varint,19,opt,name=delist_time_sec,json=delistTimeSec,proto3" json:"delist_time_sec,omitempty"`
	EnableTimeSec        int64    `protobuf:"varint,20,opt,name=enable_time_sec,json=enableTimeSec,proto3" json:"enable_time_sec,omitempty"`
	CreateTime           int64    `protobuf:"varint,21,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime           int64    `protobuf:"varint,22,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CoinType) Reset()         { *m = CoinType{} }
func (m *CoinType) String() string { return proto.CompactTextString(m) }
func (*CoinType) ProtoMessage()    {}
func (*CoinType) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c455e836ab78d85, []int{1}
}

func (m *CoinType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoinType.Unmarshal(m, b)
}
func (m *CoinType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoinType.Marshal(b, m, deterministic)
}
func (m *CoinType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoinType.Merge(m, src)
}
func (m *CoinType) XXX_Size() int {
	return xxx_messageInfo_CoinType.Size(m)
}
func (m *CoinType) XXX_DiscardUnknown() {
	xxx_messageInfo_CoinType.DiscardUnknown(m)
}

var xxx_messageInfo_CoinType proto.InternalMessageInfo

func (m *CoinType) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CoinType) GetTokenSymbol() string {
	if m != nil {
		return m.TokenSymbol
	}
	return ""
}

func (m *CoinType) GetTokenName() string {
	if m != nil {
		return m.TokenName
	}
	return ""
}

func (m *CoinType) GetChainToken() string {
	if m != nil {
		return m.ChainToken
	}
	return ""
}

func (m *CoinType) GetChainDecimals() int32 {
	if m != nil {
		return m.ChainDecimals
	}
	return 0
}

func (m *CoinType) GetWebsite() string {
	if m != nil {
		return m.Website
	}
	return ""
}

func (m *CoinType) GetTokenAddr() string {
	if m != nil {
		return m.TokenAddr
	}
	return ""
}

func (m *CoinType) GetTokenUrl() string {
	if m != nil {
		return m.TokenUrl
	}
	return ""
}

func (m *CoinType) GetTokenLogo() string {
	if m != nil {
		return m.TokenLogo
	}
	return ""
}

func (m *CoinType) GetInitPrice() string {
	if m != nil {
		return m.InitPrice
	}
	return ""
}

func (m *CoinType) GetTotalAmount() string {
	if m != nil {
		return m.TotalAmount
	}
	return ""
}

func (m *CoinType) GetCirculation() string {
	if m != nil {
		return m.Circulation
	}
	return ""
}

func (m *CoinType) GetDescEn() string {
	if m != nil {
		return m.DescEn
	}
	return ""
}

func (m *CoinType) GetDescZh() string {
	if m != nil {
		return m.DescZh
	}
	return ""
}

func (m *CoinType) GetDepositMinAmountE8() int64 {
	if m != nil {
		return m.DepositMinAmountE8
	}
	return 0
}

func (m *CoinType) GetWithdrawMinAmountE8() int64 {
	if m != nil {
		return m.WithdrawMinAmountE8
	}
	return 0
}

func (m *CoinType) GetWeight() int32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *CoinType) GetTradingStartTimeSec() int64 {
	if m != nil {
		return m.TradingStartTimeSec
	}
	return 0
}

func (m *CoinType) GetDelistTimeSec() int64 {
	if m != nil {
		return m.DelistTimeSec
	}
	return 0
}

func (m *CoinType) GetEnableTimeSec() int64 {
	if m != nil {
		return m.EnableTimeSec
	}
	return 0
}

func (m *CoinType) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *CoinType) GetUpdateTime() int64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

// coin_pair表。
type CoinPairRow struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CashTokenId          uint64   `protobuf:"varint,2,opt,name=cash_token_id,json=cashTokenId,proto3" json:"cash_token_id,omitempty"`
	CashTokenSymbol      string   `protobuf:"bytes,3,opt,name=cash_token_symbol,json=cashTokenSymbol,proto3" json:"cash_token_symbol,omitempty"`
	StockTokenId         uint64   `protobuf:"varint,4,opt,name=stock_token_id,json=stockTokenId,proto3" json:"stock_token_id,omitempty"`
	StockTokenSymbol     string   `protobuf:"bytes,5,opt,name=stock_token_symbol,json=stockTokenSymbol,proto3" json:"stock_token_symbol,omitempty"`
	ChainToken           string   `protobuf:"bytes,6,opt,name=chain_token,json=chainToken,proto3" json:"chain_token,omitempty"`
	ValidDecimals        int32    `protobuf:"varint,7,opt,name=valid_decimals,json=validDecimals,proto3" json:"valid_decimals,omitempty"`
	OrderMinAmountE8     int64    `protobuf:"varint,8,opt,name=order_min_amount_e8,json=orderMinAmountE8,proto3" json:"order_min_amount_e8,omitempty"`
	OrderMinValueE8      int64    `protobuf:"varint,9,opt,name=order_min_value_e8,json=orderMinValueE8,proto3" json:"order_min_value_e8,omitempty"`
	Status               int32    `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`
	CreateTime           int64    `protobuf:"varint,11,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime           int64    `protobuf:"varint,12,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CoinPairRow) Reset()         { *m = CoinPairRow{} }
func (m *CoinPairRow) String() string { return proto.CompactTextString(m) }
func (*CoinPairRow) ProtoMessage()    {}
func (*CoinPairRow) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c455e836ab78d85, []int{2}
}

func (m *CoinPairRow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoinPairRow.Unmarshal(m, b)
}
func (m *CoinPairRow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoinPairRow.Marshal(b, m, deterministic)
}
func (m *CoinPairRow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoinPairRow.Merge(m, src)
}
func (m *CoinPairRow) XXX_Size() int {
	return xxx_messageInfo_CoinPairRow.Size(m)
}
func (m *CoinPairRow) XXX_DiscardUnknown() {
	xxx_messageInfo_CoinPairRow.DiscardUnknown(m)
}

var xxx_messageInfo_CoinPairRow proto.InternalMessageInfo

func (m *CoinPairRow) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CoinPairRow) GetCashTokenId() uint64 {
	if m != nil {
		return m.CashTokenId
	}
	return 0
}

func (m *CoinPairRow) GetCashTokenSymbol() string {
	if m != nil {
		return m.CashTokenSymbol
	}
	return ""
}

func (m *CoinPairRow) GetStockTokenId() uint64 {
	if m != nil {
		return m.StockTokenId
	}
	return 0
}

func (m *CoinPairRow) GetStockTokenSymbol() string {
	if m != nil {
		return m.StockTokenSymbol
	}
	return ""
}

func (m *CoinPairRow) GetChainToken() string {
	if m != nil {
		return m.ChainToken
	}
	return ""
}

func (m *CoinPairRow) GetValidDecimals() int32 {
	if m != nil {
		return m.ValidDecimals
	}
	return 0
}

func (m *CoinPairRow) GetOrderMinAmountE8() int64 {
	if m != nil {
		return m.OrderMinAmountE8
	}
	return 0
}

func (m *CoinPairRow) GetOrderMinValueE8() int64 {
	if m != nil {
		return m.OrderMinValueE8
	}
	return 0
}

func (m *CoinPairRow) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *CoinPairRow) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *CoinPairRow) GetUpdateTime() int64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

// contract_operate_sync表。
type ContractOperateSyncRow struct {
	OrderId              int64    `protobuf:"varint,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	Type                 int32    `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Trader               string   `protobuf:"bytes,3,opt,name=trader,proto3" json:"trader,omitempty"`
	BookId               int64    `protobuf:"varint,4,opt,name=book_id,json=bookId,proto3" json:"book_id,omitempty"`
	CancelBookId         int64    `protobuf:"varint,5,opt,name=cancel_book_id,json=cancelBookId,proto3" json:"cancel_book_id,omitempty"`
	Status               int32    `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContractOperateSyncRow) Reset()         { *m = ContractOperateSyncRow{} }
func (m *ContractOperateSyncRow) String() string { return proto.CompactTextString(m) }
func (*ContractOperateSyncRow) ProtoMessage()    {}
func (*ContractOperateSyncRow) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c455e836ab78d85, []int{3}
}

func (m *ContractOperateSyncRow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContractOperateSyncRow.Unmarshal(m, b)
}
func (m *ContractOperateSyncRow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContractOperateSyncRow.Marshal(b, m, deterministic)
}
func (m *ContractOperateSyncRow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContractOperateSyncRow.Merge(m, src)
}
func (m *ContractOperateSyncRow) XXX_Size() int {
	return xxx_messageInfo_ContractOperateSyncRow.Size(m)
}
func (m *ContractOperateSyncRow) XXX_DiscardUnknown() {
	xxx_messageInfo_ContractOperateSyncRow.DiscardUnknown(m)
}

var xxx_messageInfo_ContractOperateSyncRow proto.InternalMessageInfo

func (m *ContractOperateSyncRow) GetOrderId() int64 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

func (m *ContractOperateSyncRow) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *ContractOperateSyncRow) GetTrader() string {
	if m != nil {
		return m.Trader
	}
	return ""
}

func (m *ContractOperateSyncRow) GetBookId() int64 {
	if m != nil {
		return m.BookId
	}
	return 0
}

func (m *ContractOperateSyncRow) GetCancelBookId() int64 {
	if m != nil {
		return m.CancelBookId
	}
	return 0
}

func (m *ContractOperateSyncRow) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

// match_sequence表。
type GeneralMatchSequenceRow struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CashTokenSymbol      string   `protobuf:"bytes,2,opt,name=cash_token_symbol,json=cashTokenSymbol,proto3" json:"cash_token_symbol,omitempty"`
	StockTokenSymbol     string   `protobuf:"bytes,3,opt,name=stock_token_symbol,json=stockTokenSymbol,proto3" json:"stock_token_symbol,omitempty"`
	ChainToken           string   `protobuf:"bytes,4,opt,name=chain_token,json=chainToken,proto3" json:"chain_token,omitempty"`
	Sequence             int64    `protobuf:"varint,5,opt,name=sequence,proto3" json:"sequence,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GeneralMatchSequenceRow) Reset()         { *m = GeneralMatchSequenceRow{} }
func (m *GeneralMatchSequenceRow) String() string { return proto.CompactTextString(m) }
func (*GeneralMatchSequenceRow) ProtoMessage()    {}
func (*GeneralMatchSequenceRow) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c455e836ab78d85, []int{4}
}

func (m *GeneralMatchSequenceRow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeneralMatchSequenceRow.Unmarshal(m, b)
}
func (m *GeneralMatchSequenceRow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeneralMatchSequenceRow.Marshal(b, m, deterministic)
}
func (m *GeneralMatchSequenceRow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeneralMatchSequenceRow.Merge(m, src)
}
func (m *GeneralMatchSequenceRow) XXX_Size() int {
	return xxx_messageInfo_GeneralMatchSequenceRow.Size(m)
}
func (m *GeneralMatchSequenceRow) XXX_DiscardUnknown() {
	xxx_messageInfo_GeneralMatchSequenceRow.DiscardUnknown(m)
}

var xxx_messageInfo_GeneralMatchSequenceRow proto.InternalMessageInfo

func (m *GeneralMatchSequenceRow) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GeneralMatchSequenceRow) GetCashTokenSymbol() string {
	if m != nil {
		return m.CashTokenSymbol
	}
	return ""
}

func (m *GeneralMatchSequenceRow) GetStockTokenSymbol() string {
	if m != nil {
		return m.StockTokenSymbol
	}
	return ""
}

func (m *GeneralMatchSequenceRow) GetChainToken() string {
	if m != nil {
		return m.ChainToken
	}
	return ""
}

func (m *GeneralMatchSequenceRow) GetSequence() int64 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

// eos_order_match表。
type EosOrderMatchRow struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	OrderId              int64    `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	OrderTrader          string   `protobuf:"bytes,3,opt,name=order_trader,json=orderTrader,proto3" json:"order_trader,omitempty"`
	BookId               int64    `protobuf:"varint,4,opt,name=book_id,json=bookId,proto3" json:"book_id,omitempty"`
	Type                 int32    `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`
	MatchOrderId         int64    `protobuf:"varint,6,opt,name=match_order_id,json=matchOrderId,proto3" json:"match_order_id,omitempty"`
	MatchOrderTrader     string   `protobuf:"bytes,7,opt,name=match_order_trader,json=matchOrderTrader,proto3" json:"match_order_trader,omitempty"`
	MatchBookId          int64    `protobuf:"varint,8,opt,name=match_book_id,json=matchBookId,proto3" json:"match_book_id,omitempty"`
	CashTokenSymbol      string   `protobuf:"bytes,9,opt,name=cash_token_symbol,json=cashTokenSymbol,proto3" json:"cash_token_symbol,omitempty"`
	StockTokenSymbol     string   `protobuf:"bytes,10,opt,name=stock_token_symbol,json=stockTokenSymbol,proto3" json:"stock_token_symbol,omitempty"`
	ChainToken           string   `protobuf:"bytes,11,opt,name=chain_token,json=chainToken,proto3" json:"chain_token,omitempty"`
	Sequence             int64    `protobuf:"varint,12,opt,name=sequence,proto3" json:"sequence,omitempty"`
	CreateTime           uint64   `protobuf:"varint,13,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	Status               int32    `protobuf:"varint,14,opt,name=status,proto3" json:"status,omitempty"`
	Price                uint64   `protobuf:"varint,15,opt,name=price,proto3" json:"price,omitempty"`
	MatchPrice           uint64   `protobuf:"varint,16,opt,name=match_price,json=matchPrice,proto3" json:"match_price,omitempty"`
	Amount               uint64   `protobuf:"varint,17,opt,name=amount,proto3" json:"amount,omitempty"`
	MatchAmount          uint64   `protobuf:"varint,18,opt,name=match_amount,json=matchAmount,proto3" json:"match_amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EosOrderMatchRow) Reset()         { *m = EosOrderMatchRow{} }
func (m *EosOrderMatchRow) String() string { return proto.CompactTextString(m) }
func (*EosOrderMatchRow) ProtoMessage()    {}
func (*EosOrderMatchRow) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c455e836ab78d85, []int{5}
}

func (m *EosOrderMatchRow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EosOrderMatchRow.Unmarshal(m, b)
}
func (m *EosOrderMatchRow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EosOrderMatchRow.Marshal(b, m, deterministic)
}
func (m *EosOrderMatchRow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EosOrderMatchRow.Merge(m, src)
}
func (m *EosOrderMatchRow) XXX_Size() int {
	return xxx_messageInfo_EosOrderMatchRow.Size(m)
}
func (m *EosOrderMatchRow) XXX_DiscardUnknown() {
	xxx_messageInfo_EosOrderMatchRow.DiscardUnknown(m)
}

var xxx_messageInfo_EosOrderMatchRow proto.InternalMessageInfo

func (m *EosOrderMatchRow) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *EosOrderMatchRow) GetOrderId() int64 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

func (m *EosOrderMatchRow) GetOrderTrader() string {
	if m != nil {
		return m.OrderTrader
	}
	return ""
}

func (m *EosOrderMatchRow) GetBookId() int64 {
	if m != nil {
		return m.BookId
	}
	return 0
}

func (m *EosOrderMatchRow) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *EosOrderMatchRow) GetMatchOrderId() int64 {
	if m != nil {
		return m.MatchOrderId
	}
	return 0
}

func (m *EosOrderMatchRow) GetMatchOrderTrader() string {
	if m != nil {
		return m.MatchOrderTrader
	}
	return ""
}

func (m *EosOrderMatchRow) GetMatchBookId() int64 {
	if m != nil {
		return m.MatchBookId
	}
	return 0
}

func (m *EosOrderMatchRow) GetCashTokenSymbol() string {
	if m != nil {
		return m.CashTokenSymbol
	}
	return ""
}

func (m *EosOrderMatchRow) GetStockTokenSymbol() string {
	if m != nil {
		return m.StockTokenSymbol
	}
	return ""
}

func (m *EosOrderMatchRow) GetChainToken() string {
	if m != nil {
		return m.ChainToken
	}
	return ""
}

func (m *EosOrderMatchRow) GetSequence() int64 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

func (m *EosOrderMatchRow) GetCreateTime() uint64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *EosOrderMatchRow) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *EosOrderMatchRow) GetPrice() uint64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *EosOrderMatchRow) GetMatchPrice() uint64 {
	if m != nil {
		return m.MatchPrice
	}
	return 0
}

func (m *EosOrderMatchRow) GetAmount() uint64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *EosOrderMatchRow) GetMatchAmount() uint64 {
	if m != nil {
		return m.MatchAmount
	}
	return 0
}

// eos_order_pending表。
type EosOrderPendingRow struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Trader               string   `protobuf:"bytes,2,opt,name=trader,proto3" json:"trader,omitempty"`
	OrderId              int64    `protobuf:"varint,3,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	BookId               int64    `protobuf:"varint,4,opt,name=book_id,json=bookId,proto3" json:"book_id,omitempty"`
	MatchOrderId         int64    `protobuf:"varint,5,opt,name=match_order_id,json=matchOrderId,proto3" json:"match_order_id,omitempty"`
	MatchBookId          int64    `protobuf:"varint,6,opt,name=match_book_id,json=matchBookId,proto3" json:"match_book_id,omitempty"`
	Direction            int32    `protobuf:"varint,7,opt,name=direction,proto3" json:"direction,omitempty"`
	Side                 int32    `protobuf:"varint,8,opt,name=side,proto3" json:"side,omitempty"`
	Type                 int32    `protobuf:"varint,9,opt,name=type,proto3" json:"type,omitempty"`
	StockTokenSymbol     string   `protobuf:"bytes,10,opt,name=stock_token_symbol,json=stockTokenSymbol,proto3" json:"stock_token_symbol,omitempty"`
	CashTokenSymbol      string   `protobuf:"bytes,11,opt,name=cash_token_symbol,json=cashTokenSymbol,proto3" json:"cash_token_symbol,omitempty"`
	ChainToken           string   `protobuf:"bytes,12,opt,name=chain_token,json=chainToken,proto3" json:"chain_token,omitempty"`
	PriceE8              uint64   `protobuf:"varint,13,opt,name=price_e8,json=priceE8,proto3" json:"price_e8,omitempty"`
	AmountE8             uint64   `protobuf:"varint,14,opt,name=amount_e8,json=amountE8,proto3" json:"amount_e8,omitempty"`
	TotalE8              uint64   `protobuf:"varint,15,opt,name=total_e8,json=totalE8,proto3" json:"total_e8,omitempty"`
	FeeRateE4            uint64   `protobuf:"varint,16,opt,name=fee_rate_e4,json=feeRateE4,proto3" json:"fee_rate_e4,omitempty"`
	FeeTokenSymbol       string   `protobuf:"bytes,17,opt,name=fee_token_symbol,json=feeTokenSymbol,proto3" json:"fee_token_symbol,omitempty"`
	FeeE8                uint64   `protobuf:"varint,18,opt,name=fee_e8,json=feeE8,proto3" json:"fee_e8,omitempty"`
	CreateTime           uint64   `protobuf:"varint,19,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EosOrderPendingRow) Reset()         { *m = EosOrderPendingRow{} }
func (m *EosOrderPendingRow) String() string { return proto.CompactTextString(m) }
func (*EosOrderPendingRow) ProtoMessage()    {}
func (*EosOrderPendingRow) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c455e836ab78d85, []int{6}
}

func (m *EosOrderPendingRow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EosOrderPendingRow.Unmarshal(m, b)
}
func (m *EosOrderPendingRow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EosOrderPendingRow.Marshal(b, m, deterministic)
}
func (m *EosOrderPendingRow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EosOrderPendingRow.Merge(m, src)
}
func (m *EosOrderPendingRow) XXX_Size() int {
	return xxx_messageInfo_EosOrderPendingRow.Size(m)
}
func (m *EosOrderPendingRow) XXX_DiscardUnknown() {
	xxx_messageInfo_EosOrderPendingRow.DiscardUnknown(m)
}

var xxx_messageInfo_EosOrderPendingRow proto.InternalMessageInfo

func (m *EosOrderPendingRow) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *EosOrderPendingRow) GetTrader() string {
	if m != nil {
		return m.Trader
	}
	return ""
}

func (m *EosOrderPendingRow) GetOrderId() int64 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

func (m *EosOrderPendingRow) GetBookId() int64 {
	if m != nil {
		return m.BookId
	}
	return 0
}

func (m *EosOrderPendingRow) GetMatchOrderId() int64 {
	if m != nil {
		return m.MatchOrderId
	}
	return 0
}

func (m *EosOrderPendingRow) GetMatchBookId() int64 {
	if m != nil {
		return m.MatchBookId
	}
	return 0
}

func (m *EosOrderPendingRow) GetDirection() int32 {
	if m != nil {
		return m.Direction
	}
	return 0
}

func (m *EosOrderPendingRow) GetSide() int32 {
	if m != nil {
		return m.Side
	}
	return 0
}

func (m *EosOrderPendingRow) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *EosOrderPendingRow) GetStockTokenSymbol() string {
	if m != nil {
		return m.StockTokenSymbol
	}
	return ""
}

func (m *EosOrderPendingRow) GetCashTokenSymbol() string {
	if m != nil {
		return m.CashTokenSymbol
	}
	return ""
}

func (m *EosOrderPendingRow) GetChainToken() string {
	if m != nil {
		return m.ChainToken
	}
	return ""
}

func (m *EosOrderPendingRow) GetPriceE8() uint64 {
	if m != nil {
		return m.PriceE8
	}
	return 0
}

func (m *EosOrderPendingRow) GetAmountE8() uint64 {
	if m != nil {
		return m.AmountE8
	}
	return 0
}

func (m *EosOrderPendingRow) GetTotalE8() uint64 {
	if m != nil {
		return m.TotalE8
	}
	return 0
}

func (m *EosOrderPendingRow) GetFeeRateE4() uint64 {
	if m != nil {
		return m.FeeRateE4
	}
	return 0
}

func (m *EosOrderPendingRow) GetFeeTokenSymbol() string {
	if m != nil {
		return m.FeeTokenSymbol
	}
	return ""
}

func (m *EosOrderPendingRow) GetFeeE8() uint64 {
	if m != nil {
		return m.FeeE8
	}
	return 0
}

func (m *EosOrderPendingRow) GetCreateTime() uint64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

// eos_orders表。
type EosOrdersRow struct {
	OrderId              int64    `protobuf:"varint,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	Trader               string   `protobuf:"bytes,2,opt,name=trader,proto3" json:"trader,omitempty"`
	BookId               int64    `protobuf:"varint,3,opt,name=book_id,json=bookId,proto3" json:"book_id,omitempty"`
	Action               int32    `protobuf:"varint,4,opt,name=action,proto3" json:"action,omitempty"`
	Type                 int32    `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`
	StockTokenId         uint64   `protobuf:"varint,6,opt,name=stock_token_id,json=stockTokenId,proto3" json:"stock_token_id,omitempty"`
	StockTokenSymbol     string   `protobuf:"bytes,7,opt,name=stock_token_symbol,json=stockTokenSymbol,proto3" json:"stock_token_symbol,omitempty"`
	CashTokenId          uint64   `protobuf:"varint,8,opt,name=cash_token_id,json=cashTokenId,proto3" json:"cash_token_id,omitempty"`
	CashTokenSymbol      string   `protobuf:"bytes,9,opt,name=cash_token_symbol,json=cashTokenSymbol,proto3" json:"cash_token_symbol,omitempty"`
	ChainToken           string   `protobuf:"bytes,10,opt,name=chain_token,json=chainToken,proto3" json:"chain_token,omitempty"`
	PriceE8              uint64   `protobuf:"varint,11,opt,name=price_e8,json=priceE8,proto3" json:"price_e8,omitempty"`
	AmountTotalE8        uint64   `protobuf:"varint,12,opt,name=amount_total_e8,json=amountTotalE8,proto3" json:"amount_total_e8,omitempty"`
	AmountLeftE8         uint64   `protobuf:"varint,13,opt,name=amount_left_e8,json=amountLeftE8,proto3" json:"amount_left_e8,omitempty"`
	AccumulatedFundE8    uint64   `protobuf:"varint,14,opt,name=accumulated_fund_e8,json=accumulatedFundE8,proto3" json:"accumulated_fund_e8,omitempty"`
	OrderSign            string   `protobuf:"bytes,15,opt,name=order_sign,json=orderSign,proto3" json:"order_sign,omitempty"`
	CreateTime           int64    `protobuf:"varint,16,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	ExpireTime           int64    `protobuf:"varint,17,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`
	UpdateTime           int64    `protobuf:"varint,18,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	Status               int32    `protobuf:"varint,19,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EosOrdersRow) Reset()         { *m = EosOrdersRow{} }
func (m *EosOrdersRow) String() string { return proto.CompactTextString(m) }
func (*EosOrdersRow) ProtoMessage()    {}
func (*EosOrdersRow) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c455e836ab78d85, []int{7}
}

func (m *EosOrdersRow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EosOrdersRow.Unmarshal(m, b)
}
func (m *EosOrdersRow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EosOrdersRow.Marshal(b, m, deterministic)
}
func (m *EosOrdersRow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EosOrdersRow.Merge(m, src)
}
func (m *EosOrdersRow) XXX_Size() int {
	return xxx_messageInfo_EosOrdersRow.Size(m)
}
func (m *EosOrdersRow) XXX_DiscardUnknown() {
	xxx_messageInfo_EosOrdersRow.DiscardUnknown(m)
}

var xxx_messageInfo_EosOrdersRow proto.InternalMessageInfo

func (m *EosOrdersRow) GetOrderId() int64 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

func (m *EosOrdersRow) GetTrader() string {
	if m != nil {
		return m.Trader
	}
	return ""
}

func (m *EosOrdersRow) GetBookId() int64 {
	if m != nil {
		return m.BookId
	}
	return 0
}

func (m *EosOrdersRow) GetAction() int32 {
	if m != nil {
		return m.Action
	}
	return 0
}

func (m *EosOrdersRow) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *EosOrdersRow) GetStockTokenId() uint64 {
	if m != nil {
		return m.StockTokenId
	}
	return 0
}

func (m *EosOrdersRow) GetStockTokenSymbol() string {
	if m != nil {
		return m.StockTokenSymbol
	}
	return ""
}

func (m *EosOrdersRow) GetCashTokenId() uint64 {
	if m != nil {
		return m.CashTokenId
	}
	return 0
}

func (m *EosOrdersRow) GetCashTokenSymbol() string {
	if m != nil {
		return m.CashTokenSymbol
	}
	return ""
}

func (m *EosOrdersRow) GetChainToken() string {
	if m != nil {
		return m.ChainToken
	}
	return ""
}

func (m *EosOrdersRow) GetPriceE8() uint64 {
	if m != nil {
		return m.PriceE8
	}
	return 0
}

func (m *EosOrdersRow) GetAmountTotalE8() uint64 {
	if m != nil {
		return m.AmountTotalE8
	}
	return 0
}

func (m *EosOrdersRow) GetAmountLeftE8() uint64 {
	if m != nil {
		return m.AmountLeftE8
	}
	return 0
}

func (m *EosOrdersRow) GetAccumulatedFundE8() uint64 {
	if m != nil {
		return m.AccumulatedFundE8
	}
	return 0
}

func (m *EosOrdersRow) GetOrderSign() string {
	if m != nil {
		return m.OrderSign
	}
	return ""
}

func (m *EosOrdersRow) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *EosOrdersRow) GetExpireTime() int64 {
	if m != nil {
		return m.ExpireTime
	}
	return 0
}

func (m *EosOrdersRow) GetUpdateTime() int64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

func (m *EosOrdersRow) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

// user_asset用户资产记录表。
type UserAssetRow struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Trader               string   `protobuf:"bytes,2,opt,name=trader,proto3" json:"trader,omitempty"`
	TokenId              int64    `protobuf:"varint,3,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	TokenSymbol          string   `protobuf:"bytes,4,opt,name=token_symbol,json=tokenSymbol,proto3" json:"token_symbol,omitempty"`
	ChainToken           string   `protobuf:"bytes,5,opt,name=chain_token,json=chainToken,proto3" json:"chain_token,omitempty"`
	TotalE8              uint64   `protobuf:"varint,6,opt,name=total_e8,json=totalE8,proto3" json:"total_e8,omitempty"`
	FreezeE8             uint64   `protobuf:"varint,7,opt,name=freeze_e8,json=freezeE8,proto3" json:"freeze_e8,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserAssetRow) Reset()         { *m = UserAssetRow{} }
func (m *UserAssetRow) String() string { return proto.CompactTextString(m) }
func (*UserAssetRow) ProtoMessage()    {}
func (*UserAssetRow) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c455e836ab78d85, []int{8}
}

func (m *UserAssetRow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserAssetRow.Unmarshal(m, b)
}
func (m *UserAssetRow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserAssetRow.Marshal(b, m, deterministic)
}
func (m *UserAssetRow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserAssetRow.Merge(m, src)
}
func (m *UserAssetRow) XXX_Size() int {
	return xxx_messageInfo_UserAssetRow.Size(m)
}
func (m *UserAssetRow) XXX_DiscardUnknown() {
	xxx_messageInfo_UserAssetRow.DiscardUnknown(m)
}

var xxx_messageInfo_UserAssetRow proto.InternalMessageInfo

func (m *UserAssetRow) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UserAssetRow) GetTrader() string {
	if m != nil {
		return m.Trader
	}
	return ""
}

func (m *UserAssetRow) GetTokenId() int64 {
	if m != nil {
		return m.TokenId
	}
	return 0
}

func (m *UserAssetRow) GetTokenSymbol() string {
	if m != nil {
		return m.TokenSymbol
	}
	return ""
}

func (m *UserAssetRow) GetChainToken() string {
	if m != nil {
		return m.ChainToken
	}
	return ""
}

func (m *UserAssetRow) GetTotalE8() uint64 {
	if m != nil {
		return m.TotalE8
	}
	return 0
}

func (m *UserAssetRow) GetFreezeE8() uint64 {
	if m != nil {
		return m.FreezeE8
	}
	return 0
}

// 用户充提记录 eos_deposits eos_withdraws。
type UserIoRow struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Index                int64    `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	BlockNumber          int64    `protobuf:"varint,3,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	TxHash               string   `protobuf:"bytes,4,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	Trader               string   `protobuf:"bytes,5,opt,name=trader,proto3" json:"trader,omitempty"`
	TokenId              uint64   `protobuf:"varint,6,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	Chain                string   `protobuf:"bytes,7,opt,name=chain,proto3" json:"chain,omitempty"`
	TokenSymbol          string   `protobuf:"bytes,8,opt,name=token_symbol,json=tokenSymbol,proto3" json:"token_symbol,omitempty"`
	Amount               uint64   `protobuf:"varint,9,opt,name=amount,proto3" json:"amount,omitempty"`
	Status               int32    `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`
	CreateTime           int64    `protobuf:"varint,11,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime           int64    `protobuf:"varint,12,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserIoRow) Reset()         { *m = UserIoRow{} }
func (m *UserIoRow) String() string { return proto.CompactTextString(m) }
func (*UserIoRow) ProtoMessage()    {}
func (*UserIoRow) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c455e836ab78d85, []int{9}
}

func (m *UserIoRow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserIoRow.Unmarshal(m, b)
}
func (m *UserIoRow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserIoRow.Marshal(b, m, deterministic)
}
func (m *UserIoRow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserIoRow.Merge(m, src)
}
func (m *UserIoRow) XXX_Size() int {
	return xxx_messageInfo_UserIoRow.Size(m)
}
func (m *UserIoRow) XXX_DiscardUnknown() {
	xxx_messageInfo_UserIoRow.DiscardUnknown(m)
}

var xxx_messageInfo_UserIoRow proto.InternalMessageInfo

func (m *UserIoRow) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UserIoRow) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *UserIoRow) GetBlockNumber() int64 {
	if m != nil {
		return m.BlockNumber
	}
	return 0
}

func (m *UserIoRow) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *UserIoRow) GetTrader() string {
	if m != nil {
		return m.Trader
	}
	return ""
}

func (m *UserIoRow) GetTokenId() uint64 {
	if m != nil {
		return m.TokenId
	}
	return 0
}

func (m *UserIoRow) GetChain() string {
	if m != nil {
		return m.Chain
	}
	return ""
}

func (m *UserIoRow) GetTokenSymbol() string {
	if m != nil {
		return m.TokenSymbol
	}
	return ""
}

func (m *UserIoRow) GetAmount() uint64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *UserIoRow) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *UserIoRow) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *UserIoRow) GetUpdateTime() int64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

func init() {
	proto.RegisterType((*ZoneConfigRow)(nil), "dex.ZoneConfigRow")
	proto.RegisterType((*CoinType)(nil), "dex.CoinType")
	proto.RegisterType((*CoinPairRow)(nil), "dex.CoinPairRow")
	proto.RegisterType((*ContractOperateSyncRow)(nil), "dex.ContractOperateSyncRow")
	proto.RegisterType((*GeneralMatchSequenceRow)(nil), "dex.GeneralMatchSequenceRow")
	proto.RegisterType((*EosOrderMatchRow)(nil), "dex.EosOrderMatchRow")
	proto.RegisterType((*EosOrderPendingRow)(nil), "dex.EosOrderPendingRow")
	proto.RegisterType((*EosOrdersRow)(nil), "dex.EosOrdersRow")
	proto.RegisterType((*UserAssetRow)(nil), "dex.UserAssetRow")
	proto.RegisterType((*UserIoRow)(nil), "dex.UserIoRow")
}

func init() { proto.RegisterFile("eostabledata.proto", fileDescriptor_1c455e836ab78d85) }

var fileDescriptor_1c455e836ab78d85 = []byte{
	// 1489 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x58, 0x4d, 0x6f, 0xdb, 0x46,
	0x13, 0x86, 0xf5, 0xcd, 0xa1, 0x24, 0xcb, 0xb4, 0xe3, 0x30, 0x6f, 0xde, 0xf7, 0x8d, 0x23, 0xa4,
	0x81, 0x9b, 0xa6, 0x0e, 0xda, 0xe4, 0xe0, 0x6b, 0x92, 0x2a, 0xad, 0x81, 0x7c, 0x81, 0x76, 0x7a,
	0xc8, 0x85, 0x58, 0x91, 0x23, 0x69, 0x61, 0x7e, 0xa8, 0xe4, 0x2a, 0xb6, 0xf3, 0xc3, 0x7a, 0x6d,
	0x6f, 0x3d, 0x14, 0x05, 0xf2, 0x6b, 0x7a, 0x2c, 0x8a, 0x9d, 0x5d, 0x8a, 0xa4, 0xc4, 0xc4, 0xce,
	0xa1, 0xbd, 0x79, 0x9f, 0x79, 0x48, 0xcd, 0xce, 0xf3, 0xcc, 0xce, 0xd2, 0x60, 0x61, 0x9c, 0x0a,
	0x36, 0x0e, 0xd0, 0x67, 0x82, 0x1d, 0xcc, 0x93, 0x58, 0xc4, 0x56, 0xdd, 0xc7, 0xf3, 0xe1, 0x87,
	0x1a, 0xf4, 0xde, 0xc6, 0x11, 0x3e, 0x8d, 0xa3, 0x09, 0x9f, 0x3a, 0xf1, 0x99, 0xd5, 0x87, 0x1a,
	0xf7, 0xed, 0x8d, 0xbd, 0x8d, 0xfd, 0x86, 0x53, 0xe3, 0xbe, 0x35, 0x84, 0x9e, 0xc7, 0xd2, 0x99,
	0x2b, 0xe2, 0x53, 0x8c, 0x5c, 0xee, 0xdb, 0x35, 0x0a, 0x99, 0x12, 0x3c, 0x91, 0xd8, 0x91, 0x6f,
	0xdd, 0x83, 0xad, 0x02, 0x27, 0xbd, 0x08, 0xc7, 0x71, 0x60, 0xd7, 0xf7, 0x36, 0xf6, 0x0d, 0x67,
	0x73, 0xc9, 0x3b, 0x26, 0xd8, 0xba, 0x05, 0xa6, 0x37, 0x63, 0x3c, 0x52, 0x64, 0xbb, 0x41, 0x2c,
	0x20, 0x88, 0x68, 0x92, 0x10, 0xb2, 0xe4, 0x14, 0x85, 0xcb, 0x7c, 0x3f, 0xb1, 0x9b, 0x8a, 0xa0,
	0xa0, 0xc7, 0xbe, 0x9f, 0x58, 0x5f, 0xc2, 0x56, 0xc8, 0x4e, 0x31, 0x71, 0x27, 0x88, 0x6e, 0xc2,
	0x04, 0xba, 0xf8, 0xc8, 0x6e, 0x51, 0x56, 0x7d, 0x0a, 0x3c, 0x43, 0x74, 0x98, 0xc0, 0xd1, 0x23,
	0x49, 0x15, 0x6b, 0xd4, 0xb6, 0xa2, 0x8a, 0x32, 0xf5, 0x2e, 0x6c, 0x9e, 0x71, 0x31, 0xf3, 0x13,
	0x76, 0x46, 0x6c, 0x7c, 0x64, 0x77, 0x88, 0xd8, 0xcb, 0xe0, 0x67, 0x28, 0x79, 0xb7, 0xc0, 0x5c,
	0xcc, 0x7d, 0xf9, 0x2a, 0xc1, 0x43, 0xb4, 0x0d, 0xe2, 0x80, 0x82, 0x4e, 0x78, 0x88, 0xc3, 0x3f,
	0x9b, 0xd0, 0x79, 0x1a, 0xf3, 0xe8, 0xe4, 0x62, 0x8e, 0x6b, 0xd5, 0xbc, 0x0d, 0xdd, 0x52, 0x91,
	0x6a, 0xb4, 0x3b, 0x53, 0x14, 0x0a, 0xf4, 0x3f, 0x00, 0x45, 0x89, 0x58, 0x88, 0xba, 0x8a, 0x06,
	0x21, 0x2f, 0x59, 0x88, 0x97, 0xd7, 0xef, 0x0b, 0xe8, 0x2b, 0x82, 0x8f, 0x1e, 0x0f, 0x59, 0x90,
	0x52, 0x09, 0x9b, 0x4e, 0x8f, 0xd0, 0xef, 0x34, 0x68, 0xd9, 0xd0, 0x3e, 0xc3, 0x71, 0xca, 0x05,
	0x52, 0xed, 0x0c, 0x27, 0x5b, 0xe6, 0x09, 0x50, 0xfd, 0xdb, 0x85, 0x04, 0xa8, 0xfc, 0x37, 0x41,
	0x2d, 0xdc, 0x45, 0x12, 0x50, 0x89, 0x0c, 0xa7, 0x43, 0xc0, 0x9b, 0xa4, 0x90, 0x7c, 0x10, 0x4f,
	0x63, 0x2a, 0x4e, 0xf6, 0xec, 0xf3, 0x78, 0x1a, 0xcb, 0x30, 0x8f, 0xb8, 0x70, 0xe7, 0x09, 0xf7,
	0xd0, 0x06, 0x15, 0x96, 0xc8, 0x6b, 0x09, 0xa8, 0xea, 0x08, 0x16, 0xb8, 0x2c, 0x8c, 0x17, 0x91,
	0xb0, 0xcd, 0xac, 0x3a, 0x82, 0x05, 0x8f, 0x09, 0xb2, 0xf6, 0xc0, 0xf4, 0x78, 0xe2, 0x2d, 0x02,
	0x26, 0x78, 0x1c, 0xd9, 0x5d, 0xc5, 0x28, 0x40, 0xd6, 0x75, 0x68, 0xfb, 0x98, 0x7a, 0x2e, 0x46,
	0x76, 0x8f, 0xa2, 0x2d, 0xb9, 0x1c, 0xe5, 0x81, 0xf7, 0x33, 0xbb, 0x9f, 0x07, 0xde, 0xce, 0xac,
	0x6f, 0xe0, 0x9a, 0x8f, 0xf3, 0x38, 0xe5, 0xc2, 0x0d, 0x79, 0xa4, 0x7f, 0xdc, 0xc5, 0x43, 0x7b,
	0x73, 0x6f, 0x63, 0xbf, 0xee, 0x58, 0x3a, 0xf8, 0x82, 0x47, 0x2a, 0x89, 0xd1, 0xa1, 0xf5, 0x10,
	0x76, 0x97, 0x6e, 0x29, 0x3f, 0x33, 0xa0, 0x67, 0xb6, 0xb3, 0x68, 0xf1, 0xa1, 0x5d, 0x68, 0x9d,
	0x21, 0x9f, 0xce, 0x84, 0xbd, 0x45, 0x8a, 0xe8, 0x95, 0x7c, 0x99, 0x48, 0x98, 0xcf, 0xa3, 0xa9,
	0x9b, 0x0a, 0x96, 0x08, 0x72, 0x96, 0x9b, 0xa2, 0x67, 0x5b, 0xea, 0x65, 0x3a, 0x7a, 0x2c, 0x83,
	0xd2, 0x63, 0xc7, 0xe8, 0x49, 0xbf, 0xfa, 0x18, 0xf0, 0xb4, 0xc0, 0xde, 0x26, 0x76, 0x4f, 0xc1,
	0x05, 0x1e, 0x46, 0xb2, 0xf5, 0x73, 0xde, 0x8e, 0xe2, 0x29, 0x38, 0xe3, 0x49, 0x5f, 0x25, 0xb8,
	0xf4, 0xf5, 0x35, 0xe2, 0x80, 0x82, 0x24, 0x67, 0xd5, 0xf8, 0xbb, 0x8a, 0x50, 0x30, 0xfe, 0x2f,
	0x75, 0x30, 0xa5, 0xf1, 0x5f, 0x33, 0x9e, 0xfc, 0x1b, 0x27, 0xc9, 0x1d, 0xe8, 0xa7, 0x22, 0xf6,
	0x4e, 0xf3, 0x17, 0x36, 0xe8, 0x85, 0x5d, 0x42, 0xb3, 0x37, 0xde, 0x07, 0xab, 0xc8, 0xd2, 0xaf,
	0x54, 0xa7, 0xca, 0x20, 0x67, 0x56, 0x9f, 0x4e, 0xad, 0xaa, 0xee, 0x7a, 0xc7, 0x02, 0xee, 0xe7,
	0xdd, 0xd5, 0x56, 0xdd, 0x45, 0xe8, 0xb2, 0xbb, 0xbe, 0x86, 0xed, 0x38, 0xf1, 0x31, 0x59, 0x31,
	0x47, 0x87, 0x8a, 0x36, 0xa0, 0x50, 0xd1, 0x19, 0x5f, 0x81, 0x95, 0xd3, 0xdf, 0xb1, 0x60, 0x81,
	0x92, 0x6d, 0x10, 0x7b, 0x33, 0x63, 0xff, 0x28, 0x71, 0x65, 0xa3, 0x54, 0x30, 0xb1, 0x48, 0xa9,
	0x81, 0x9a, 0x8e, 0x5e, 0xad, 0x2a, 0x68, 0x5e, 0xa6, 0x60, 0x77, 0x4d, 0xc1, 0x9f, 0x37, 0x60,
	0xf7, 0x69, 0x1c, 0x89, 0x84, 0x79, 0xe2, 0xd5, 0x1c, 0xe5, 0x81, 0x79, 0x7c, 0x11, 0x79, 0x52,
	0xcc, 0x1b, 0xd0, 0x51, 0x19, 0x6a, 0x49, 0xeb, 0x4e, 0x9b, 0xd6, 0x47, 0xbe, 0x65, 0x41, 0x43,
	0x5c, 0xcc, 0x91, 0xe4, 0x6c, 0x3a, 0xf4, 0xb7, 0xcc, 0x51, 0x9a, 0x16, 0x13, 0x2d, 0x9e, 0x5e,
	0xc9, 0x1e, 0x1c, 0xc7, 0xf1, 0x69, 0x26, 0x56, 0xdd, 0x69, 0xc9, 0xe5, 0x91, 0x2f, 0xc5, 0xf4,
	0x58, 0xe4, 0x61, 0xe0, 0x66, 0xf1, 0x26, 0xc5, 0xbb, 0x0a, 0x7d, 0xa2, 0x58, 0xf9, 0xd6, 0x5b,
	0xc5, 0xad, 0x0f, 0x7f, 0xdd, 0x80, 0xeb, 0xdf, 0x63, 0x84, 0x09, 0x0b, 0x5e, 0x30, 0xe1, 0xcd,
	0x8e, 0xf1, 0xa7, 0x05, 0x46, 0x1e, 0x56, 0xd9, 0xb0, 0xd2, 0x62, 0xb5, 0x6a, 0x8b, 0x55, 0x9b,
	0xa7, 0x7e, 0x35, 0xf3, 0xac, 0x1f, 0xcd, 0xff, 0x81, 0x4e, 0xaa, 0x33, 0xd3, 0xdb, 0x5b, 0xae,
	0x87, 0xbf, 0x35, 0x60, 0x30, 0x8a, 0xd3, 0x57, 0x24, 0xb6, 0xdc, 0x43, 0x55, 0xee, 0x45, 0x15,
	0x6a, 0x65, 0x15, 0x6e, 0x43, 0x57, 0x85, 0x4a, 0x75, 0x37, 0x09, 0x3b, 0xb9, 0xa4, 0xf8, 0x99,
	0x82, 0xcd, 0x82, 0x82, 0x77, 0xa0, 0x1f, 0xca, 0x34, 0xdc, 0xe5, 0x0f, 0xb6, 0x94, 0x20, 0x84,
	0xbe, 0xd2, 0xbf, 0x7a, 0x1f, 0xac, 0x22, 0x4b, 0xff, 0xb6, 0x9a, 0x19, 0x83, 0x9c, 0xa9, 0x13,
	0x18, 0x42, 0x4f, 0xb1, 0xb3, 0x34, 0x54, 0x3f, 0x98, 0x04, 0x6a, 0x89, 0x2b, 0xe5, 0x31, 0x3e,
	0x47, 0x1e, 0xb8, 0x9a, 0x3c, 0xe6, 0x27, 0xe5, 0xe9, 0x96, 0xe5, 0x59, 0x6d, 0xae, 0x9e, 0x1a,
	0xfb, 0x85, 0xe6, 0xca, 0xad, 0xd9, 0x2f, 0x75, 0xe5, 0x0e, 0x34, 0xd5, 0xb4, 0xdb, 0xa4, 0x47,
	0xd4, 0x42, 0x5d, 0x72, 0x64, 0x25, 0x54, 0x6c, 0xa0, 0x5e, 0x47, 0x90, 0x1a, 0x85, 0xbb, 0xd0,
	0xd2, 0x43, 0x70, 0x8b, 0x62, 0x7a, 0x25, 0x65, 0x56, 0x0f, 0xea, 0xa8, 0xa5, 0xce, 0x50, 0xc2,
	0xd4, 0x71, 0x32, 0xfc, 0xd0, 0x00, 0x2b, 0x73, 0xd2, 0x6b, 0x8c, 0xe4, 0xe4, 0xa8, 0xf2, 0x52,
	0xde, 0xa2, 0xb5, 0x52, 0x8b, 0x16, 0x3d, 0x56, 0x2f, 0x7b, 0xec, 0x53, 0xdd, 0xbb, 0x62, 0x96,
	0x66, 0x85, 0x59, 0xd6, 0xe4, 0x6f, 0xad, 0xcb, 0xff, 0x5f, 0x30, 0x7c, 0x9e, 0xa0, 0x47, 0xd3,
	0x5d, 0x1d, 0xad, 0x39, 0x20, 0x8d, 0x9a, 0x72, 0x1f, 0xc9, 0x37, 0x4d, 0x87, 0xfe, 0x5e, 0x9a,
	0xd7, 0x28, 0x98, 0xf7, 0xf3, 0x8c, 0x51, 0x69, 0x39, 0xf3, 0x4a, 0xd7, 0xd7, 0xee, 0x9a, 0x89,
	0x6e, 0x40, 0x87, 0x34, 0x95, 0x07, 0xb8, 0x72, 0x49, 0x9b, 0xd6, 0xa3, 0x43, 0x79, 0x73, 0xca,
	0x47, 0x41, 0x9f, 0x62, 0x1d, 0x96, 0x8d, 0x80, 0x1b, 0xd0, 0x51, 0x77, 0x1f, 0x7d, 0xef, 0x68,
	0x38, 0x6d, 0x5a, 0x8f, 0x0e, 0xad, 0xff, 0x83, 0x59, 0xbc, 0xbf, 0x2a, 0xb3, 0x18, 0x93, 0xe5,
	0xd5, 0x75, 0x1f, 0x06, 0x32, 0x5e, 0x4a, 0x7f, 0x8b, 0x12, 0xeb, 0x4f, 0x10, 0x8b, 0xd9, 0x5f,
	0x83, 0x16, 0xdd, 0x6d, 0x0f, 0xb5, 0x6f, 0x9a, 0x13, 0x94, 0x89, 0xad, 0x98, 0x7b, 0x7b, 0xd5,
	0xdc, 0xc3, 0xbf, 0x1a, 0xd0, 0xcd, 0x2c, 0x95, 0x5e, 0x32, 0x0e, 0x3e, 0xe6, 0xab, 0x82, 0x79,
	0xea, 0x25, 0xf3, 0x48, 0xab, 0x2b, 0xbd, 0x1b, 0xaa, 0x73, 0xd8, 0x52, 0xec, 0xaa, 0x53, 0x69,
	0x65, 0xe6, 0xb7, 0xae, 0x3c, 0xf3, 0xdb, 0x1f, 0x91, 0x7f, 0xed, 0x5e, 0xd2, 0xb9, 0xe2, 0xbd,
	0xc4, 0xb8, 0x92, 0x45, 0xe0, 0x93, 0x16, 0x31, 0xcb, 0x16, 0xb9, 0x0b, 0x9b, 0xda, 0x22, 0x4b,
	0x33, 0x74, 0xd5, 0x57, 0x88, 0x82, 0x4f, 0xb4, 0x25, 0xee, 0x40, 0x5f, 0xf3, 0x02, 0x9c, 0x88,
	0xdc, 0x6b, 0x5d, 0x85, 0x3e, 0xc7, 0x89, 0xf4, 0xd4, 0x01, 0x6c, 0x33, 0xcf, 0x5b, 0x84, 0xf2,
	0x6a, 0x8c, 0xbe, 0x3b, 0x59, 0x44, 0x7e, 0x6e, 0xbd, 0xad, 0x42, 0xe8, 0xd9, 0x22, 0xf2, 0x47,
	0x87, 0xf2, 0x7a, 0xae, 0x54, 0x4d, 0xf9, 0x34, 0x22, 0x17, 0x1a, 0x8e, 0x41, 0xc8, 0x31, 0x9f,
	0x46, 0xab, 0x36, 0x19, 0x54, 0x5d, 0x30, 0xf0, 0x7c, 0xce, 0x13, 0x4d, 0xd8, 0x52, 0x04, 0x05,
	0x55, 0xdd, 0x40, 0xac, 0xd5, 0x1b, 0x48, 0xe1, 0x14, 0xdd, 0x2e, 0x0d, 0xf8, 0x3f, 0x36, 0xa0,
	0xfb, 0x26, 0xc5, 0xe4, 0x71, 0x9a, 0xa2, 0xf8, 0xcc, 0xd3, 0x6c, 0xa9, 0xab, 0x3e, 0xcd, 0x84,
	0xd6, 0x74, 0xf5, 0x5b, 0xac, 0xb1, 0xfe, 0x2d, 0xb6, 0x22, 0x65, 0xb3, 0x4a, 0xca, 0xa5, 0x50,
	0xad, 0x72, 0xd7, 0xde, 0x04, 0x63, 0x92, 0x20, 0xbe, 0x27, 0x99, 0xd5, 0x37, 0x67, 0x47, 0x01,
	0xa3, 0xc3, 0xe1, 0xef, 0x35, 0x30, 0xe4, 0x7e, 0x8e, 0xe2, 0xf2, 0x66, 0xea, 0xb4, 0x99, 0x1d,
	0x68, 0xf2, 0xc8, 0xc7, 0x73, 0x3d, 0xe3, 0xd5, 0x42, 0xe6, 0x3b, 0x0e, 0xa4, 0xab, 0xa3, 0x45,
	0x38, 0xd6, 0x13, 0xbe, 0xee, 0x98, 0x84, 0xbd, 0x24, 0x48, 0xf6, 0x98, 0x38, 0x77, 0x67, 0x2c,
	0x9d, 0xe9, 0xdd, 0xb4, 0xc4, 0xf9, 0x0f, 0x2c, 0x9d, 0x15, 0xca, 0xd3, 0xfc, 0x68, 0x79, 0x96,
	0xf9, 0xab, 0xf2, 0xec, 0x40, 0x93, 0x36, 0xaa, 0xfb, 0x46, 0x2d, 0xd6, 0x8a, 0xd6, 0x59, 0x2f,
	0x5a, 0x3e, 0xba, 0x8c, 0xd2, 0xe8, 0xfa, 0xc7, 0xee, 0xad, 0x4f, 0xee, 0xbf, 0xbd, 0x37, 0xe5,
	0xe2, 0x60, 0xcc, 0xc7, 0xf1, 0xf9, 0x81, 0x17, 0x87, 0x0f, 0x7c, 0x3c, 0x17, 0xf1, 0xfc, 0x81,
	0x17, 0x87, 0x61, 0x1c, 0x1d, 0x4c, 0xb9, 0x78, 0x40, 0xff, 0xf3, 0x90, 0xf8, 0xb7, 0xe3, 0x16,
	0xfd, 0xfd, 0xf0, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0x1b, 0xb1, 0x07, 0x88, 0x15, 0x11, 0x00,
	0x00,
}
