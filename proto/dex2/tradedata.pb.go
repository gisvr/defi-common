// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tradedata.proto

package dex2

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Depth struct {
	CashTokenId  string `protobuf:"bytes,1,opt,name=cash_token_id,json=cashTokenId,proto3" json:"cash_token_id,omitempty"`
	StockTokenId string `protobuf:"bytes,2,opt,name=stock_token_id,json=stockTokenId,proto3" json:"stock_token_id,omitempty"`
	// The timestamp in millisecond of this depth data.
	TimeMs int64 `protobuf:"varint,3,opt,name=time_ms,json=timeMs,proto3" json:"time_ms,omitempty"`
	// Entries selling the stock token for the cash token. Ascending by price.
	Asks []*DepthEntry `protobuf:"bytes,4,rep,name=asks,proto3" json:"asks,omitempty"`
	// Entries buying the stock token with the cash token. Descending by price.
	Bids                 []*DepthEntry `protobuf:"bytes,5,rep,name=bids,proto3" json:"bids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Depth) Reset()         { *m = Depth{} }
func (m *Depth) String() string { return proto.CompactTextString(m) }
func (*Depth) ProtoMessage()    {}
func (*Depth) Descriptor() ([]byte, []int) {
	return fileDescriptor_518d946d282ee0dd, []int{0}
}

func (m *Depth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Depth.Unmarshal(m, b)
}
func (m *Depth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Depth.Marshal(b, m, deterministic)
}
func (m *Depth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Depth.Merge(m, src)
}
func (m *Depth) XXX_Size() int {
	return xxx_messageInfo_Depth.Size(m)
}
func (m *Depth) XXX_DiscardUnknown() {
	xxx_messageInfo_Depth.DiscardUnknown(m)
}

var xxx_messageInfo_Depth proto.InternalMessageInfo

func (m *Depth) GetCashTokenId() string {
	if m != nil {
		return m.CashTokenId
	}
	return ""
}

func (m *Depth) GetStockTokenId() string {
	if m != nil {
		return m.StockTokenId
	}
	return ""
}

func (m *Depth) GetTimeMs() int64 {
	if m != nil {
		return m.TimeMs
	}
	return 0
}

func (m *Depth) GetAsks() []*DepthEntry {
	if m != nil {
		return m.Asks
	}
	return nil
}

func (m *Depth) GetBids() []*DepthEntry {
	if m != nil {
		return m.Bids
	}
	return nil
}

type DepthEntry struct {
	// The price level (multiplied by 1e8) of this entry.
	PriceE8 uint64 `protobuf:"varint,1,opt,name=price_e8,json=priceE8,proto3" json:"price_e8,omitempty"`
	// The total amount (multiplied by 1e8) of stock token available at this price.
	AmountE8 uint64 `protobuf:"varint,2,opt,name=amount_e8,json=amountE8,proto3" json:"amount_e8,omitempty"`
	// The total value of the entry WITHOUT multiplying 1e8.
	TotalValue           float64  `protobuf:"fixed64,3,opt,name=total_value,json=totalValue,proto3" json:"total_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DepthEntry) Reset()         { *m = DepthEntry{} }
func (m *DepthEntry) String() string { return proto.CompactTextString(m) }
func (*DepthEntry) ProtoMessage()    {}
func (*DepthEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_518d946d282ee0dd, []int{1}
}

func (m *DepthEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DepthEntry.Unmarshal(m, b)
}
func (m *DepthEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DepthEntry.Marshal(b, m, deterministic)
}
func (m *DepthEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DepthEntry.Merge(m, src)
}
func (m *DepthEntry) XXX_Size() int {
	return xxx_messageInfo_DepthEntry.Size(m)
}
func (m *DepthEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_DepthEntry.DiscardUnknown(m)
}

var xxx_messageInfo_DepthEntry proto.InternalMessageInfo

func (m *DepthEntry) GetPriceE8() uint64 {
	if m != nil {
		return m.PriceE8
	}
	return 0
}

func (m *DepthEntry) GetAmountE8() uint64 {
	if m != nil {
		return m.AmountE8
	}
	return 0
}

func (m *DepthEntry) GetTotalValue() float64 {
	if m != nil {
		return m.TotalValue
	}
	return 0
}

type TxInfo struct {
	TxHash               string   `protobuf:"bytes,1,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	BlockHeight          int64    `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	TimeSec              int64    `protobuf:"varint,3,opt,name=time_sec,json=timeSec,proto3" json:"time_sec,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TxInfo) Reset()         { *m = TxInfo{} }
func (m *TxInfo) String() string { return proto.CompactTextString(m) }
func (*TxInfo) ProtoMessage()    {}
func (*TxInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_518d946d282ee0dd, []int{2}
}

func (m *TxInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxInfo.Unmarshal(m, b)
}
func (m *TxInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxInfo.Marshal(b, m, deterministic)
}
func (m *TxInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxInfo.Merge(m, src)
}
func (m *TxInfo) XXX_Size() int {
	return xxx_messageInfo_TxInfo.Size(m)
}
func (m *TxInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TxInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TxInfo proto.InternalMessageInfo

func (m *TxInfo) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *TxInfo) GetBlockHeight() int64 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *TxInfo) GetTimeSec() int64 {
	if m != nil {
		return m.TimeSec
	}
	return 0
}

func init() {
	proto.RegisterType((*Depth)(nil), "dex.Depth")
	proto.RegisterType((*DepthEntry)(nil), "dex.DepthEntry")
	proto.RegisterType((*TxInfo)(nil), "dex.TxInfo")
}

func init() { proto.RegisterFile("tradedata.proto", fileDescriptor_518d946d282ee0dd) }

var fileDescriptor_518d946d282ee0dd = []byte{
	// 327 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0x41, 0x4f, 0xc2, 0x40,
	0x10, 0x85, 0x53, 0x0a, 0x05, 0xb6, 0x28, 0xc9, 0x5e, 0xac, 0xf1, 0x20, 0x56, 0x0f, 0xc4, 0x98,
	0x92, 0xe0, 0x85, 0xb3, 0x91, 0x04, 0x0e, 0x5e, 0x2a, 0xf1, 0xe0, 0xa5, 0xd9, 0x76, 0x47, 0xba,
	0x81, 0x76, 0x9b, 0xee, 0x60, 0xd6, 0xff, 0xe5, 0x0f, 0x34, 0x3b, 0x62, 0x38, 0x79, 0xdb, 0xf9,
	0xde, 0x4b, 0xe6, 0xed, 0x1b, 0x36, 0xc6, 0x56, 0x48, 0x90, 0x02, 0x45, 0xd2, 0xb4, 0x1a, 0x35,
	0xf7, 0x25, 0xd8, 0xf8, 0xdb, 0x63, 0xbd, 0x67, 0x68, 0xb0, 0xe4, 0x31, 0x3b, 0x2b, 0x84, 0x29,
	0x33, 0xd4, 0x3b, 0xa8, 0x33, 0x25, 0x23, 0x6f, 0xe2, 0x4d, 0x87, 0x69, 0xe8, 0xe0, 0xc6, 0xb1,
	0xb5, 0xe4, 0x77, 0xec, 0xdc, 0xa0, 0x2e, 0x76, 0x27, 0x53, 0x87, 0x4c, 0x23, 0xa2, 0x7f, 0xae,
	0x0b, 0xd6, 0x47, 0x55, 0x41, 0x56, 0x99, 0xc8, 0x9f, 0x78, 0x53, 0x3f, 0x0d, 0xdc, 0xf8, 0x62,
	0xf8, 0x2d, 0xeb, 0x0a, 0xb3, 0x33, 0x51, 0x77, 0xe2, 0x4f, 0xc3, 0xf9, 0x38, 0x91, 0x60, 0x13,
	0x5a, 0xbe, 0xac, 0xb1, 0xfd, 0x4a, 0x49, 0x74, 0xa6, 0x5c, 0x49, 0x13, 0xf5, 0xfe, 0x31, 0x39,
	0x31, 0x06, 0xc6, 0x4e, 0x8c, 0x5f, 0xb2, 0x41, 0xd3, 0xaa, 0x02, 0x32, 0x58, 0x50, 0xea, 0x6e,
	0xda, 0xa7, 0x79, 0xb9, 0xe0, 0x57, 0x6c, 0x28, 0x2a, 0x7d, 0xa8, 0xd1, 0x69, 0x1d, 0xd2, 0x06,
	0xbf, 0x60, 0xb9, 0xe0, 0xd7, 0x2c, 0x44, 0x8d, 0x62, 0x9f, 0x7d, 0x8a, 0xfd, 0x01, 0x28, 0xac,
	0x97, 0x32, 0x42, 0x6f, 0x8e, 0xc4, 0x19, 0x0b, 0x36, 0x76, 0x5d, 0x7f, 0x68, 0xfa, 0x93, 0xcd,
	0x4a, 0x61, 0xca, 0x63, 0x2f, 0x01, 0xda, 0x95, 0x30, 0x25, 0xbf, 0x61, 0xa3, 0x7c, 0xef, 0x2a,
	0x29, 0x41, 0x6d, 0x4b, 0xa4, 0x1d, 0x7e, 0x1a, 0x12, 0x5b, 0x11, 0x72, 0xf1, 0xa8, 0x0f, 0x03,
	0xc5, 0xb1, 0x10, 0xea, 0xe7, 0x15, 0x8a, 0xa7, 0x87, 0xf7, 0xfb, 0xad, 0xc2, 0x24, 0x57, 0xb9,
	0xb6, 0x49, 0xa1, 0xab, 0x99, 0x04, 0x8b, 0xba, 0x99, 0x15, 0xba, 0xaa, 0x74, 0x9d, 0x6c, 0x15,
	0xce, 0xe8, 0x58, 0x8e, 0xcf, 0xf3, 0x80, 0xde, 0x8f, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xcc,
	0x2f, 0x12, 0x8d, 0xcb, 0x01, 0x00, 0x00,
}
